{
  "video_id": "b11edbc0f738",
  "video_path": "videos/Python Tutorial for Beginners 5- Dictionaries - Working with Key-Value Pairs.mp4",
  "video_filename": "Python Tutorial for Beginners 5- Dictionaries - Working with Key-Value Pairs.mp4",
  "model_size": "medium",
  "language": "en",
  "duration": 0,
  "text": " Hey there. How's it going, everybody? In this video, we'll be learning about dictionaries and how we can work with them in Python. So dictionaries allow us to work with key value pairs. And if you're coming from another programming language, then you may have heard these called hash maps or associative arrays. So when I say that we'll be working with key value pairs, these are two linked values where the key is a unique identifier where we can find our data, and the value is that data. So we can actually think of that almost like a real physical dictionary where we look up word definitions. So in that example, each word that we look up would be the key, and the definition of that word would be the value. So let's go ahead and take a look at some examples. So let's say that we wanted to represent a student using a dictionary. So to do this, we could just create a student variable and set this equal to these curly braces, and that's how we start our dictionary. Now within our curly braces here, we will first put in our key. So let's say that we want a key of name. Now we're going to put in a colon to separate our key from our value. And for the name here, we'll just start off with John. And now let's add some more keys and values. And to separate these keys and values, we're going to put in a comma. So next, let's put in a key of age and a value of 25. And lastly, we'll put in a key of courses. And for this value, we'll pass in a list of courses here. So we'll say math and comp sci. So now let's print out our student and see how that looks. So if we save that and run it, then we can see that it prints out all of our keys and values. Now let's just get a value of one key. So to do this, we can add square brackets after our dictionary and then specify the key that we want to access. So I can put in square brackets here. And let's say that we want to access the name of that student dictionary. So I'll just pass in the name key and run that. And we can see that that gave us that value of that name key. Now if I wanted the courses instead, then I could just pass in that courses for the key. If I run that, then you can see that we got this list of math and comp sci. So we can see that these values in our dictionary can be just about anything. Our name is a string, our age is an integer, and the courses are a list. Now all of our keys are currently strings, but they can actually be any immutable data type. So usually, these will either be strings or integers, but there are a few more data types that they can be as well. So for example, instead of name as our key here, if for some reason we wanted this to be an integer, so I'll just pass in one. So a one is a valid key. And now if I access that key of one and run that, then you can see that that gave us John. But I'm going to set that back to be a string for now and keep that as name. So what happens if we try to access a key that doesn't exist? So for example, I'll try to access the key of phone for a phone number. So if we run this, then we can see that we get a key error because that phone key doesn't exist. Now throwing an error when a key doesn't exist might not always be what we want. So sometimes we might just want to return none or a default value. So to do this, we can use the dictionary's get method. So instead of accessing this key this way, if we were instead to say .get and use the get method. So let's just go ahead and get the name since we know that that key already exists. So if I run that, then we could see that that works just like before and gave us the value of John. But if I try to access a key that doesn't exist, so we'll try to access that phone key again, if I save that and run it, then by default, this get method returns none instead of an error. And we can also specify a default value for keys that don't exist. So to do this, we can just pass the default value that we want as a second argument to this get method. So I'll just put in a comma here and we'll put in a string that just says not found. So if I save that and run it, now we can see that for keys that don't exist, it returns not found. Okay, so let's look at how we can add a new entry to our dictionary. So let's say that we wanted to add that phone number to our student dictionary. And we'll set this just above our print statement here. So to do this, it's just as easy as saying student, and then we will set the key that we wanna set and set this equal to, and we'll just set this equal to a string of 555, 5555. And if I save that and run it, then we can see that it found that value of the phone key when we ran our print statement. Now, if a key already exists, if we set its value like this, then it will update the value of that key. So for example, if right below this, I was to say student and name is equal to, and we'll just pass in Jane. If I save that and then print out, I'll comment out that for now. If I print out our entire student variable, then we can see down here that the value for name was updated when we assigned it to Jane. Now we can also update values using the update method. Now this is especially useful when we want to update multiple values at a time. So for example, let's say that we wanted to add this phone number, update this name, and also update the age as well. So to do this all in one shot, we could say student.update, and this takes in a dictionary as an argument. And the dictionary is just everything that we either wanna add or update. So we can say that we wanna update that name to Jane, and we will update the age to, let's say, 26. And we also want to add this phone key, and that phone key will just set as what we had before, 555, 5555. Now if I save that and run it, then we can see that just by running this one statement, we updated the name to Jane, the age is now 26, and it has this new key of phone number. Okay, so now let's say that we wanted to delete a specific key and its value. Now one way that we can do this is by using the del keyword, which stands for delete. So let me just remove these updates here, and then we can say, so let's say that we wanted to delete the student's age. So it's as easy as just saying del student age, and now if we run this, then we can see that now the only keys that exist are name and courses, so that age key was deleted. Now another way that we can remove a key and value is with the pop method. So if you remember from our video on lists, the pop method will remove, but also return that value. So that allows us to grab the removed value with a variable. So we could say age is equal to, and do a student.pop, and what we wanna pop is that age. So if I save that, then we'll also print the age here below student. If I run that, then we can see that the age and value were removed from our dictionary, but we also created that age variable that contained the value that we popped off. So that popped off 25. Okay, now let's look at how we can loop through all the keys and values of our dictionary. So first, if we wanna see how many keys we have in our dictionary, then we can just print out its length with the len function. So if I was to say print len of student and run that, then we can see that it returns three, because we have three keys in our student dictionary. Now, if we wanted to see all of these keys, then we could just print out student.keys. If I run that, then we can see that that gave us all of the keys of our dictionary. If we wanted all of our values, then we could print out student.values. If I run that, you can see that that gives us only the values. Now, if we wanted to see the keys and values, then we could use this items method. If I run this, then we can see that now we have these pairs of key and value pairs. So we have name John, age 25, courses with the list. And we'll be coming back to these pairs in just one second. So if we wanted to loop through all of the keys and values in our dictionary, we might be tempted to loop through the same way we loop through our list. But if we just loop through our list without using any method, then it'll just loop through the keys. So for example, if you were to say four key in student, and then print out that key, if we run this, then we can see that it just looped through and printed out all of those keys. Now, in order to loop through the keys and values, we'll need to use that items method that we just saw a second ago. And so we'll just plug that in there. We'll say student.items. And now these come in a pair of two values. So instead of just key, we're also gonna have to access the value. So we can say four key value and student.items. And now we'll print out the key and that value. So if I run that, so we can see that each loop through this key variable was equal to each key. And this value variable was equal to each value. Okay, so I think that's gonna do it for this video. I hope that now everyone feels comfortable working with dictionaries and the functionality that's available to us. And in the next video, we'll be going over conditionals and how to write if, else, and elif statements. We'll also be learning more about bullions and Boolean operators. Now, if anyone has any questions about what we covered in this video, then feel free to ask in the comment section below and I'll do my best to answer those. And if you enjoy these tutorials and would like to support them, then there are several ways you can do that. The easiest way is to simply like the video and give it a thumbs up. And also it's a huge help to share these videos with anyone who you think would find them useful. And if you have the means, you can contribute through Patreon. And there's a link to that page in the description section below. Be sure to subscribe for future videos and thank you all for watching. Thank you.",
  "segments": [
    {
      "id": 0,
      "start": 0.0,
      "end": 0.5,
      "text": "Hey there.",
      "tokens": [
        50364,
        1911,
        456,
        13,
        50389
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 1,
      "start": 0.5,
      "end": 1.6600000000000001,
      "text": "How's it going, everybody?",
      "tokens": [
        50389,
        1012,
        311,
        309,
        516,
        11,
        2201,
        30,
        50447
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 2,
      "start": 1.6600000000000001,
      "end": 3.74,
      "text": "In this video, we'll be learning about dictionaries",
      "tokens": [
        50447,
        682,
        341,
        960,
        11,
        321,
        603,
        312,
        2539,
        466,
        22352,
        4889,
        50551
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 3,
      "start": 3.74,
      "end": 5.66,
      "text": "and how we can work with them in Python.",
      "tokens": [
        50551,
        293,
        577,
        321,
        393,
        589,
        365,
        552,
        294,
        15329,
        13,
        50647
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 4,
      "start": 5.66,
      "end": 8.08,
      "text": "So dictionaries allow us to work with key value pairs.",
      "tokens": [
        50647,
        407,
        22352,
        4889,
        2089,
        505,
        281,
        589,
        365,
        2141,
        2158,
        15494,
        13,
        50768
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 5,
      "start": 8.08,
      "end": 10.46,
      "text": "And if you're coming from another programming language,",
      "tokens": [
        50768,
        400,
        498,
        291,
        434,
        1348,
        490,
        1071,
        9410,
        2856,
        11,
        50887
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 6,
      "start": 10.46,
      "end": 12.34,
      "text": "then you may have heard these called hash maps",
      "tokens": [
        50887,
        550,
        291,
        815,
        362,
        2198,
        613,
        1219,
        22019,
        11317,
        50981
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 7,
      "start": 12.34,
      "end": 13.780000000000001,
      "text": "or associative arrays.",
      "tokens": [
        50981,
        420,
        4180,
        1166,
        41011,
        13,
        51053
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 8,
      "start": 13.780000000000001,
      "end": 16.580000000000002,
      "text": "So when I say that we'll be working with key value pairs,",
      "tokens": [
        51053,
        407,
        562,
        286,
        584,
        300,
        321,
        603,
        312,
        1364,
        365,
        2141,
        2158,
        15494,
        11,
        51193
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 9,
      "start": 16.580000000000002,
      "end": 18.18,
      "text": "these are two linked values where",
      "tokens": [
        51193,
        613,
        366,
        732,
        9408,
        4190,
        689,
        51273
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 10,
      "start": 18.18,
      "end": 21.900000000000002,
      "text": "the key is a unique identifier where we can find our data,",
      "tokens": [
        51273,
        264,
        2141,
        307,
        257,
        3845,
        45690,
        689,
        321,
        393,
        915,
        527,
        1412,
        11,
        51459
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 11,
      "start": 21.900000000000002,
      "end": 23.740000000000002,
      "text": "and the value is that data.",
      "tokens": [
        51459,
        293,
        264,
        2158,
        307,
        300,
        1412,
        13,
        51551
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 12,
      "start": 23.740000000000002,
      "end": 26.7,
      "text": "So we can actually think of that almost like a real physical",
      "tokens": [
        51551,
        407,
        321,
        393,
        767,
        519,
        295,
        300,
        1920,
        411,
        257,
        957,
        4001,
        51699
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 13,
      "start": 26.7,
      "end": 29.14,
      "text": "dictionary where we look up word definitions.",
      "tokens": [
        51699,
        25890,
        689,
        321,
        574,
        493,
        1349,
        21988,
        13,
        51821
      ],
      "temperature": 0.0,
      "avg_logprob": -0.126294591624266,
      "compression_ratio": 1.7981927710843373,
      "no_speech_prob": 0.1597478836774826,
      "confidence": 0.8402521163225174
    },
    {
      "id": 14,
      "start": 29.16,
      "end": 31.560000000000002,
      "text": "So in that example, each word that we look up",
      "tokens": [
        50365,
        407,
        294,
        300,
        1365,
        11,
        1184,
        1349,
        300,
        321,
        574,
        493,
        50485
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 15,
      "start": 31.560000000000002,
      "end": 34.160000000000004,
      "text": "would be the key, and the definition of that word",
      "tokens": [
        50485,
        576,
        312,
        264,
        2141,
        11,
        293,
        264,
        7123,
        295,
        300,
        1349,
        50615
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 16,
      "start": 34.160000000000004,
      "end": 35.36,
      "text": "would be the value.",
      "tokens": [
        50615,
        576,
        312,
        264,
        2158,
        13,
        50675
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 17,
      "start": 35.36,
      "end": 37.760000000000005,
      "text": "So let's go ahead and take a look at some examples.",
      "tokens": [
        50675,
        407,
        718,
        311,
        352,
        2286,
        293,
        747,
        257,
        574,
        412,
        512,
        5110,
        13,
        50795
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 18,
      "start": 37.760000000000005,
      "end": 40.5,
      "text": "So let's say that we wanted to represent a student using",
      "tokens": [
        50795,
        407,
        718,
        311,
        584,
        300,
        321,
        1415,
        281,
        2906,
        257,
        3107,
        1228,
        50932
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 19,
      "start": 40.5,
      "end": 41.4,
      "text": "a dictionary.",
      "tokens": [
        50932,
        257,
        25890,
        13,
        50977
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 20,
      "start": 41.4,
      "end": 44.32,
      "text": "So to do this, we could just create a student variable",
      "tokens": [
        50977,
        407,
        281,
        360,
        341,
        11,
        321,
        727,
        445,
        1884,
        257,
        3107,
        7006,
        51123
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 21,
      "start": 44.32,
      "end": 47.0,
      "text": "and set this equal to these curly braces,",
      "tokens": [
        51123,
        293,
        992,
        341,
        2681,
        281,
        613,
        32066,
        41537,
        11,
        51257
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 22,
      "start": 47.0,
      "end": 48.96,
      "text": "and that's how we start our dictionary.",
      "tokens": [
        51257,
        293,
        300,
        311,
        577,
        321,
        722,
        527,
        25890,
        13,
        51355
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 23,
      "start": 48.96,
      "end": 50.760000000000005,
      "text": "Now within our curly braces here,",
      "tokens": [
        51355,
        823,
        1951,
        527,
        32066,
        41537,
        510,
        11,
        51445
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 24,
      "start": 50.760000000000005,
      "end": 52.32,
      "text": "we will first put in our key.",
      "tokens": [
        51445,
        321,
        486,
        700,
        829,
        294,
        527,
        2141,
        13,
        51523
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 25,
      "start": 52.32,
      "end": 55.56,
      "text": "So let's say that we want a key of name.",
      "tokens": [
        51523,
        407,
        718,
        311,
        584,
        300,
        321,
        528,
        257,
        2141,
        295,
        1315,
        13,
        51685
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 26,
      "start": 55.56,
      "end": 57.28,
      "text": "Now we're going to put in a colon",
      "tokens": [
        51685,
        823,
        321,
        434,
        516,
        281,
        829,
        294,
        257,
        8255,
        51771
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11803995682889183,
      "compression_ratio": 1.9250936329588015,
      "no_speech_prob": 0.0010423356434330344,
      "confidence": 0.998957664356567
    },
    {
      "id": 27,
      "start": 57.28,
      "end": 59.58,
      "text": "to separate our key from our value.",
      "tokens": [
        50364,
        281,
        4994,
        527,
        2141,
        490,
        527,
        2158,
        13,
        50479
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08455798296424431,
      "compression_ratio": 1.849056603773585,
      "no_speech_prob": 0.02925518900156021,
      "confidence": 0.9707448109984398
    },
    {
      "id": 28,
      "start": 59.58,
      "end": 62.300000000000004,
      "text": "And for the name here, we'll just start off with John.",
      "tokens": [
        50479,
        400,
        337,
        264,
        1315,
        510,
        11,
        321,
        603,
        445,
        722,
        766,
        365,
        2619,
        13,
        50615
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08455798296424431,
      "compression_ratio": 1.849056603773585,
      "no_speech_prob": 0.02925518900156021,
      "confidence": 0.9707448109984398
    },
    {
      "id": 29,
      "start": 62.300000000000004,
      "end": 64.1,
      "text": "And now let's add some more keys and values.",
      "tokens": [
        50615,
        400,
        586,
        718,
        311,
        909,
        512,
        544,
        9317,
        293,
        4190,
        13,
        50705
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08455798296424431,
      "compression_ratio": 1.849056603773585,
      "no_speech_prob": 0.02925518900156021,
      "confidence": 0.9707448109984398
    },
    {
      "id": 30,
      "start": 64.1,
      "end": 66.02,
      "text": "And to separate these keys and values,",
      "tokens": [
        50705,
        400,
        281,
        4994,
        613,
        9317,
        293,
        4190,
        11,
        50801
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08455798296424431,
      "compression_ratio": 1.849056603773585,
      "no_speech_prob": 0.02925518900156021,
      "confidence": 0.9707448109984398
    },
    {
      "id": 31,
      "start": 66.02,
      "end": 67.58,
      "text": "we're going to put in a comma.",
      "tokens": [
        50801,
        321,
        434,
        516,
        281,
        829,
        294,
        257,
        22117,
        13,
        50879
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08455798296424431,
      "compression_ratio": 1.849056603773585,
      "no_speech_prob": 0.02925518900156021,
      "confidence": 0.9707448109984398
    },
    {
      "id": 32,
      "start": 67.58,
      "end": 72.58,
      "text": "So next, let's put in a key of age and a value of 25.",
      "tokens": [
        50879,
        407,
        958,
        11,
        718,
        311,
        829,
        294,
        257,
        2141,
        295,
        3205,
        293,
        257,
        2158,
        295,
        3552,
        13,
        51129
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08455798296424431,
      "compression_ratio": 1.849056603773585,
      "no_speech_prob": 0.02925518900156021,
      "confidence": 0.9707448109984398
    },
    {
      "id": 33,
      "start": 73.34,
      "end": 76.9,
      "text": "And lastly, we'll put in a key of courses.",
      "tokens": [
        51167,
        400,
        16386,
        11,
        321,
        603,
        829,
        294,
        257,
        2141,
        295,
        7712,
        13,
        51345
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08455798296424431,
      "compression_ratio": 1.849056603773585,
      "no_speech_prob": 0.02925518900156021,
      "confidence": 0.9707448109984398
    },
    {
      "id": 34,
      "start": 76.9,
      "end": 80.82,
      "text": "And for this value, we'll pass in a list of courses here.",
      "tokens": [
        51345,
        400,
        337,
        341,
        2158,
        11,
        321,
        603,
        1320,
        294,
        257,
        1329,
        295,
        7712,
        510,
        13,
        51541
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08455798296424431,
      "compression_ratio": 1.849056603773585,
      "no_speech_prob": 0.02925518900156021,
      "confidence": 0.9707448109984398
    },
    {
      "id": 35,
      "start": 80.82,
      "end": 83.76,
      "text": "So we'll say math and comp sci.",
      "tokens": [
        51541,
        407,
        321,
        603,
        584,
        5221,
        293,
        715,
        2180,
        13,
        51688
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08455798296424431,
      "compression_ratio": 1.849056603773585,
      "no_speech_prob": 0.02925518900156021,
      "confidence": 0.9707448109984398
    },
    {
      "id": 36,
      "start": 83.76,
      "end": 87.52000000000001,
      "text": "So now let's print out our student and see how that looks.",
      "tokens": [
        50364,
        407,
        586,
        718,
        311,
        4482,
        484,
        527,
        3107,
        293,
        536,
        577,
        300,
        1542,
        13,
        50552
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10124882719570533,
      "compression_ratio": 1.9211618257261411,
      "no_speech_prob": 0.0008097267709672451,
      "confidence": 0.9991902732290328
    },
    {
      "id": 37,
      "start": 87.52000000000001,
      "end": 89.76,
      "text": "So if we save that and run it, then we",
      "tokens": [
        50552,
        407,
        498,
        321,
        3155,
        300,
        293,
        1190,
        309,
        11,
        550,
        321,
        50664
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10124882719570533,
      "compression_ratio": 1.9211618257261411,
      "no_speech_prob": 0.0008097267709672451,
      "confidence": 0.9991902732290328
    },
    {
      "id": 38,
      "start": 89.76,
      "end": 92.66000000000001,
      "text": "can see that it prints out all of our keys and values.",
      "tokens": [
        50664,
        393,
        536,
        300,
        309,
        22305,
        484,
        439,
        295,
        527,
        9317,
        293,
        4190,
        13,
        50809
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10124882719570533,
      "compression_ratio": 1.9211618257261411,
      "no_speech_prob": 0.0008097267709672451,
      "confidence": 0.9991902732290328
    },
    {
      "id": 39,
      "start": 92.66000000000001,
      "end": 96.32000000000001,
      "text": "Now let's just get a value of one key.",
      "tokens": [
        50809,
        823,
        718,
        311,
        445,
        483,
        257,
        2158,
        295,
        472,
        2141,
        13,
        50992
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10124882719570533,
      "compression_ratio": 1.9211618257261411,
      "no_speech_prob": 0.0008097267709672451,
      "confidence": 0.9991902732290328
    },
    {
      "id": 40,
      "start": 96.32000000000001,
      "end": 100.12,
      "text": "So to do this, we can add square brackets after our dictionary",
      "tokens": [
        50992,
        407,
        281,
        360,
        341,
        11,
        321,
        393,
        909,
        3732,
        26179,
        934,
        527,
        25890,
        51182
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10124882719570533,
      "compression_ratio": 1.9211618257261411,
      "no_speech_prob": 0.0008097267709672451,
      "confidence": 0.9991902732290328
    },
    {
      "id": 41,
      "start": 100.12,
      "end": 102.68,
      "text": "and then specify the key that we want to access.",
      "tokens": [
        51182,
        293,
        550,
        16500,
        264,
        2141,
        300,
        321,
        528,
        281,
        2105,
        13,
        51310
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10124882719570533,
      "compression_ratio": 1.9211618257261411,
      "no_speech_prob": 0.0008097267709672451,
      "confidence": 0.9991902732290328
    },
    {
      "id": 42,
      "start": 102.68,
      "end": 104.56,
      "text": "So I can put in square brackets here.",
      "tokens": [
        51310,
        407,
        286,
        393,
        829,
        294,
        3732,
        26179,
        510,
        13,
        51404
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10124882719570533,
      "compression_ratio": 1.9211618257261411,
      "no_speech_prob": 0.0008097267709672451,
      "confidence": 0.9991902732290328
    },
    {
      "id": 43,
      "start": 104.56,
      "end": 107.52000000000001,
      "text": "And let's say that we want to access the name of that student",
      "tokens": [
        51404,
        400,
        718,
        311,
        584,
        300,
        321,
        528,
        281,
        2105,
        264,
        1315,
        295,
        300,
        3107,
        51552
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10124882719570533,
      "compression_ratio": 1.9211618257261411,
      "no_speech_prob": 0.0008097267709672451,
      "confidence": 0.9991902732290328
    },
    {
      "id": 44,
      "start": 107.52000000000001,
      "end": 108.26,
      "text": "dictionary.",
      "tokens": [
        51552,
        25890,
        13,
        51589
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10124882719570533,
      "compression_ratio": 1.9211618257261411,
      "no_speech_prob": 0.0008097267709672451,
      "confidence": 0.9991902732290328
    },
    {
      "id": 45,
      "start": 108.26,
      "end": 111.12,
      "text": "So I'll just pass in the name key and run that.",
      "tokens": [
        51589,
        407,
        286,
        603,
        445,
        1320,
        294,
        264,
        1315,
        2141,
        293,
        1190,
        300,
        13,
        51732
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10124882719570533,
      "compression_ratio": 1.9211618257261411,
      "no_speech_prob": 0.0008097267709672451,
      "confidence": 0.9991902732290328
    },
    {
      "id": 46,
      "start": 111.12,
      "end": 114.44,
      "text": "And we can see that that gave us that value of that name key.",
      "tokens": [
        50364,
        400,
        321,
        393,
        536,
        300,
        300,
        2729,
        505,
        300,
        2158,
        295,
        300,
        1315,
        2141,
        13,
        50530
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 47,
      "start": 114.44,
      "end": 116.76,
      "text": "Now if I wanted the courses instead,",
      "tokens": [
        50530,
        823,
        498,
        286,
        1415,
        264,
        7712,
        2602,
        11,
        50646
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 48,
      "start": 116.76,
      "end": 120.08000000000001,
      "text": "then I could just pass in that courses for the key.",
      "tokens": [
        50646,
        550,
        286,
        727,
        445,
        1320,
        294,
        300,
        7712,
        337,
        264,
        2141,
        13,
        50812
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 49,
      "start": 120.08000000000001,
      "end": 121.88000000000001,
      "text": "If I run that, then you can see that we",
      "tokens": [
        50812,
        759,
        286,
        1190,
        300,
        11,
        550,
        291,
        393,
        536,
        300,
        321,
        50902
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 50,
      "start": 121.88000000000001,
      "end": 124.2,
      "text": "got this list of math and comp sci.",
      "tokens": [
        50902,
        658,
        341,
        1329,
        295,
        5221,
        293,
        715,
        2180,
        13,
        51018
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 51,
      "start": 124.2,
      "end": 126.56,
      "text": "So we can see that these values in our dictionary",
      "tokens": [
        51018,
        407,
        321,
        393,
        536,
        300,
        613,
        4190,
        294,
        527,
        25890,
        51136
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 52,
      "start": 126.56,
      "end": 128.20000000000002,
      "text": "can be just about anything.",
      "tokens": [
        51136,
        393,
        312,
        445,
        466,
        1340,
        13,
        51218
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 53,
      "start": 128.20000000000002,
      "end": 132.12,
      "text": "Our name is a string, our age is an integer,",
      "tokens": [
        51218,
        2621,
        1315,
        307,
        257,
        6798,
        11,
        527,
        3205,
        307,
        364,
        24922,
        11,
        51414
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 54,
      "start": 132.12,
      "end": 134.44,
      "text": "and the courses are a list.",
      "tokens": [
        51414,
        293,
        264,
        7712,
        366,
        257,
        1329,
        13,
        51530
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 55,
      "start": 134.44,
      "end": 137.24,
      "text": "Now all of our keys are currently strings,",
      "tokens": [
        51530,
        823,
        439,
        295,
        527,
        9317,
        366,
        4362,
        13985,
        11,
        51670
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 56,
      "start": 137.24,
      "end": 140.04000000000002,
      "text": "but they can actually be any immutable data type.",
      "tokens": [
        51670,
        457,
        436,
        393,
        767,
        312,
        604,
        3397,
        32148,
        1412,
        2010,
        13,
        51810
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07250479797818768,
      "compression_ratio": 1.828793774319066,
      "no_speech_prob": 0.0025650637689977884,
      "confidence": 0.9974349362310022
    },
    {
      "id": 57,
      "start": 140.04,
      "end": 142.64,
      "text": "So usually, these will either be strings or integers,",
      "tokens": [
        50364,
        407,
        2673,
        11,
        613,
        486,
        2139,
        312,
        13985,
        420,
        41674,
        11,
        50494
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11310615248352517,
      "compression_ratio": 1.6926070038910506,
      "no_speech_prob": 0.0021671277936547995,
      "confidence": 0.9978328722063452
    },
    {
      "id": 58,
      "start": 142.64,
      "end": 145.44,
      "text": "but there are a few more data types that they can be as well.",
      "tokens": [
        50494,
        457,
        456,
        366,
        257,
        1326,
        544,
        1412,
        3467,
        300,
        436,
        393,
        312,
        382,
        731,
        13,
        50634
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11310615248352517,
      "compression_ratio": 1.6926070038910506,
      "no_speech_prob": 0.0021671277936547995,
      "confidence": 0.9978328722063452
    },
    {
      "id": 59,
      "start": 145.44,
      "end": 148.64,
      "text": "So for example, instead of name as our key here,",
      "tokens": [
        50634,
        407,
        337,
        1365,
        11,
        2602,
        295,
        1315,
        382,
        527,
        2141,
        510,
        11,
        50794
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11310615248352517,
      "compression_ratio": 1.6926070038910506,
      "no_speech_prob": 0.0021671277936547995,
      "confidence": 0.9978328722063452
    },
    {
      "id": 60,
      "start": 148.64,
      "end": 151.48,
      "text": "if for some reason we wanted this to be an integer,",
      "tokens": [
        50794,
        498,
        337,
        512,
        1778,
        321,
        1415,
        341,
        281,
        312,
        364,
        24922,
        11,
        50936
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11310615248352517,
      "compression_ratio": 1.6926070038910506,
      "no_speech_prob": 0.0021671277936547995,
      "confidence": 0.9978328722063452
    },
    {
      "id": 61,
      "start": 151.48,
      "end": 153.28,
      "text": "so I'll just pass in one.",
      "tokens": [
        50936,
        370,
        286,
        603,
        445,
        1320,
        294,
        472,
        13,
        51026
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11310615248352517,
      "compression_ratio": 1.6926070038910506,
      "no_speech_prob": 0.0021671277936547995,
      "confidence": 0.9978328722063452
    },
    {
      "id": 62,
      "start": 153.28,
      "end": 155.2,
      "text": "So a one is a valid key.",
      "tokens": [
        51026,
        407,
        257,
        472,
        307,
        257,
        7363,
        2141,
        13,
        51122
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11310615248352517,
      "compression_ratio": 1.6926070038910506,
      "no_speech_prob": 0.0021671277936547995,
      "confidence": 0.9978328722063452
    },
    {
      "id": 63,
      "start": 155.2,
      "end": 158.6,
      "text": "And now if I access that key of one and run that,",
      "tokens": [
        51122,
        400,
        586,
        498,
        286,
        2105,
        300,
        2141,
        295,
        472,
        293,
        1190,
        300,
        11,
        51292
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11310615248352517,
      "compression_ratio": 1.6926070038910506,
      "no_speech_prob": 0.0021671277936547995,
      "confidence": 0.9978328722063452
    },
    {
      "id": 64,
      "start": 158.6,
      "end": 160.76,
      "text": "then you can see that that gave us John.",
      "tokens": [
        51292,
        550,
        291,
        393,
        536,
        300,
        300,
        2729,
        505,
        2619,
        13,
        51400
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11310615248352517,
      "compression_ratio": 1.6926070038910506,
      "no_speech_prob": 0.0021671277936547995,
      "confidence": 0.9978328722063452
    },
    {
      "id": 65,
      "start": 160.76,
      "end": 165.16,
      "text": "But I'm going to set that back to be a string for now",
      "tokens": [
        51400,
        583,
        286,
        478,
        516,
        281,
        992,
        300,
        646,
        281,
        312,
        257,
        6798,
        337,
        586,
        51620
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11310615248352517,
      "compression_ratio": 1.6926070038910506,
      "no_speech_prob": 0.0021671277936547995,
      "confidence": 0.9978328722063452
    },
    {
      "id": 66,
      "start": 165.16,
      "end": 166.72,
      "text": "and keep that as name.",
      "tokens": [
        51620,
        293,
        1066,
        300,
        382,
        1315,
        13,
        51698
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11310615248352517,
      "compression_ratio": 1.6926070038910506,
      "no_speech_prob": 0.0021671277936547995,
      "confidence": 0.9978328722063452
    },
    {
      "id": 67,
      "start": 166.72,
      "end": 168.28,
      "text": "So what happens if we try to access",
      "tokens": [
        50364,
        407,
        437,
        2314,
        498,
        321,
        853,
        281,
        2105,
        50442
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 68,
      "start": 168.28,
      "end": 170.12,
      "text": "a key that doesn't exist?",
      "tokens": [
        50442,
        257,
        2141,
        300,
        1177,
        380,
        2514,
        30,
        50534
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 69,
      "start": 170.12,
      "end": 173.16,
      "text": "So for example, I'll try to access the key of phone",
      "tokens": [
        50534,
        407,
        337,
        1365,
        11,
        286,
        603,
        853,
        281,
        2105,
        264,
        2141,
        295,
        2593,
        50686
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 70,
      "start": 173.16,
      "end": 174.56,
      "text": "for a phone number.",
      "tokens": [
        50686,
        337,
        257,
        2593,
        1230,
        13,
        50756
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 71,
      "start": 174.56,
      "end": 177.72,
      "text": "So if we run this, then we can see that we get a key error",
      "tokens": [
        50756,
        407,
        498,
        321,
        1190,
        341,
        11,
        550,
        321,
        393,
        536,
        300,
        321,
        483,
        257,
        2141,
        6713,
        50914
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 72,
      "start": 177.72,
      "end": 180.4,
      "text": "because that phone key doesn't exist.",
      "tokens": [
        50914,
        570,
        300,
        2593,
        2141,
        1177,
        380,
        2514,
        13,
        51048
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 73,
      "start": 180.4,
      "end": 183.16,
      "text": "Now throwing an error when a key doesn't exist",
      "tokens": [
        51048,
        823,
        10238,
        364,
        6713,
        562,
        257,
        2141,
        1177,
        380,
        2514,
        51186
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 74,
      "start": 183.16,
      "end": 185.07999999999998,
      "text": "might not always be what we want.",
      "tokens": [
        51186,
        1062,
        406,
        1009,
        312,
        437,
        321,
        528,
        13,
        51282
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 75,
      "start": 185.07999999999998,
      "end": 187.2,
      "text": "So sometimes we might just want to return",
      "tokens": [
        51282,
        407,
        2171,
        321,
        1062,
        445,
        528,
        281,
        2736,
        51388
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 76,
      "start": 187.2,
      "end": 189.16,
      "text": "none or a default value.",
      "tokens": [
        51388,
        6022,
        420,
        257,
        7576,
        2158,
        13,
        51486
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 77,
      "start": 189.16,
      "end": 192.52,
      "text": "So to do this, we can use the dictionary's get method.",
      "tokens": [
        51486,
        407,
        281,
        360,
        341,
        11,
        321,
        393,
        764,
        264,
        25890,
        311,
        483,
        3170,
        13,
        51654
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 78,
      "start": 192.52,
      "end": 196.34,
      "text": "So instead of accessing this key this way,",
      "tokens": [
        51654,
        407,
        2602,
        295,
        26440,
        341,
        2141,
        341,
        636,
        11,
        51845
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08771425053693246,
      "compression_ratio": 1.8666666666666667,
      "no_speech_prob": 0.0010653826175257564,
      "confidence": 0.9989346173824742
    },
    {
      "id": 79,
      "start": 196.34,
      "end": 201.14000000000001,
      "text": "if we were instead to say .get and use the get method.",
      "tokens": [
        50364,
        498,
        321,
        645,
        2602,
        281,
        584,
        2411,
        847,
        293,
        764,
        264,
        483,
        3170,
        13,
        50604
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 80,
      "start": 201.14000000000001,
      "end": 202.94,
      "text": "So let's just go ahead and get the name",
      "tokens": [
        50604,
        407,
        718,
        311,
        445,
        352,
        2286,
        293,
        483,
        264,
        1315,
        50694
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 81,
      "start": 202.94,
      "end": 205.14000000000001,
      "text": "since we know that that key already exists.",
      "tokens": [
        50694,
        1670,
        321,
        458,
        300,
        300,
        2141,
        1217,
        8198,
        13,
        50804
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 82,
      "start": 205.14000000000001,
      "end": 207.54,
      "text": "So if I run that, then we could see that that works",
      "tokens": [
        50804,
        407,
        498,
        286,
        1190,
        300,
        11,
        550,
        321,
        727,
        536,
        300,
        300,
        1985,
        50924
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 83,
      "start": 207.54,
      "end": 210.38,
      "text": "just like before and gave us the value of John.",
      "tokens": [
        50924,
        445,
        411,
        949,
        293,
        2729,
        505,
        264,
        2158,
        295,
        2619,
        13,
        51066
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 84,
      "start": 210.38,
      "end": 212.9,
      "text": "But if I try to access a key that doesn't exist,",
      "tokens": [
        51066,
        583,
        498,
        286,
        853,
        281,
        2105,
        257,
        2141,
        300,
        1177,
        380,
        2514,
        11,
        51192
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 85,
      "start": 212.9,
      "end": 215.38,
      "text": "so we'll try to access that phone key again,",
      "tokens": [
        51192,
        370,
        321,
        603,
        853,
        281,
        2105,
        300,
        2593,
        2141,
        797,
        11,
        51316
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 86,
      "start": 215.38,
      "end": 218.54,
      "text": "if I save that and run it, then by default,",
      "tokens": [
        51316,
        498,
        286,
        3155,
        300,
        293,
        1190,
        309,
        11,
        550,
        538,
        7576,
        11,
        51474
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 87,
      "start": 218.54,
      "end": 221.7,
      "text": "this get method returns none instead of an error.",
      "tokens": [
        51474,
        341,
        483,
        3170,
        11247,
        6022,
        2602,
        295,
        364,
        6713,
        13,
        51632
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 88,
      "start": 221.7,
      "end": 224.02,
      "text": "And we can also specify a default value",
      "tokens": [
        51632,
        400,
        321,
        393,
        611,
        16500,
        257,
        7576,
        2158,
        51748
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 89,
      "start": 224.02,
      "end": 225.66,
      "text": "for keys that don't exist.",
      "tokens": [
        51748,
        337,
        9317,
        300,
        500,
        380,
        2514,
        13,
        51830
      ],
      "temperature": 0.0,
      "avg_logprob": -0.079481024137685,
      "compression_ratio": 1.8191881918819188,
      "no_speech_prob": 0.00011941515549551696,
      "confidence": 0.9998805848445045
    },
    {
      "id": 90,
      "start": 225.66,
      "end": 228.26,
      "text": "So to do this, we can just pass the default value",
      "tokens": [
        50364,
        407,
        281,
        360,
        341,
        11,
        321,
        393,
        445,
        1320,
        264,
        7576,
        2158,
        50494
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 91,
      "start": 228.26,
      "end": 231.62,
      "text": "that we want as a second argument to this get method.",
      "tokens": [
        50494,
        300,
        321,
        528,
        382,
        257,
        1150,
        6770,
        281,
        341,
        483,
        3170,
        13,
        50662
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 92,
      "start": 231.62,
      "end": 233.28,
      "text": "So I'll just put in a comma here",
      "tokens": [
        50662,
        407,
        286,
        603,
        445,
        829,
        294,
        257,
        22117,
        510,
        50745
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 93,
      "start": 233.28,
      "end": 236.96,
      "text": "and we'll put in a string that just says not found.",
      "tokens": [
        50745,
        293,
        321,
        603,
        829,
        294,
        257,
        6798,
        300,
        445,
        1619,
        406,
        1352,
        13,
        50929
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 94,
      "start": 236.96,
      "end": 238.74,
      "text": "So if I save that and run it,",
      "tokens": [
        50929,
        407,
        498,
        286,
        3155,
        300,
        293,
        1190,
        309,
        11,
        51018
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 95,
      "start": 238.74,
      "end": 240.78,
      "text": "now we can see that for keys that don't exist,",
      "tokens": [
        51018,
        586,
        321,
        393,
        536,
        300,
        337,
        9317,
        300,
        500,
        380,
        2514,
        11,
        51120
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 96,
      "start": 240.78,
      "end": 242.85999999999999,
      "text": "it returns not found.",
      "tokens": [
        51120,
        309,
        11247,
        406,
        1352,
        13,
        51224
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 97,
      "start": 242.85999999999999,
      "end": 245.51999999999998,
      "text": "Okay, so let's look at how we can add a new entry",
      "tokens": [
        51224,
        1033,
        11,
        370,
        718,
        311,
        574,
        412,
        577,
        321,
        393,
        909,
        257,
        777,
        8729,
        51357
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 98,
      "start": 245.51999999999998,
      "end": 246.57999999999998,
      "text": "to our dictionary.",
      "tokens": [
        51357,
        281,
        527,
        25890,
        13,
        51410
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 99,
      "start": 246.57999999999998,
      "end": 248.98,
      "text": "So let's say that we wanted to add that phone number",
      "tokens": [
        51410,
        407,
        718,
        311,
        584,
        300,
        321,
        1415,
        281,
        909,
        300,
        2593,
        1230,
        51530
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 100,
      "start": 248.98,
      "end": 250.38,
      "text": "to our student dictionary.",
      "tokens": [
        51530,
        281,
        527,
        3107,
        25890,
        13,
        51600
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 101,
      "start": 250.38,
      "end": 253.42,
      "text": "And we'll set this just above our print statement here.",
      "tokens": [
        51600,
        400,
        321,
        603,
        992,
        341,
        445,
        3673,
        527,
        4482,
        5629,
        510,
        13,
        51752
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06145185273269127,
      "compression_ratio": 1.8088235294117647,
      "no_speech_prob": 0.00028537854086607695,
      "confidence": 0.9997146214591339
    },
    {
      "id": 102,
      "start": 253.42,
      "end": 256.74,
      "text": "So to do this, it's just as easy as saying student,",
      "tokens": [
        50364,
        407,
        281,
        360,
        341,
        11,
        309,
        311,
        445,
        382,
        1858,
        382,
        1566,
        3107,
        11,
        50530
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 103,
      "start": 256.74,
      "end": 259.78,
      "text": "and then we will set the key that we wanna set",
      "tokens": [
        50530,
        293,
        550,
        321,
        486,
        992,
        264,
        2141,
        300,
        321,
        1948,
        992,
        50682
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 104,
      "start": 259.78,
      "end": 262.18,
      "text": "and set this equal to, and we'll just set this equal",
      "tokens": [
        50682,
        293,
        992,
        341,
        2681,
        281,
        11,
        293,
        321,
        603,
        445,
        992,
        341,
        2681,
        50802
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 105,
      "start": 262.18,
      "end": 265.86,
      "text": "to a string of 555, 5555.",
      "tokens": [
        50802,
        281,
        257,
        6798,
        295,
        12330,
        20,
        11,
        12330,
        13622,
        13,
        50986
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 106,
      "start": 265.86,
      "end": 267.97999999999996,
      "text": "And if I save that and run it,",
      "tokens": [
        50986,
        400,
        498,
        286,
        3155,
        300,
        293,
        1190,
        309,
        11,
        51092
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 107,
      "start": 267.97999999999996,
      "end": 269.91999999999996,
      "text": "then we can see that it found that value of the phone key",
      "tokens": [
        51092,
        550,
        321,
        393,
        536,
        300,
        309,
        1352,
        300,
        2158,
        295,
        264,
        2593,
        2141,
        51189
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 108,
      "start": 269.91999999999996,
      "end": 271.62,
      "text": "when we ran our print statement.",
      "tokens": [
        51189,
        562,
        321,
        5872,
        527,
        4482,
        5629,
        13,
        51274
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 109,
      "start": 271.62,
      "end": 273.94,
      "text": "Now, if a key already exists,",
      "tokens": [
        51274,
        823,
        11,
        498,
        257,
        2141,
        1217,
        8198,
        11,
        51390
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 110,
      "start": 273.94,
      "end": 276.18,
      "text": "if we set its value like this,",
      "tokens": [
        51390,
        498,
        321,
        992,
        1080,
        2158,
        411,
        341,
        11,
        51502
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 111,
      "start": 276.18,
      "end": 278.65999999999997,
      "text": "then it will update the value of that key.",
      "tokens": [
        51502,
        550,
        309,
        486,
        5623,
        264,
        2158,
        295,
        300,
        2141,
        13,
        51626
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 112,
      "start": 278.65999999999997,
      "end": 281.34,
      "text": "So for example, if right below this,",
      "tokens": [
        51626,
        407,
        337,
        1365,
        11,
        498,
        558,
        2507,
        341,
        11,
        51760
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06977769206551944,
      "compression_ratio": 1.76,
      "no_speech_prob": 0.0014477088116109371,
      "confidence": 0.9985522911883891
    },
    {
      "id": 113,
      "start": 281.34,
      "end": 286.09999999999997,
      "text": "I was to say student and name is equal to,",
      "tokens": [
        50364,
        286,
        390,
        281,
        584,
        3107,
        293,
        1315,
        307,
        2681,
        281,
        11,
        50602
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08066027624565258,
      "compression_ratio": 1.8169642857142858,
      "no_speech_prob": 0.0005099169793538749,
      "confidence": 0.9994900830206461
    },
    {
      "id": 114,
      "start": 286.09999999999997,
      "end": 288.7,
      "text": "and we'll just pass in Jane.",
      "tokens": [
        50602,
        293,
        321,
        603,
        445,
        1320,
        294,
        13048,
        13,
        50732
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08066027624565258,
      "compression_ratio": 1.8169642857142858,
      "no_speech_prob": 0.0005099169793538749,
      "confidence": 0.9994900830206461
    },
    {
      "id": 115,
      "start": 288.7,
      "end": 291.14,
      "text": "If I save that and then print out,",
      "tokens": [
        50732,
        759,
        286,
        3155,
        300,
        293,
        550,
        4482,
        484,
        11,
        50854
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08066027624565258,
      "compression_ratio": 1.8169642857142858,
      "no_speech_prob": 0.0005099169793538749,
      "confidence": 0.9994900830206461
    },
    {
      "id": 116,
      "start": 291.14,
      "end": 292.65999999999997,
      "text": "I'll comment out that for now.",
      "tokens": [
        50854,
        286,
        603,
        2871,
        484,
        300,
        337,
        586,
        13,
        50930
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08066027624565258,
      "compression_ratio": 1.8169642857142858,
      "no_speech_prob": 0.0005099169793538749,
      "confidence": 0.9994900830206461
    },
    {
      "id": 117,
      "start": 292.65999999999997,
      "end": 295.56,
      "text": "If I print out our entire student variable,",
      "tokens": [
        50930,
        759,
        286,
        4482,
        484,
        527,
        2302,
        3107,
        7006,
        11,
        51075
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08066027624565258,
      "compression_ratio": 1.8169642857142858,
      "no_speech_prob": 0.0005099169793538749,
      "confidence": 0.9994900830206461
    },
    {
      "id": 118,
      "start": 296.64,
      "end": 299.21999999999997,
      "text": "then we can see down here that the value for name",
      "tokens": [
        51129,
        550,
        321,
        393,
        536,
        760,
        510,
        300,
        264,
        2158,
        337,
        1315,
        51258
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08066027624565258,
      "compression_ratio": 1.8169642857142858,
      "no_speech_prob": 0.0005099169793538749,
      "confidence": 0.9994900830206461
    },
    {
      "id": 119,
      "start": 299.21999999999997,
      "end": 302.02,
      "text": "was updated when we assigned it to Jane.",
      "tokens": [
        51258,
        390,
        10588,
        562,
        321,
        13279,
        309,
        281,
        13048,
        13,
        51398
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08066027624565258,
      "compression_ratio": 1.8169642857142858,
      "no_speech_prob": 0.0005099169793538749,
      "confidence": 0.9994900830206461
    },
    {
      "id": 120,
      "start": 302.02,
      "end": 305.53999999999996,
      "text": "Now we can also update values using the update method.",
      "tokens": [
        51398,
        823,
        321,
        393,
        611,
        5623,
        4190,
        1228,
        264,
        5623,
        3170,
        13,
        51574
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08066027624565258,
      "compression_ratio": 1.8169642857142858,
      "no_speech_prob": 0.0005099169793538749,
      "confidence": 0.9994900830206461
    },
    {
      "id": 121,
      "start": 305.53999999999996,
      "end": 306.97999999999996,
      "text": "Now this is especially useful",
      "tokens": [
        51574,
        823,
        341,
        307,
        2318,
        4420,
        51646
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08066027624565258,
      "compression_ratio": 1.8169642857142858,
      "no_speech_prob": 0.0005099169793538749,
      "confidence": 0.9994900830206461
    },
    {
      "id": 122,
      "start": 306.97999999999996,
      "end": 310.02,
      "text": "when we want to update multiple values at a time.",
      "tokens": [
        51646,
        562,
        321,
        528,
        281,
        5623,
        3866,
        4190,
        412,
        257,
        565,
        13,
        51798
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08066027624565258,
      "compression_ratio": 1.8169642857142858,
      "no_speech_prob": 0.0005099169793538749,
      "confidence": 0.9994900830206461
    },
    {
      "id": 123,
      "start": 310.02,
      "end": 311.78,
      "text": "So for example, let's say that we wanted",
      "tokens": [
        50364,
        407,
        337,
        1365,
        11,
        718,
        311,
        584,
        300,
        321,
        1415,
        50452
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08227958517559504,
      "compression_ratio": 1.8009049773755657,
      "no_speech_prob": 9.89844193099998e-05,
      "confidence": 0.99990101558069
    },
    {
      "id": 124,
      "start": 311.78,
      "end": 315.02,
      "text": "to add this phone number, update this name,",
      "tokens": [
        50452,
        281,
        909,
        341,
        2593,
        1230,
        11,
        5623,
        341,
        1315,
        11,
        50614
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08227958517559504,
      "compression_ratio": 1.8009049773755657,
      "no_speech_prob": 9.89844193099998e-05,
      "confidence": 0.99990101558069
    },
    {
      "id": 125,
      "start": 315.02,
      "end": 317.38,
      "text": "and also update the age as well.",
      "tokens": [
        50614,
        293,
        611,
        5623,
        264,
        3205,
        382,
        731,
        13,
        50732
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08227958517559504,
      "compression_ratio": 1.8009049773755657,
      "no_speech_prob": 9.89844193099998e-05,
      "confidence": 0.99990101558069
    },
    {
      "id": 126,
      "start": 317.38,
      "end": 319.7,
      "text": "So to do this all in one shot,",
      "tokens": [
        50732,
        407,
        281,
        360,
        341,
        439,
        294,
        472,
        3347,
        11,
        50848
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08227958517559504,
      "compression_ratio": 1.8009049773755657,
      "no_speech_prob": 9.89844193099998e-05,
      "confidence": 0.99990101558069
    },
    {
      "id": 127,
      "start": 319.7,
      "end": 322.32,
      "text": "we could say student.update,",
      "tokens": [
        50848,
        321,
        727,
        584,
        3107,
        13,
        1010,
        17393,
        11,
        50979
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08227958517559504,
      "compression_ratio": 1.8009049773755657,
      "no_speech_prob": 9.89844193099998e-05,
      "confidence": 0.99990101558069
    },
    {
      "id": 128,
      "start": 322.32,
      "end": 325.29999999999995,
      "text": "and this takes in a dictionary as an argument.",
      "tokens": [
        50979,
        293,
        341,
        2516,
        294,
        257,
        25890,
        382,
        364,
        6770,
        13,
        51128
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08227958517559504,
      "compression_ratio": 1.8009049773755657,
      "no_speech_prob": 9.89844193099998e-05,
      "confidence": 0.99990101558069
    },
    {
      "id": 129,
      "start": 325.29999999999995,
      "end": 326.94,
      "text": "And the dictionary is just everything",
      "tokens": [
        51128,
        400,
        264,
        25890,
        307,
        445,
        1203,
        51210
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08227958517559504,
      "compression_ratio": 1.8009049773755657,
      "no_speech_prob": 9.89844193099998e-05,
      "confidence": 0.99990101558069
    },
    {
      "id": 130,
      "start": 326.94,
      "end": 328.97999999999996,
      "text": "that we either wanna add or update.",
      "tokens": [
        51210,
        300,
        321,
        2139,
        1948,
        909,
        420,
        5623,
        13,
        51312
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08227958517559504,
      "compression_ratio": 1.8009049773755657,
      "no_speech_prob": 9.89844193099998e-05,
      "confidence": 0.99990101558069
    },
    {
      "id": 131,
      "start": 328.97999999999996,
      "end": 332.59999999999997,
      "text": "So we can say that we wanna update that name to Jane,",
      "tokens": [
        51312,
        407,
        321,
        393,
        584,
        300,
        321,
        1948,
        5623,
        300,
        1315,
        281,
        13048,
        11,
        51493
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08227958517559504,
      "compression_ratio": 1.8009049773755657,
      "no_speech_prob": 9.89844193099998e-05,
      "confidence": 0.99990101558069
    },
    {
      "id": 132,
      "start": 332.59999999999997,
      "end": 337.0,
      "text": "and we will update the age to, let's say, 26.",
      "tokens": [
        51493,
        293,
        321,
        486,
        5623,
        264,
        3205,
        281,
        11,
        718,
        311,
        584,
        11,
        7551,
        13,
        51713
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08227958517559504,
      "compression_ratio": 1.8009049773755657,
      "no_speech_prob": 9.89844193099998e-05,
      "confidence": 0.99990101558069
    },
    {
      "id": 133,
      "start": 337.0,
      "end": 340.06,
      "text": "And we also want to add this phone key,",
      "tokens": [
        50364,
        400,
        321,
        611,
        528,
        281,
        909,
        341,
        2593,
        2141,
        11,
        50517
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08939431925288967,
      "compression_ratio": 1.672340425531915,
      "no_speech_prob": 0.0011178539134562016,
      "confidence": 0.9988821460865438
    },
    {
      "id": 134,
      "start": 340.06,
      "end": 342.8,
      "text": "and that phone key will just set as what we had before,",
      "tokens": [
        50517,
        293,
        300,
        2593,
        2141,
        486,
        445,
        992,
        382,
        437,
        321,
        632,
        949,
        11,
        50654
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08939431925288967,
      "compression_ratio": 1.672340425531915,
      "no_speech_prob": 0.0011178539134562016,
      "confidence": 0.9988821460865438
    },
    {
      "id": 135,
      "start": 342.8,
      "end": 344.72,
      "text": "555, 5555.",
      "tokens": [
        50654,
        12330,
        20,
        11,
        12330,
        13622,
        13,
        50750
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08939431925288967,
      "compression_ratio": 1.672340425531915,
      "no_speech_prob": 0.0011178539134562016,
      "confidence": 0.9988821460865438
    },
    {
      "id": 136,
      "start": 344.72,
      "end": 346.72,
      "text": "Now if I save that and run it,",
      "tokens": [
        50750,
        823,
        498,
        286,
        3155,
        300,
        293,
        1190,
        309,
        11,
        50850
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08939431925288967,
      "compression_ratio": 1.672340425531915,
      "no_speech_prob": 0.0011178539134562016,
      "confidence": 0.9988821460865438
    },
    {
      "id": 137,
      "start": 346.72,
      "end": 350.12,
      "text": "then we can see that just by running this one statement,",
      "tokens": [
        50850,
        550,
        321,
        393,
        536,
        300,
        445,
        538,
        2614,
        341,
        472,
        5629,
        11,
        51020
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08939431925288967,
      "compression_ratio": 1.672340425531915,
      "no_speech_prob": 0.0011178539134562016,
      "confidence": 0.9988821460865438
    },
    {
      "id": 138,
      "start": 350.12,
      "end": 354.52,
      "text": "we updated the name to Jane, the age is now 26,",
      "tokens": [
        51020,
        321,
        10588,
        264,
        1315,
        281,
        13048,
        11,
        264,
        3205,
        307,
        586,
        7551,
        11,
        51240
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08939431925288967,
      "compression_ratio": 1.672340425531915,
      "no_speech_prob": 0.0011178539134562016,
      "confidence": 0.9988821460865438
    },
    {
      "id": 139,
      "start": 354.52,
      "end": 357.14,
      "text": "and it has this new key of phone number.",
      "tokens": [
        51240,
        293,
        309,
        575,
        341,
        777,
        2141,
        295,
        2593,
        1230,
        13,
        51371
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08939431925288967,
      "compression_ratio": 1.672340425531915,
      "no_speech_prob": 0.0011178539134562016,
      "confidence": 0.9988821460865438
    },
    {
      "id": 140,
      "start": 357.14,
      "end": 359.0,
      "text": "Okay, so now let's say that we wanted",
      "tokens": [
        51371,
        1033,
        11,
        370,
        586,
        718,
        311,
        584,
        300,
        321,
        1415,
        51464
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08939431925288967,
      "compression_ratio": 1.672340425531915,
      "no_speech_prob": 0.0011178539134562016,
      "confidence": 0.9988821460865438
    },
    {
      "id": 141,
      "start": 359.0,
      "end": 361.8,
      "text": "to delete a specific key and its value.",
      "tokens": [
        51464,
        281,
        12097,
        257,
        2685,
        2141,
        293,
        1080,
        2158,
        13,
        51604
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08939431925288967,
      "compression_ratio": 1.672340425531915,
      "no_speech_prob": 0.0011178539134562016,
      "confidence": 0.9988821460865438
    },
    {
      "id": 142,
      "start": 361.8,
      "end": 363.4,
      "text": "Now one way that we can do this",
      "tokens": [
        51604,
        823,
        472,
        636,
        300,
        321,
        393,
        360,
        341,
        51684
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08939431925288967,
      "compression_ratio": 1.672340425531915,
      "no_speech_prob": 0.0011178539134562016,
      "confidence": 0.9988821460865438
    },
    {
      "id": 143,
      "start": 363.4,
      "end": 367.21999999999997,
      "text": "is by using the del keyword, which stands for delete.",
      "tokens": [
        50364,
        307,
        538,
        1228,
        264,
        1103,
        20428,
        11,
        597,
        7382,
        337,
        12097,
        13,
        50555
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 144,
      "start": 367.21999999999997,
      "end": 370.52,
      "text": "So let me just remove these updates here,",
      "tokens": [
        50555,
        407,
        718,
        385,
        445,
        4159,
        613,
        9205,
        510,
        11,
        50720
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 145,
      "start": 370.52,
      "end": 372.15999999999997,
      "text": "and then we can say,",
      "tokens": [
        50720,
        293,
        550,
        321,
        393,
        584,
        11,
        50802
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 146,
      "start": 372.15999999999997,
      "end": 375.64,
      "text": "so let's say that we wanted to delete the student's age.",
      "tokens": [
        50802,
        370,
        718,
        311,
        584,
        300,
        321,
        1415,
        281,
        12097,
        264,
        3107,
        311,
        3205,
        13,
        50976
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 147,
      "start": 375.64,
      "end": 379.23999999999995,
      "text": "So it's as easy as just saying del student age,",
      "tokens": [
        50976,
        407,
        309,
        311,
        382,
        1858,
        382,
        445,
        1566,
        1103,
        3107,
        3205,
        11,
        51156
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 148,
      "start": 379.23999999999995,
      "end": 382.17999999999995,
      "text": "and now if we run this, then we can see that now",
      "tokens": [
        51156,
        293,
        586,
        498,
        321,
        1190,
        341,
        11,
        550,
        321,
        393,
        536,
        300,
        586,
        51303
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 149,
      "start": 382.17999999999995,
      "end": 384.47999999999996,
      "text": "the only keys that exist are name and courses,",
      "tokens": [
        51303,
        264,
        787,
        9317,
        300,
        2514,
        366,
        1315,
        293,
        7712,
        11,
        51418
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 150,
      "start": 384.47999999999996,
      "end": 386.32,
      "text": "so that age key was deleted.",
      "tokens": [
        51418,
        370,
        300,
        3205,
        2141,
        390,
        22981,
        13,
        51510
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 151,
      "start": 386.32,
      "end": 388.79999999999995,
      "text": "Now another way that we can remove a key and value",
      "tokens": [
        51510,
        823,
        1071,
        636,
        300,
        321,
        393,
        4159,
        257,
        2141,
        293,
        2158,
        51634
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 152,
      "start": 388.79999999999995,
      "end": 390.32,
      "text": "is with the pop method.",
      "tokens": [
        51634,
        307,
        365,
        264,
        1665,
        3170,
        13,
        51710
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 153,
      "start": 390.32,
      "end": 392.64,
      "text": "So if you remember from our video on lists,",
      "tokens": [
        51710,
        407,
        498,
        291,
        1604,
        490,
        527,
        960,
        322,
        14511,
        11,
        51826
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09905671361667007,
      "compression_ratio": 1.81640625,
      "no_speech_prob": 0.03852177411317825,
      "confidence": 0.9614782258868217
    },
    {
      "id": 154,
      "start": 392.68,
      "end": 396.15999999999997,
      "text": "the pop method will remove, but also return that value.",
      "tokens": [
        50366,
        264,
        1665,
        3170,
        486,
        4159,
        11,
        457,
        611,
        2736,
        300,
        2158,
        13,
        50540
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10000892888719791,
      "compression_ratio": 1.736842105263158,
      "no_speech_prob": 0.00015412612992804497,
      "confidence": 0.999845873870072
    },
    {
      "id": 155,
      "start": 396.15999999999997,
      "end": 399.68,
      "text": "So that allows us to grab the removed value with a variable.",
      "tokens": [
        50540,
        407,
        300,
        4045,
        505,
        281,
        4444,
        264,
        7261,
        2158,
        365,
        257,
        7006,
        13,
        50716
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10000892888719791,
      "compression_ratio": 1.736842105263158,
      "no_speech_prob": 0.00015412612992804497,
      "confidence": 0.999845873870072
    },
    {
      "id": 156,
      "start": 399.68,
      "end": 404.2,
      "text": "So we could say age is equal to,",
      "tokens": [
        50716,
        407,
        321,
        727,
        584,
        3205,
        307,
        2681,
        281,
        11,
        50942
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10000892888719791,
      "compression_ratio": 1.736842105263158,
      "no_speech_prob": 0.00015412612992804497,
      "confidence": 0.999845873870072
    },
    {
      "id": 157,
      "start": 404.2,
      "end": 407.32,
      "text": "and do a student.pop,",
      "tokens": [
        50942,
        293,
        360,
        257,
        3107,
        13,
        13872,
        11,
        51098
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10000892888719791,
      "compression_ratio": 1.736842105263158,
      "no_speech_prob": 0.00015412612992804497,
      "confidence": 0.999845873870072
    },
    {
      "id": 158,
      "start": 407.32,
      "end": 410.0,
      "text": "and what we wanna pop is that age.",
      "tokens": [
        51098,
        293,
        437,
        321,
        1948,
        1665,
        307,
        300,
        3205,
        13,
        51232
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10000892888719791,
      "compression_ratio": 1.736842105263158,
      "no_speech_prob": 0.00015412612992804497,
      "confidence": 0.999845873870072
    },
    {
      "id": 159,
      "start": 410.0,
      "end": 414.56,
      "text": "So if I save that, then we'll also print the age",
      "tokens": [
        51232,
        407,
        498,
        286,
        3155,
        300,
        11,
        550,
        321,
        603,
        611,
        4482,
        264,
        3205,
        51460
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10000892888719791,
      "compression_ratio": 1.736842105263158,
      "no_speech_prob": 0.00015412612992804497,
      "confidence": 0.999845873870072
    },
    {
      "id": 160,
      "start": 414.56,
      "end": 416.12,
      "text": "here below student.",
      "tokens": [
        51460,
        510,
        2507,
        3107,
        13,
        51538
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10000892888719791,
      "compression_ratio": 1.736842105263158,
      "no_speech_prob": 0.00015412612992804497,
      "confidence": 0.999845873870072
    },
    {
      "id": 161,
      "start": 416.12,
      "end": 419.14,
      "text": "If I run that, then we can see that the age and value",
      "tokens": [
        51538,
        759,
        286,
        1190,
        300,
        11,
        550,
        321,
        393,
        536,
        300,
        264,
        3205,
        293,
        2158,
        51689
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10000892888719791,
      "compression_ratio": 1.736842105263158,
      "no_speech_prob": 0.00015412612992804497,
      "confidence": 0.999845873870072
    },
    {
      "id": 162,
      "start": 419.14,
      "end": 421.02,
      "text": "were removed from our dictionary,",
      "tokens": [
        51689,
        645,
        7261,
        490,
        527,
        25890,
        11,
        51783
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10000892888719791,
      "compression_ratio": 1.736842105263158,
      "no_speech_prob": 0.00015412612992804497,
      "confidence": 0.999845873870072
    },
    {
      "id": 163,
      "start": 421.02,
      "end": 423.65999999999997,
      "text": "but we also created that age variable",
      "tokens": [
        50364,
        457,
        321,
        611,
        2942,
        300,
        3205,
        7006,
        50496
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 164,
      "start": 423.65999999999997,
      "end": 425.94,
      "text": "that contained the value that we popped off.",
      "tokens": [
        50496,
        300,
        16212,
        264,
        2158,
        300,
        321,
        21545,
        766,
        13,
        50610
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 165,
      "start": 425.94,
      "end": 427.74,
      "text": "So that popped off 25.",
      "tokens": [
        50610,
        407,
        300,
        21545,
        766,
        3552,
        13,
        50700
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 166,
      "start": 427.74,
      "end": 430.18,
      "text": "Okay, now let's look at how we can loop through",
      "tokens": [
        50700,
        1033,
        11,
        586,
        718,
        311,
        574,
        412,
        577,
        321,
        393,
        6367,
        807,
        50822
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 167,
      "start": 430.18,
      "end": 432.97999999999996,
      "text": "all the keys and values of our dictionary.",
      "tokens": [
        50822,
        439,
        264,
        9317,
        293,
        4190,
        295,
        527,
        25890,
        13,
        50962
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 168,
      "start": 432.97999999999996,
      "end": 435.5,
      "text": "So first, if we wanna see how many keys",
      "tokens": [
        50962,
        407,
        700,
        11,
        498,
        321,
        1948,
        536,
        577,
        867,
        9317,
        51088
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 169,
      "start": 435.5,
      "end": 436.85999999999996,
      "text": "we have in our dictionary,",
      "tokens": [
        51088,
        321,
        362,
        294,
        527,
        25890,
        11,
        51156
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 170,
      "start": 436.85999999999996,
      "end": 440.7,
      "text": "then we can just print out its length with the len function.",
      "tokens": [
        51156,
        550,
        321,
        393,
        445,
        4482,
        484,
        1080,
        4641,
        365,
        264,
        40116,
        2445,
        13,
        51348
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 171,
      "start": 440.7,
      "end": 445.7,
      "text": "So if I was to say print len of student and run that,",
      "tokens": [
        51348,
        407,
        498,
        286,
        390,
        281,
        584,
        4482,
        40116,
        295,
        3107,
        293,
        1190,
        300,
        11,
        51598
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 172,
      "start": 445.82,
      "end": 447.46,
      "text": "then we can see that it returns three,",
      "tokens": [
        51604,
        550,
        321,
        393,
        536,
        300,
        309,
        11247,
        1045,
        11,
        51686
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 173,
      "start": 447.46,
      "end": 450.21999999999997,
      "text": "because we have three keys in our student dictionary.",
      "tokens": [
        51686,
        570,
        321,
        362,
        1045,
        9317,
        294,
        527,
        3107,
        25890,
        13,
        51824
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0670266631961793,
      "compression_ratio": 1.83984375,
      "no_speech_prob": 0.0002700034820009023,
      "confidence": 0.9997299965179991
    },
    {
      "id": 174,
      "start": 450.22,
      "end": 452.5,
      "text": "Now, if we wanted to see all of these keys,",
      "tokens": [
        50364,
        823,
        11,
        498,
        321,
        1415,
        281,
        536,
        439,
        295,
        613,
        9317,
        11,
        50478
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 175,
      "start": 452.5,
      "end": 456.06,
      "text": "then we could just print out student.keys.",
      "tokens": [
        50478,
        550,
        321,
        727,
        445,
        4482,
        484,
        3107,
        13,
        18847,
        13,
        50656
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 176,
      "start": 456.06,
      "end": 458.5,
      "text": "If I run that, then we can see that that gave us",
      "tokens": [
        50656,
        759,
        286,
        1190,
        300,
        11,
        550,
        321,
        393,
        536,
        300,
        300,
        2729,
        505,
        50778
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 177,
      "start": 458.5,
      "end": 460.46000000000004,
      "text": "all of the keys of our dictionary.",
      "tokens": [
        50778,
        439,
        295,
        264,
        9317,
        295,
        527,
        25890,
        13,
        50876
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 178,
      "start": 460.46000000000004,
      "end": 461.88000000000005,
      "text": "If we wanted all of our values,",
      "tokens": [
        50876,
        759,
        321,
        1415,
        439,
        295,
        527,
        4190,
        11,
        50947
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 179,
      "start": 461.88000000000005,
      "end": 464.22,
      "text": "then we could print out student.values.",
      "tokens": [
        50947,
        550,
        321,
        727,
        4482,
        484,
        3107,
        13,
        46033,
        13,
        51064
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 180,
      "start": 464.22,
      "end": 466.5,
      "text": "If I run that, you can see that that gives us",
      "tokens": [
        51064,
        759,
        286,
        1190,
        300,
        11,
        291,
        393,
        536,
        300,
        300,
        2709,
        505,
        51178
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 181,
      "start": 466.5,
      "end": 467.74,
      "text": "only the values.",
      "tokens": [
        51178,
        787,
        264,
        4190,
        13,
        51240
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 182,
      "start": 467.74,
      "end": 470.22,
      "text": "Now, if we wanted to see the keys and values,",
      "tokens": [
        51240,
        823,
        11,
        498,
        321,
        1415,
        281,
        536,
        264,
        9317,
        293,
        4190,
        11,
        51364
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 183,
      "start": 470.22,
      "end": 473.1,
      "text": "then we could use this items method.",
      "tokens": [
        51364,
        550,
        321,
        727,
        764,
        341,
        4754,
        3170,
        13,
        51508
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 184,
      "start": 473.1,
      "end": 477.58000000000004,
      "text": "If I run this, then we can see that now we have these pairs",
      "tokens": [
        51508,
        759,
        286,
        1190,
        341,
        11,
        550,
        321,
        393,
        536,
        300,
        586,
        321,
        362,
        613,
        15494,
        51732
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 185,
      "start": 477.58000000000004,
      "end": 479.18,
      "text": "of key and value pairs.",
      "tokens": [
        51732,
        295,
        2141,
        293,
        2158,
        15494,
        13,
        51812
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07361827530227341,
      "compression_ratio": 2.3482587064676617,
      "no_speech_prob": 0.00013843319902662188,
      "confidence": 0.9998615668009734
    },
    {
      "id": 186,
      "start": 479.18,
      "end": 484.18,
      "text": "So we have name John, age 25, courses with the list.",
      "tokens": [
        50364,
        407,
        321,
        362,
        1315,
        2619,
        11,
        3205,
        3552,
        11,
        7712,
        365,
        264,
        1329,
        13,
        50614
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08056908294934184,
      "compression_ratio": 1.7698744769874477,
      "no_speech_prob": 0.0003430257784202695,
      "confidence": 0.9996569742215797
    },
    {
      "id": 187,
      "start": 484.2,
      "end": 487.18,
      "text": "And we'll be coming back to these pairs in just one second.",
      "tokens": [
        50615,
        400,
        321,
        603,
        312,
        1348,
        646,
        281,
        613,
        15494,
        294,
        445,
        472,
        1150,
        13,
        50764
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08056908294934184,
      "compression_ratio": 1.7698744769874477,
      "no_speech_prob": 0.0003430257784202695,
      "confidence": 0.9996569742215797
    },
    {
      "id": 188,
      "start": 487.18,
      "end": 489.76,
      "text": "So if we wanted to loop through all of the keys",
      "tokens": [
        50764,
        407,
        498,
        321,
        1415,
        281,
        6367,
        807,
        439,
        295,
        264,
        9317,
        50893
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08056908294934184,
      "compression_ratio": 1.7698744769874477,
      "no_speech_prob": 0.0003430257784202695,
      "confidence": 0.9996569742215797
    },
    {
      "id": 189,
      "start": 489.76,
      "end": 491.3,
      "text": "and values in our dictionary,",
      "tokens": [
        50893,
        293,
        4190,
        294,
        527,
        25890,
        11,
        50970
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08056908294934184,
      "compression_ratio": 1.7698744769874477,
      "no_speech_prob": 0.0003430257784202695,
      "confidence": 0.9996569742215797
    },
    {
      "id": 190,
      "start": 491.3,
      "end": 493.5,
      "text": "we might be tempted to loop through the same way",
      "tokens": [
        50970,
        321,
        1062,
        312,
        29941,
        281,
        6367,
        807,
        264,
        912,
        636,
        51080
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08056908294934184,
      "compression_ratio": 1.7698744769874477,
      "no_speech_prob": 0.0003430257784202695,
      "confidence": 0.9996569742215797
    },
    {
      "id": 191,
      "start": 493.5,
      "end": 495.06,
      "text": "we loop through our list.",
      "tokens": [
        51080,
        321,
        6367,
        807,
        527,
        1329,
        13,
        51158
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08056908294934184,
      "compression_ratio": 1.7698744769874477,
      "no_speech_prob": 0.0003430257784202695,
      "confidence": 0.9996569742215797
    },
    {
      "id": 192,
      "start": 495.06,
      "end": 496.94,
      "text": "But if we just loop through our list",
      "tokens": [
        51158,
        583,
        498,
        321,
        445,
        6367,
        807,
        527,
        1329,
        51252
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08056908294934184,
      "compression_ratio": 1.7698744769874477,
      "no_speech_prob": 0.0003430257784202695,
      "confidence": 0.9996569742215797
    },
    {
      "id": 193,
      "start": 496.94,
      "end": 499.06,
      "text": "without using any method,",
      "tokens": [
        51252,
        1553,
        1228,
        604,
        3170,
        11,
        51358
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08056908294934184,
      "compression_ratio": 1.7698744769874477,
      "no_speech_prob": 0.0003430257784202695,
      "confidence": 0.9996569742215797
    },
    {
      "id": 194,
      "start": 499.06,
      "end": 500.98,
      "text": "then it'll just loop through the keys.",
      "tokens": [
        51358,
        550,
        309,
        603,
        445,
        6367,
        807,
        264,
        9317,
        13,
        51454
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08056908294934184,
      "compression_ratio": 1.7698744769874477,
      "no_speech_prob": 0.0003430257784202695,
      "confidence": 0.9996569742215797
    },
    {
      "id": 195,
      "start": 500.98,
      "end": 505.7,
      "text": "So for example, if you were to say four key in student,",
      "tokens": [
        51454,
        407,
        337,
        1365,
        11,
        498,
        291,
        645,
        281,
        584,
        1451,
        2141,
        294,
        3107,
        11,
        51690
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08056908294934184,
      "compression_ratio": 1.7698744769874477,
      "no_speech_prob": 0.0003430257784202695,
      "confidence": 0.9996569742215797
    },
    {
      "id": 196,
      "start": 505.7,
      "end": 510.0,
      "text": "and then print out that key, if we run this,",
      "tokens": [
        50364,
        293,
        550,
        4482,
        484,
        300,
        2141,
        11,
        498,
        321,
        1190,
        341,
        11,
        50579
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 197,
      "start": 510.0,
      "end": 511.78,
      "text": "then we can see that it just looped through",
      "tokens": [
        50579,
        550,
        321,
        393,
        536,
        300,
        309,
        445,
        6367,
        292,
        807,
        50668
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 198,
      "start": 511.78,
      "end": 513.68,
      "text": "and printed out all of those keys.",
      "tokens": [
        50668,
        293,
        13567,
        484,
        439,
        295,
        729,
        9317,
        13,
        50763
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 199,
      "start": 513.68,
      "end": 516.52,
      "text": "Now, in order to loop through the keys and values,",
      "tokens": [
        50763,
        823,
        11,
        294,
        1668,
        281,
        6367,
        807,
        264,
        9317,
        293,
        4190,
        11,
        50905
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 200,
      "start": 516.52,
      "end": 518.66,
      "text": "we'll need to use that items method",
      "tokens": [
        50905,
        321,
        603,
        643,
        281,
        764,
        300,
        4754,
        3170,
        51012
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 201,
      "start": 518.66,
      "end": 520.38,
      "text": "that we just saw a second ago.",
      "tokens": [
        51012,
        300,
        321,
        445,
        1866,
        257,
        1150,
        2057,
        13,
        51098
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 202,
      "start": 520.38,
      "end": 522.76,
      "text": "And so we'll just plug that in there.",
      "tokens": [
        51098,
        400,
        370,
        321,
        603,
        445,
        5452,
        300,
        294,
        456,
        13,
        51217
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 203,
      "start": 522.76,
      "end": 524.58,
      "text": "We'll say student.items.",
      "tokens": [
        51217,
        492,
        603,
        584,
        3107,
        13,
        270,
        9097,
        13,
        51308
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 204,
      "start": 524.58,
      "end": 527.86,
      "text": "And now these come in a pair of two values.",
      "tokens": [
        51308,
        400,
        586,
        613,
        808,
        294,
        257,
        6119,
        295,
        732,
        4190,
        13,
        51472
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 205,
      "start": 527.86,
      "end": 529.22,
      "text": "So instead of just key,",
      "tokens": [
        51472,
        407,
        2602,
        295,
        445,
        2141,
        11,
        51540
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 206,
      "start": 529.22,
      "end": 531.4,
      "text": "we're also gonna have to access the value.",
      "tokens": [
        51540,
        321,
        434,
        611,
        799,
        362,
        281,
        2105,
        264,
        2158,
        13,
        51649
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 207,
      "start": 531.4,
      "end": 534.7,
      "text": "So we can say four key value and student.items.",
      "tokens": [
        51649,
        407,
        321,
        393,
        584,
        1451,
        2141,
        2158,
        293,
        3107,
        13,
        270,
        9097,
        13,
        51814
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07297539375197719,
      "compression_ratio": 1.8300395256916997,
      "no_speech_prob": 0.0011639171279966831,
      "confidence": 0.9988360828720033
    },
    {
      "id": 208,
      "start": 534.74,
      "end": 537.1800000000001,
      "text": "And now we'll print out the key and that value.",
      "tokens": [
        50366,
        400,
        586,
        321,
        603,
        4482,
        484,
        264,
        2141,
        293,
        300,
        2158,
        13,
        50488
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 209,
      "start": 537.1800000000001,
      "end": 538.4000000000001,
      "text": "So if I run that,",
      "tokens": [
        50488,
        407,
        498,
        286,
        1190,
        300,
        11,
        50549
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 210,
      "start": 538.4000000000001,
      "end": 540.98,
      "text": "so we can see that each loop through this key variable",
      "tokens": [
        50549,
        370,
        321,
        393,
        536,
        300,
        1184,
        6367,
        807,
        341,
        2141,
        7006,
        50678
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 211,
      "start": 540.98,
      "end": 542.44,
      "text": "was equal to each key.",
      "tokens": [
        50678,
        390,
        2681,
        281,
        1184,
        2141,
        13,
        50751
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 212,
      "start": 542.44,
      "end": 545.72,
      "text": "And this value variable was equal to each value.",
      "tokens": [
        50751,
        400,
        341,
        2158,
        7006,
        390,
        2681,
        281,
        1184,
        2158,
        13,
        50915
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 213,
      "start": 545.72,
      "end": 547.9200000000001,
      "text": "Okay, so I think that's gonna do it for this video.",
      "tokens": [
        50915,
        1033,
        11,
        370,
        286,
        519,
        300,
        311,
        799,
        360,
        309,
        337,
        341,
        960,
        13,
        51025
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 214,
      "start": 547.9200000000001,
      "end": 549.62,
      "text": "I hope that now everyone feels comfortable",
      "tokens": [
        51025,
        286,
        1454,
        300,
        586,
        1518,
        3417,
        4619,
        51110
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 215,
      "start": 549.62,
      "end": 550.76,
      "text": "working with dictionaries",
      "tokens": [
        51110,
        1364,
        365,
        22352,
        4889,
        51167
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 216,
      "start": 550.76,
      "end": 552.72,
      "text": "and the functionality that's available to us.",
      "tokens": [
        51167,
        293,
        264,
        14980,
        300,
        311,
        2435,
        281,
        505,
        13,
        51265
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 217,
      "start": 552.72,
      "end": 555.4200000000001,
      "text": "And in the next video, we'll be going over conditionals",
      "tokens": [
        51265,
        400,
        294,
        264,
        958,
        960,
        11,
        321,
        603,
        312,
        516,
        670,
        4188,
        1124,
        51400
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 218,
      "start": 555.4200000000001,
      "end": 558.8000000000001,
      "text": "and how to write if, else, and elif statements.",
      "tokens": [
        51400,
        293,
        577,
        281,
        2464,
        498,
        11,
        1646,
        11,
        293,
        806,
        351,
        12363,
        13,
        51569
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 219,
      "start": 558.8000000000001,
      "end": 561.0200000000001,
      "text": "We'll also be learning more about bullions",
      "tokens": [
        51569,
        492,
        603,
        611,
        312,
        2539,
        544,
        466,
        4693,
        626,
        51680
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 220,
      "start": 561.0200000000001,
      "end": 562.5,
      "text": "and Boolean operators.",
      "tokens": [
        51680,
        293,
        23351,
        28499,
        19077,
        13,
        51754
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 221,
      "start": 562.5,
      "end": 563.76,
      "text": "Now, if anyone has any questions",
      "tokens": [
        51754,
        823,
        11,
        498,
        2878,
        575,
        604,
        1651,
        51817
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10218391662988907,
      "compression_ratio": 1.8070739549839228,
      "no_speech_prob": 0.000158286900841631,
      "confidence": 0.9998417130991584
    },
    {
      "id": 222,
      "start": 563.76,
      "end": 565.3199999999999,
      "text": "about what we covered in this video,",
      "tokens": [
        50364,
        466,
        437,
        321,
        5343,
        294,
        341,
        960,
        11,
        50442
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 223,
      "start": 565.3199999999999,
      "end": 567.16,
      "text": "then feel free to ask in the comment section below",
      "tokens": [
        50442,
        550,
        841,
        1737,
        281,
        1029,
        294,
        264,
        2871,
        3541,
        2507,
        50534
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 224,
      "start": 567.16,
      "end": 568.6,
      "text": "and I'll do my best to answer those.",
      "tokens": [
        50534,
        293,
        286,
        603,
        360,
        452,
        1151,
        281,
        1867,
        729,
        13,
        50606
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 225,
      "start": 568.6,
      "end": 569.96,
      "text": "And if you enjoy these tutorials",
      "tokens": [
        50606,
        400,
        498,
        291,
        2103,
        613,
        17616,
        50674
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 226,
      "start": 569.96,
      "end": 570.9399999999999,
      "text": "and would like to support them,",
      "tokens": [
        50674,
        293,
        576,
        411,
        281,
        1406,
        552,
        11,
        50723
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 227,
      "start": 570.9399999999999,
      "end": 572.46,
      "text": "then there are several ways you can do that.",
      "tokens": [
        50723,
        550,
        456,
        366,
        2940,
        2098,
        291,
        393,
        360,
        300,
        13,
        50799
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 228,
      "start": 572.46,
      "end": 574.2,
      "text": "The easiest way is to simply like the video",
      "tokens": [
        50799,
        440,
        12889,
        636,
        307,
        281,
        2935,
        411,
        264,
        960,
        50886
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 229,
      "start": 574.2,
      "end": 575.24,
      "text": "and give it a thumbs up.",
      "tokens": [
        50886,
        293,
        976,
        309,
        257,
        8838,
        493,
        13,
        50938
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 230,
      "start": 575.24,
      "end": 577.0,
      "text": "And also it's a huge help to share these videos",
      "tokens": [
        50938,
        400,
        611,
        309,
        311,
        257,
        2603,
        854,
        281,
        2073,
        613,
        2145,
        51026
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 231,
      "start": 577.0,
      "end": 578.84,
      "text": "with anyone who you think would find them useful.",
      "tokens": [
        51026,
        365,
        2878,
        567,
        291,
        519,
        576,
        915,
        552,
        4420,
        13,
        51118
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 232,
      "start": 578.84,
      "end": 579.72,
      "text": "And if you have the means,",
      "tokens": [
        51118,
        400,
        498,
        291,
        362,
        264,
        1355,
        11,
        51162
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 233,
      "start": 579.72,
      "end": 581.08,
      "text": "you can contribute through Patreon.",
      "tokens": [
        51162,
        291,
        393,
        10586,
        807,
        15692,
        13,
        51230
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 234,
      "start": 581.08,
      "end": 582.16,
      "text": "And there's a link to that page",
      "tokens": [
        51230,
        400,
        456,
        311,
        257,
        2113,
        281,
        300,
        3028,
        51284
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 235,
      "start": 582.16,
      "end": 583.72,
      "text": "in the description section below.",
      "tokens": [
        51284,
        294,
        264,
        3855,
        3541,
        2507,
        13,
        51362
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 236,
      "start": 583.72,
      "end": 585.28,
      "text": "Be sure to subscribe for future videos",
      "tokens": [
        51362,
        879,
        988,
        281,
        3022,
        337,
        2027,
        2145,
        51440
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 237,
      "start": 585.28,
      "end": 586.84,
      "text": "and thank you all for watching.",
      "tokens": [
        51440,
        293,
        1309,
        291,
        439,
        337,
        1976,
        13,
        51518
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12592221483772184,
      "compression_ratio": 1.7940298507462686,
      "no_speech_prob": 0.08559481054544449,
      "confidence": 0.9144051894545555
    },
    {
      "id": 238,
      "start": 593.76,
      "end": 594.6,
      "text": "Thank you.",
      "tokens": [
        50364,
        1044,
        291,
        13,
        50406
      ],
      "temperature": 0.0,
      "avg_logprob": -0.7865039507548014,
      "compression_ratio": 0.5555555555555556,
      "no_speech_prob": 0.9149637222290039,
      "confidence": 0.0850362777709961
    }
  ]
}