{
  "video_id": "60196303ab8a",
  "video_path": "videos/Python Tutorial- String Formatting - Advanced Operations for Dicts, Lists, Numbers, and Dates (1).mp4",
  "video_filename": "Python Tutorial- String Formatting - Advanced Operations for Dicts, Lists, Numbers, and Dates (1).mp4",
  "model_size": "medium",
  "language": "en",
  "duration": 0,
  "text": " Hey everybody, how's it going? In this video we're going to be looking at string formatting operations in Python. Now a lot of people know the basics of string formatting, but there are a lot of options beyond the basics that are available that will allow us to format our strings in exactly the way that we want. So I'm going to run through a few examples here really fast just to show some of the different things that we can do with formatting our strings. So first of all, if you're not already using some kind of formatting when you print out your strings, then you definitely should be. So sometimes I'll see people using string concatenation to display information, and that's exactly what I'm doing on this first line here. And there are a few things wrong with this. So you can see first of all it's not very readable. You have to open and close strings in different places, plus you have plus signs everywhere. Whenever you have an integer, you have to cast those two strings. And also you have to remember to put spaces in the correct location. So this middle string here I have to remember to put in a space at the beginning and at the end. And if I mess that up, then it can bunch my string together when I print it out. So you can see if I run this code that it does work, but there are much better ways to do this. So it's much easier to use the formatting option, and that's what we're going to take a look at here. So let me uncomment out this. So you can see that this is a lot easier to read. Now we have these braces here as placeholders, and after our string closes, we run this format method, and then we pass in the values that we want to replace our placeholders with. Now if we do it the way that I did here and don't add anything to these placeholders, then what it's going to do is it's just going to pass our first value here to our first placeholder, and our second value to our second placeholder. Now if you want to, you can explicitly number your placeholders. So in this example here, it's the exact same example, but now I've numbered my placeholders. So now what this is saying is that we want this zero here is the first value that you pass in the format, and then this one is the second value that you pass in the format. And if I save that and run it, you can see that it still works. Now this is more useful when you have placeholders for values that need to be repeated. So in this next example that I have here, you can see that I have this tag variable and this text variable. So in my string, I'm putting the tag in some opening brackets here, and then I'm putting in a placeholder for the text, and then I'm putting the tag inside these closing braces here. And then the values that I pass in the format tag will go where all of the zeros are for our placeholders, and text will go where the one is for our placeholder. So if I save that and run it, you can see that it prints out the value that we expected. Okay, so now we can also grab specific fields from our placeholders. So in our previous example, we were passing in a dictionary to our format, and within our format we were accessing the name and the age of this dictionary from directly within the format here. But we can actually access these fields from directly within the placeholders. So within the placeholder here for zero, I'm just going to put these brackets here and do name, and for one I'm going to do age, and then I can take these off of our dictionary here and just pass in the dictionary. So let me save that and run it, and you can see that that still works. Now another thing that you might notice is that now you can see that I'm just passing in this dictionary into format twice. I have person and person. So really what I can do is I can just make both of these a zero index to take the first value from format, and then I can get rid of the second value. And now what this is going to do is it's going to pass the person dictionary to all of our placeholders, and here it's going to access the name, and here it's going to access the age. So if I save that and run it, then you can see that it still works. Now this is also how you would access values of a list too. So for example, let me do L equals and make a list here, and I'm just going to do the exact same value. So I'm going to do Gen and 23, and here I'm going to pass in that list, and now instead of name, I'm going to grab the first index there and then the next index and save that and run it, and you can see that that works also. Okay, so that is how you access values from dictionaries and lists, but you can also access attributes in a similar way. Okay, so I have a small test class here called person, and this has a name attribute and an age attribute, and then here I'm making an instance of this class person with the name Jack and the age 33. Now if I want to print this out, it's almost the same as what we did with the dictionary, but now instead of using the brackets, we're just going to use this dot attribute to grab that value. So you can see here I'm still just passing in this single object into format, and it's going to come in here and grab the name attribute and the age attribute. So if I save that and run it, you can see that that worked. Okay, so we can also pass in keyword arguments to format. So for my example that I have here, I have my placeholders, and I'm just passing in some keywords into the placeholders. Now within format here, instead of passing in a specific object, I'm setting these keyword values. So I'm setting name equal to gin and the age equal to 23. So now anywhere that it sees a placeholder that matches that keyword, then it'll fill it in with that value. So if I save that and run it, then you can see that that worked right. Now this is the method that I usually use to print out dictionaries, because I think that it is a little bit more readable. Now if you know about unpacking lists and dictionaries, then you'll probably realize here that we can just unpack our dictionary from before into format, and it will find all those keywords for us to use. So I actually accidentally deleted that dictionary that we had from before, so let me go ahead and make that again. So let's see, that was name, and I'll just do gin, and I'll do the age as 23, and let me fix that curly brace there. Okay, so now in this example here, I'm using these keyword arguments, and if I just unpack that dictionary, then it will fill in those keyword arguments for us. So let me save that and print it, and you can see that that worked. So to me, that's the most readable and most convenient way to print out dictionary values. Okay, so now let's take a look at how we can format and print out numbers. So in this example that I have here, all I'm doing here is looping through and printing out the numbers 1 through 10. So now what if I wanted all of these numbers to have two digits, and zero pad my single digit values with a zero. Now in order to do this, I'm gonna have to add formatting to our placeholders, and we can do that by adding a colon here. So now we can add whatever formatting that we'd like. So I want to zero pad my digits to 2. So we can do that just by doing a 0 2 here, and if I save that and run it, now you can see instead of 1 2 3, it's 0 1 0 2, and then when I get down here to 10, it doesn't pad it because it's already two digits. Now if I was to make this a 3 and save that and run it, now you can see that it zero pads all the way up to three digits. Okay, so now let's look at using format to do decimal places. So here I have pi written out to eight decimal places. So let's say that I want to print that out, but I only want to print out to two decimal places. So let me add my colon so that it knows that we want to do some formatting, and now I can specify that I want two decimal places just by doing a 0.2 f. So now if I save that and run it, you can see that it says pi is equal to 3.14, and again if I change that 2 to a 3 and save it and run it, and it does up to three decimal places. Okay, so let's look at an example for say that we wanted to print out a large number and we wanted some comma separators so that it was more easily readable. So we can easily do that just by adding a comma after our colon. So I'll do a colon here to specify that we want formatting, and I'll just put in a comma and if I save that and run it, you can see that we have our comma separators here on these large values. And you can chain this formatting together too. So let's say that we wanted the comma separated values and we wanted to display up to two decimal places. So right after the comma, I could do my 0.2 f that we did from before, and if I run that, you can see that we have our comma separated values and it added two decimal places on to the end. Okay, so let's take a look at an example for how we can format and print out dates. So I think this is extremely useful if you need to print out date time information. It allows us to display the information in just about any way that we want. So it's especially useful if you're printing out dates for logs or creating reports or anything like that. So I just created a date here for September 24th of 2016. So if I just print out that date variable, then you can see that it's not too bad. It's pretty easy to tell what it's doing. It's printing out the year, the month, the day, then the hours, minutes, and seconds. But let's say that we wanted it in this format here. We wanted the month, the day, and then a comma and the year. So let's take out this print statement here and let's try to do that. Okay, so first of all, we're going to want to add our colon here to specify that we want to do some formatting to this. And now I'm going to go to the website and get the values that we want to use here. So we want the full month and we can see here that the full month is percent sign B. And we also want the day of the month and we can see that the day of the month here is percent sign D. And we also want the year here. And there's a couple of options for the year, but we're going to go ahead and just do the four digit one here with the capital Y. So like I said, it's completely fine if you don't know these formatting options. Just whenever you're trying to do something, you can look it up in the documentation and know how to get it done. So let's go ahead and pass these in. So the name of the month was a percent sign B. And then I'm going to do the day as percent sign D. And then I want the comma and then the percent sign capital Y for the year. So let me go ahead and print that out. Okay, so that worked the way that we wanted it to. So you can see how formatting your strings like this could be extremely useful for printing out dates. So now let's do a slightly more complicated example and let's try to do it in this format here. Let's say that we want the name of the month, the day, the comma, and the year. Then we want to say that it fell on A and then put in the day of the week and that it was the day of the year. So I want to put the day of the year here. So we want to format our string to where it looks like this. So let me uncomment out what we have here so far. Now we already know how to do this first part here. So that was just a colon and we want our percent sign B, percent sign D for the day, comma, percent sign capital Y. So now let's also go back to the documentation and find the day of the week and the day of the year. So I'm going to go and grab that. So we can see here that the day of the week is over here at capital A and the day of the year is this percent sign J. So if I go back here and do our colon and a percent sign with a capital A and then over here I'm going to do the colon with percent sign lowercase J. Now if I just try to run this as is then you can see that we get an error. Now the reason that we got an error is because we have three placeholders but we're only passing in one value to our format. So if you remember I can just do the index here so I can say that we want this to be the zero index and the first value that we pass in the format. So now even though we have three placeholders it will replace all of those placeholders with our single value that we're passing in to format. So now if I run that you can see that it gives us the output that we wanted. So now you can see here that it says September 24th 2016 fell on a Saturday and was the 268th day of the year. So I think that's going to do it for this video. I hope it helped in knowing what all is available when it comes to string formatting and also maybe gave you some ideas for how you can use this in your own applications. But if you do have any questions just feel free to ask me in the comment section below. Be sure to subscribe for future videos and thank you all for watching.",
  "segments": [
    {
      "id": 0,
      "start": 0.0,
      "end": 3.84,
      "text": "Hey everybody, how's it going? In this video we're going to be looking at string",
      "tokens": [
        50364,
        1911,
        2201,
        11,
        577,
        311,
        309,
        516,
        30,
        682,
        341,
        960,
        321,
        434,
        516,
        281,
        312,
        1237,
        412,
        6798,
        50556
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09520354786434689,
      "compression_ratio": 1.8660714285714286,
      "no_speech_prob": 0.07187025249004364,
      "confidence": 0.9281297475099564
    },
    {
      "id": 1,
      "start": 3.84,
      "end": 8.040000000000001,
      "text": "formatting operations in Python. Now a lot of people know the basics of string",
      "tokens": [
        50556,
        39366,
        7705,
        294,
        15329,
        13,
        823,
        257,
        688,
        295,
        561,
        458,
        264,
        14688,
        295,
        6798,
        50766
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09520354786434689,
      "compression_ratio": 1.8660714285714286,
      "no_speech_prob": 0.07187025249004364,
      "confidence": 0.9281297475099564
    },
    {
      "id": 2,
      "start": 8.040000000000001,
      "end": 11.6,
      "text": "formatting, but there are a lot of options beyond the basics that are",
      "tokens": [
        50766,
        39366,
        11,
        457,
        456,
        366,
        257,
        688,
        295,
        3956,
        4399,
        264,
        14688,
        300,
        366,
        50944
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09520354786434689,
      "compression_ratio": 1.8660714285714286,
      "no_speech_prob": 0.07187025249004364,
      "confidence": 0.9281297475099564
    },
    {
      "id": 3,
      "start": 11.6,
      "end": 15.24,
      "text": "available that will allow us to format our strings in exactly the way that we",
      "tokens": [
        50944,
        2435,
        300,
        486,
        2089,
        505,
        281,
        7877,
        527,
        13985,
        294,
        2293,
        264,
        636,
        300,
        321,
        51126
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09520354786434689,
      "compression_ratio": 1.8660714285714286,
      "no_speech_prob": 0.07187025249004364,
      "confidence": 0.9281297475099564
    },
    {
      "id": 4,
      "start": 15.24,
      "end": 18.44,
      "text": "want. So I'm going to run through a few examples here really fast just to show",
      "tokens": [
        51126,
        528,
        13,
        407,
        286,
        478,
        516,
        281,
        1190,
        807,
        257,
        1326,
        5110,
        510,
        534,
        2370,
        445,
        281,
        855,
        51286
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09520354786434689,
      "compression_ratio": 1.8660714285714286,
      "no_speech_prob": 0.07187025249004364,
      "confidence": 0.9281297475099564
    },
    {
      "id": 5,
      "start": 18.44,
      "end": 22.88,
      "text": "some of the different things that we can do with formatting our strings. So first",
      "tokens": [
        51286,
        512,
        295,
        264,
        819,
        721,
        300,
        321,
        393,
        360,
        365,
        39366,
        527,
        13985,
        13,
        407,
        700,
        51508
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09520354786434689,
      "compression_ratio": 1.8660714285714286,
      "no_speech_prob": 0.07187025249004364,
      "confidence": 0.9281297475099564
    },
    {
      "id": 6,
      "start": 22.88,
      "end": 26.080000000000002,
      "text": "of all, if you're not already using some kind of formatting when you print out",
      "tokens": [
        51508,
        295,
        439,
        11,
        498,
        291,
        434,
        406,
        1217,
        1228,
        512,
        733,
        295,
        39366,
        562,
        291,
        4482,
        484,
        51668
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09520354786434689,
      "compression_ratio": 1.8660714285714286,
      "no_speech_prob": 0.07187025249004364,
      "confidence": 0.9281297475099564
    },
    {
      "id": 7,
      "start": 26.080000000000002,
      "end": 29.96,
      "text": "your strings, then you definitely should be. So sometimes I'll see people using",
      "tokens": [
        51668,
        428,
        13985,
        11,
        550,
        291,
        2138,
        820,
        312,
        13,
        407,
        2171,
        286,
        603,
        536,
        561,
        1228,
        51862
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09520354786434689,
      "compression_ratio": 1.8660714285714286,
      "no_speech_prob": 0.07187025249004364,
      "confidence": 0.9281297475099564
    },
    {
      "id": 8,
      "start": 29.96,
      "end": 33.8,
      "text": "string concatenation to display information, and that's exactly what I'm",
      "tokens": [
        50364,
        6798,
        1588,
        7186,
        399,
        281,
        4674,
        1589,
        11,
        293,
        300,
        311,
        2293,
        437,
        286,
        478,
        50556
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10435125849268458,
      "compression_ratio": 1.7272727272727273,
      "no_speech_prob": 0.00859395693987608,
      "confidence": 0.9914060430601239
    },
    {
      "id": 9,
      "start": 33.8,
      "end": 38.52,
      "text": "doing on this first line here. And there are a few things wrong with this. So you",
      "tokens": [
        50556,
        884,
        322,
        341,
        700,
        1622,
        510,
        13,
        400,
        456,
        366,
        257,
        1326,
        721,
        2085,
        365,
        341,
        13,
        407,
        291,
        50792
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10435125849268458,
      "compression_ratio": 1.7272727272727273,
      "no_speech_prob": 0.00859395693987608,
      "confidence": 0.9914060430601239
    },
    {
      "id": 10,
      "start": 38.52,
      "end": 42.68,
      "text": "can see first of all it's not very readable. You have to open and close",
      "tokens": [
        50792,
        393,
        536,
        700,
        295,
        439,
        309,
        311,
        406,
        588,
        49857,
        13,
        509,
        362,
        281,
        1269,
        293,
        1998,
        51000
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10435125849268458,
      "compression_ratio": 1.7272727272727273,
      "no_speech_prob": 0.00859395693987608,
      "confidence": 0.9914060430601239
    },
    {
      "id": 11,
      "start": 42.68,
      "end": 48.120000000000005,
      "text": "strings in different places, plus you have plus signs everywhere. Whenever you",
      "tokens": [
        51000,
        13985,
        294,
        819,
        3190,
        11,
        1804,
        291,
        362,
        1804,
        7880,
        5315,
        13,
        14159,
        291,
        51272
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10435125849268458,
      "compression_ratio": 1.7272727272727273,
      "no_speech_prob": 0.00859395693987608,
      "confidence": 0.9914060430601239
    },
    {
      "id": 12,
      "start": 48.120000000000005,
      "end": 52.94,
      "text": "have an integer, you have to cast those two strings. And also you have to",
      "tokens": [
        51272,
        362,
        364,
        24922,
        11,
        291,
        362,
        281,
        4193,
        729,
        732,
        13985,
        13,
        400,
        611,
        291,
        362,
        281,
        51513
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10435125849268458,
      "compression_ratio": 1.7272727272727273,
      "no_speech_prob": 0.00859395693987608,
      "confidence": 0.9914060430601239
    },
    {
      "id": 13,
      "start": 52.94,
      "end": 57.44,
      "text": "remember to put spaces in the correct location. So this middle string here I",
      "tokens": [
        51513,
        1604,
        281,
        829,
        7673,
        294,
        264,
        3006,
        4914,
        13,
        407,
        341,
        2808,
        6798,
        510,
        286,
        51738
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10435125849268458,
      "compression_ratio": 1.7272727272727273,
      "no_speech_prob": 0.00859395693987608,
      "confidence": 0.9914060430601239
    },
    {
      "id": 14,
      "start": 57.44,
      "end": 61.12,
      "text": "have to remember to put in a space at the beginning and at the end. And if I",
      "tokens": [
        50364,
        362,
        281,
        1604,
        281,
        829,
        294,
        257,
        1901,
        412,
        264,
        2863,
        293,
        412,
        264,
        917,
        13,
        400,
        498,
        286,
        50548
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08998824985882709,
      "compression_ratio": 1.7536764705882353,
      "no_speech_prob": 0.048665307462215424,
      "confidence": 0.9513346925377846
    },
    {
      "id": 15,
      "start": 61.12,
      "end": 65.56,
      "text": "mess that up, then it can bunch my string together when I print it out. So you can",
      "tokens": [
        50548,
        2082,
        300,
        493,
        11,
        550,
        309,
        393,
        3840,
        452,
        6798,
        1214,
        562,
        286,
        4482,
        309,
        484,
        13,
        407,
        291,
        393,
        50770
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08998824985882709,
      "compression_ratio": 1.7536764705882353,
      "no_speech_prob": 0.048665307462215424,
      "confidence": 0.9513346925377846
    },
    {
      "id": 16,
      "start": 65.56,
      "end": 71.08,
      "text": "see if I run this code that it does work, but there are much better ways to do",
      "tokens": [
        50770,
        536,
        498,
        286,
        1190,
        341,
        3089,
        300,
        309,
        775,
        589,
        11,
        457,
        456,
        366,
        709,
        1101,
        2098,
        281,
        360,
        51046
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08998824985882709,
      "compression_ratio": 1.7536764705882353,
      "no_speech_prob": 0.048665307462215424,
      "confidence": 0.9513346925377846
    },
    {
      "id": 17,
      "start": 71.08,
      "end": 76.03999999999999,
      "text": "this. So it's much easier to use the formatting option, and that's what we're",
      "tokens": [
        51046,
        341,
        13,
        407,
        309,
        311,
        709,
        3571,
        281,
        764,
        264,
        39366,
        3614,
        11,
        293,
        300,
        311,
        437,
        321,
        434,
        51294
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08998824985882709,
      "compression_ratio": 1.7536764705882353,
      "no_speech_prob": 0.048665307462215424,
      "confidence": 0.9513346925377846
    },
    {
      "id": 18,
      "start": 76.03999999999999,
      "end": 80.72,
      "text": "going to take a look at here. So let me uncomment out this. So you can see that",
      "tokens": [
        51294,
        516,
        281,
        747,
        257,
        574,
        412,
        510,
        13,
        407,
        718,
        385,
        8585,
        518,
        484,
        341,
        13,
        407,
        291,
        393,
        536,
        300,
        51528
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08998824985882709,
      "compression_ratio": 1.7536764705882353,
      "no_speech_prob": 0.048665307462215424,
      "confidence": 0.9513346925377846
    },
    {
      "id": 19,
      "start": 80.72,
      "end": 86.36,
      "text": "this is a lot easier to read. Now we have these braces here as placeholders, and",
      "tokens": [
        51528,
        341,
        307,
        257,
        688,
        3571,
        281,
        1401,
        13,
        823,
        321,
        362,
        613,
        41537,
        510,
        382,
        1081,
        12916,
        11,
        293,
        51810
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08998824985882709,
      "compression_ratio": 1.7536764705882353,
      "no_speech_prob": 0.048665307462215424,
      "confidence": 0.9513346925377846
    },
    {
      "id": 20,
      "start": 86.4,
      "end": 92.03999999999999,
      "text": "after our string closes, we run this format method, and then we pass in the",
      "tokens": [
        50366,
        934,
        527,
        6798,
        24157,
        11,
        321,
        1190,
        341,
        7877,
        3170,
        11,
        293,
        550,
        321,
        1320,
        294,
        264,
        50648
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09706242064125517,
      "compression_ratio": 1.9075630252100841,
      "no_speech_prob": 0.05418640747666359,
      "confidence": 0.9458135925233364
    },
    {
      "id": 21,
      "start": 92.03999999999999,
      "end": 96.52,
      "text": "values that we want to replace our placeholders with. Now if we do it the",
      "tokens": [
        50648,
        4190,
        300,
        321,
        528,
        281,
        7406,
        527,
        1081,
        12916,
        365,
        13,
        823,
        498,
        321,
        360,
        309,
        264,
        50872
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09706242064125517,
      "compression_ratio": 1.9075630252100841,
      "no_speech_prob": 0.05418640747666359,
      "confidence": 0.9458135925233364
    },
    {
      "id": 22,
      "start": 96.52,
      "end": 100.92,
      "text": "way that I did here and don't add anything to these placeholders, then what",
      "tokens": [
        50872,
        636,
        300,
        286,
        630,
        510,
        293,
        500,
        380,
        909,
        1340,
        281,
        613,
        1081,
        12916,
        11,
        550,
        437,
        51092
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09706242064125517,
      "compression_ratio": 1.9075630252100841,
      "no_speech_prob": 0.05418640747666359,
      "confidence": 0.9458135925233364
    },
    {
      "id": 23,
      "start": 100.92,
      "end": 105.52,
      "text": "it's going to do is it's just going to pass our first value here to our first",
      "tokens": [
        51092,
        309,
        311,
        516,
        281,
        360,
        307,
        309,
        311,
        445,
        516,
        281,
        1320,
        527,
        700,
        2158,
        510,
        281,
        527,
        700,
        51322
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09706242064125517,
      "compression_ratio": 1.9075630252100841,
      "no_speech_prob": 0.05418640747666359,
      "confidence": 0.9458135925233364
    },
    {
      "id": 24,
      "start": 105.52,
      "end": 109.88,
      "text": "placeholder, and our second value to our second placeholder. Now if you want to,",
      "tokens": [
        51322,
        1081,
        20480,
        11,
        293,
        527,
        1150,
        2158,
        281,
        527,
        1150,
        1081,
        20480,
        13,
        823,
        498,
        291,
        528,
        281,
        11,
        51540
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09706242064125517,
      "compression_ratio": 1.9075630252100841,
      "no_speech_prob": 0.05418640747666359,
      "confidence": 0.9458135925233364
    },
    {
      "id": 25,
      "start": 109.88,
      "end": 115.52,
      "text": "you can explicitly number your placeholders. So in this example here,",
      "tokens": [
        51540,
        291,
        393,
        20803,
        1230,
        428,
        1081,
        12916,
        13,
        407,
        294,
        341,
        1365,
        510,
        11,
        51822
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09706242064125517,
      "compression_ratio": 1.9075630252100841,
      "no_speech_prob": 0.05418640747666359,
      "confidence": 0.9458135925233364
    },
    {
      "id": 26,
      "start": 115.52,
      "end": 119.96,
      "text": "it's the exact same example, but now I've numbered my placeholders. So now",
      "tokens": [
        50364,
        309,
        311,
        264,
        1900,
        912,
        1365,
        11,
        457,
        586,
        286,
        600,
        40936,
        452,
        1081,
        12916,
        13,
        407,
        586,
        50586
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0863295461310715,
      "compression_ratio": 1.8983739837398375,
      "no_speech_prob": 0.014268320053815842,
      "confidence": 0.9857316799461842
    },
    {
      "id": 27,
      "start": 119.96,
      "end": 125.03999999999999,
      "text": "what this is saying is that we want this zero here is the first value that you",
      "tokens": [
        50586,
        437,
        341,
        307,
        1566,
        307,
        300,
        321,
        528,
        341,
        4018,
        510,
        307,
        264,
        700,
        2158,
        300,
        291,
        50840
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0863295461310715,
      "compression_ratio": 1.8983739837398375,
      "no_speech_prob": 0.014268320053815842,
      "confidence": 0.9857316799461842
    },
    {
      "id": 28,
      "start": 125.03999999999999,
      "end": 129.2,
      "text": "pass in the format, and then this one is the second value that you pass in the",
      "tokens": [
        50840,
        1320,
        294,
        264,
        7877,
        11,
        293,
        550,
        341,
        472,
        307,
        264,
        1150,
        2158,
        300,
        291,
        1320,
        294,
        264,
        51048
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0863295461310715,
      "compression_ratio": 1.8983739837398375,
      "no_speech_prob": 0.014268320053815842,
      "confidence": 0.9857316799461842
    },
    {
      "id": 29,
      "start": 129.2,
      "end": 133.2,
      "text": "format. And if I save that and run it, you can see that it still works. Now this is",
      "tokens": [
        51048,
        7877,
        13,
        400,
        498,
        286,
        3155,
        300,
        293,
        1190,
        309,
        11,
        291,
        393,
        536,
        300,
        309,
        920,
        1985,
        13,
        823,
        341,
        307,
        51248
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0863295461310715,
      "compression_ratio": 1.8983739837398375,
      "no_speech_prob": 0.014268320053815842,
      "confidence": 0.9857316799461842
    },
    {
      "id": 30,
      "start": 133.2,
      "end": 138.56,
      "text": "more useful when you have placeholders for values that need to be repeated. So",
      "tokens": [
        51248,
        544,
        4420,
        562,
        291,
        362,
        1081,
        12916,
        337,
        4190,
        300,
        643,
        281,
        312,
        10477,
        13,
        407,
        51516
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0863295461310715,
      "compression_ratio": 1.8983739837398375,
      "no_speech_prob": 0.014268320053815842,
      "confidence": 0.9857316799461842
    },
    {
      "id": 31,
      "start": 138.56,
      "end": 144.28,
      "text": "in this next example that I have here, you can see that I have this tag",
      "tokens": [
        51516,
        294,
        341,
        958,
        1365,
        300,
        286,
        362,
        510,
        11,
        291,
        393,
        536,
        300,
        286,
        362,
        341,
        6162,
        51802
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0863295461310715,
      "compression_ratio": 1.8983739837398375,
      "no_speech_prob": 0.014268320053815842,
      "confidence": 0.9857316799461842
    },
    {
      "id": 32,
      "start": 144.32,
      "end": 150.44,
      "text": "variable and this text variable. So in my string, I'm putting the tag in some",
      "tokens": [
        50366,
        7006,
        293,
        341,
        2487,
        7006,
        13,
        407,
        294,
        452,
        6798,
        11,
        286,
        478,
        3372,
        264,
        6162,
        294,
        512,
        50672
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09740882274533107,
      "compression_ratio": 1.9579831932773109,
      "no_speech_prob": 0.1809834986925125,
      "confidence": 0.8190165013074875
    },
    {
      "id": 33,
      "start": 150.44,
      "end": 154.96,
      "text": "opening brackets here, and then I'm putting in a placeholder for the text,",
      "tokens": [
        50672,
        5193,
        26179,
        510,
        11,
        293,
        550,
        286,
        478,
        3372,
        294,
        257,
        1081,
        20480,
        337,
        264,
        2487,
        11,
        50898
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09740882274533107,
      "compression_ratio": 1.9579831932773109,
      "no_speech_prob": 0.1809834986925125,
      "confidence": 0.8190165013074875
    },
    {
      "id": 34,
      "start": 154.96,
      "end": 159.6,
      "text": "and then I'm putting the tag inside these closing braces here. And then the",
      "tokens": [
        50898,
        293,
        550,
        286,
        478,
        3372,
        264,
        6162,
        1854,
        613,
        10377,
        41537,
        510,
        13,
        400,
        550,
        264,
        51130
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09740882274533107,
      "compression_ratio": 1.9579831932773109,
      "no_speech_prob": 0.1809834986925125,
      "confidence": 0.8190165013074875
    },
    {
      "id": 35,
      "start": 159.6,
      "end": 165.0,
      "text": "values that I pass in the format tag will go where all of the zeros are for",
      "tokens": [
        51130,
        4190,
        300,
        286,
        1320,
        294,
        264,
        7877,
        6162,
        486,
        352,
        689,
        439,
        295,
        264,
        35193,
        366,
        337,
        51400
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09740882274533107,
      "compression_ratio": 1.9579831932773109,
      "no_speech_prob": 0.1809834986925125,
      "confidence": 0.8190165013074875
    },
    {
      "id": 36,
      "start": 165.0,
      "end": 169.56,
      "text": "our placeholders, and text will go where the one is for our placeholder. So if I",
      "tokens": [
        51400,
        527,
        1081,
        12916,
        11,
        293,
        2487,
        486,
        352,
        689,
        264,
        472,
        307,
        337,
        527,
        1081,
        20480,
        13,
        407,
        498,
        286,
        51628
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09740882274533107,
      "compression_ratio": 1.9579831932773109,
      "no_speech_prob": 0.1809834986925125,
      "confidence": 0.8190165013074875
    },
    {
      "id": 37,
      "start": 169.56,
      "end": 173.44,
      "text": "save that and run it, you can see that it prints out the value that we expected.",
      "tokens": [
        51628,
        3155,
        300,
        293,
        1190,
        309,
        11,
        291,
        393,
        536,
        300,
        309,
        22305,
        484,
        264,
        2158,
        300,
        321,
        5176,
        13,
        51822
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09740882274533107,
      "compression_ratio": 1.9579831932773109,
      "no_speech_prob": 0.1809834986925125,
      "confidence": 0.8190165013074875
    },
    {
      "id": 38,
      "start": 173.44,
      "end": 180.12,
      "text": "Okay, so now we can also grab specific fields from our placeholders. So in our",
      "tokens": [
        50364,
        1033,
        11,
        370,
        586,
        321,
        393,
        611,
        4444,
        2685,
        7909,
        490,
        527,
        1081,
        12916,
        13,
        407,
        294,
        527,
        50698
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12929312388102213,
      "compression_ratio": 1.896551724137931,
      "no_speech_prob": 0.004692647140473127,
      "confidence": 0.9953073528595269
    },
    {
      "id": 39,
      "start": 180.12,
      "end": 187.0,
      "text": "previous example, we were passing in a dictionary to our format, and within our",
      "tokens": [
        50698,
        3894,
        1365,
        11,
        321,
        645,
        8437,
        294,
        257,
        25890,
        281,
        527,
        7877,
        11,
        293,
        1951,
        527,
        51042
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12929312388102213,
      "compression_ratio": 1.896551724137931,
      "no_speech_prob": 0.004692647140473127,
      "confidence": 0.9953073528595269
    },
    {
      "id": 40,
      "start": 187.0,
      "end": 192.34,
      "text": "format we were accessing the name and the age of this dictionary from",
      "tokens": [
        51042,
        7877,
        321,
        645,
        26440,
        264,
        1315,
        293,
        264,
        3205,
        295,
        341,
        25890,
        490,
        51309
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12929312388102213,
      "compression_ratio": 1.896551724137931,
      "no_speech_prob": 0.004692647140473127,
      "confidence": 0.9953073528595269
    },
    {
      "id": 41,
      "start": 192.34,
      "end": 197.4,
      "text": "directly within the format here. But we can actually access these fields from",
      "tokens": [
        51309,
        3838,
        1951,
        264,
        7877,
        510,
        13,
        583,
        321,
        393,
        767,
        2105,
        613,
        7909,
        490,
        51562
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12929312388102213,
      "compression_ratio": 1.896551724137931,
      "no_speech_prob": 0.004692647140473127,
      "confidence": 0.9953073528595269
    },
    {
      "id": 42,
      "start": 197.4,
      "end": 202.56,
      "text": "directly within the placeholders. So within the placeholder here for zero, I'm",
      "tokens": [
        51562,
        3838,
        1951,
        264,
        1081,
        12916,
        13,
        407,
        1951,
        264,
        1081,
        20480,
        510,
        337,
        4018,
        11,
        286,
        478,
        51820
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12929312388102213,
      "compression_ratio": 1.896551724137931,
      "no_speech_prob": 0.004692647140473127,
      "confidence": 0.9953073528595269
    },
    {
      "id": 43,
      "start": 202.72,
      "end": 207.72,
      "text": "just going to put these brackets here and do name, and for one I'm going to do",
      "tokens": [
        50372,
        445,
        516,
        281,
        829,
        613,
        26179,
        510,
        293,
        360,
        1315,
        11,
        293,
        337,
        472,
        286,
        478,
        516,
        281,
        360,
        50622
      ],
      "temperature": 0.0,
      "avg_logprob": -0.113296376596583,
      "compression_ratio": 1.8027522935779816,
      "no_speech_prob": 0.011839582584798336,
      "confidence": 0.9881604174152017
    },
    {
      "id": 44,
      "start": 207.72,
      "end": 214.04,
      "text": "age, and then I can take these off of our dictionary here and just pass in the",
      "tokens": [
        50622,
        3205,
        11,
        293,
        550,
        286,
        393,
        747,
        613,
        766,
        295,
        527,
        25890,
        510,
        293,
        445,
        1320,
        294,
        264,
        50938
      ],
      "temperature": 0.0,
      "avg_logprob": -0.113296376596583,
      "compression_ratio": 1.8027522935779816,
      "no_speech_prob": 0.011839582584798336,
      "confidence": 0.9881604174152017
    },
    {
      "id": 45,
      "start": 214.04,
      "end": 217.68,
      "text": "dictionary. So let me save that and run it, and you can see that that still works.",
      "tokens": [
        50938,
        25890,
        13,
        407,
        718,
        385,
        3155,
        300,
        293,
        1190,
        309,
        11,
        293,
        291,
        393,
        536,
        300,
        300,
        920,
        1985,
        13,
        51120
      ],
      "temperature": 0.0,
      "avg_logprob": -0.113296376596583,
      "compression_ratio": 1.8027522935779816,
      "no_speech_prob": 0.011839582584798336,
      "confidence": 0.9881604174152017
    },
    {
      "id": 46,
      "start": 217.68,
      "end": 221.84,
      "text": "Now another thing that you might notice is that now you can see that I'm just",
      "tokens": [
        51120,
        823,
        1071,
        551,
        300,
        291,
        1062,
        3449,
        307,
        300,
        586,
        291,
        393,
        536,
        300,
        286,
        478,
        445,
        51328
      ],
      "temperature": 0.0,
      "avg_logprob": -0.113296376596583,
      "compression_ratio": 1.8027522935779816,
      "no_speech_prob": 0.011839582584798336,
      "confidence": 0.9881604174152017
    },
    {
      "id": 47,
      "start": 221.84,
      "end": 227.04,
      "text": "passing in this dictionary into format twice. I have person and person. So",
      "tokens": [
        51328,
        8437,
        294,
        341,
        25890,
        666,
        7877,
        6091,
        13,
        286,
        362,
        954,
        293,
        954,
        13,
        407,
        51588
      ],
      "temperature": 0.0,
      "avg_logprob": -0.113296376596583,
      "compression_ratio": 1.8027522935779816,
      "no_speech_prob": 0.011839582584798336,
      "confidence": 0.9881604174152017
    },
    {
      "id": 48,
      "start": 227.04,
      "end": 232.76,
      "text": "really what I can do is I can just make both of these a zero index to take the",
      "tokens": [
        50364,
        534,
        437,
        286,
        393,
        360,
        307,
        286,
        393,
        445,
        652,
        1293,
        295,
        613,
        257,
        4018,
        8186,
        281,
        747,
        264,
        50650
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08504728170541617,
      "compression_ratio": 1.8494208494208495,
      "no_speech_prob": 0.16984571516513824,
      "confidence": 0.8301542848348618
    },
    {
      "id": 49,
      "start": 232.76,
      "end": 237.72,
      "text": "first value from format, and then I can get rid of the second value. And now what",
      "tokens": [
        50650,
        700,
        2158,
        490,
        7877,
        11,
        293,
        550,
        286,
        393,
        483,
        3973,
        295,
        264,
        1150,
        2158,
        13,
        400,
        586,
        437,
        50898
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08504728170541617,
      "compression_ratio": 1.8494208494208495,
      "no_speech_prob": 0.16984571516513824,
      "confidence": 0.8301542848348618
    },
    {
      "id": 50,
      "start": 237.72,
      "end": 241.92,
      "text": "this is going to do is it's going to pass the person dictionary to all of our",
      "tokens": [
        50898,
        341,
        307,
        516,
        281,
        360,
        307,
        309,
        311,
        516,
        281,
        1320,
        264,
        954,
        25890,
        281,
        439,
        295,
        527,
        51108
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08504728170541617,
      "compression_ratio": 1.8494208494208495,
      "no_speech_prob": 0.16984571516513824,
      "confidence": 0.8301542848348618
    },
    {
      "id": 51,
      "start": 241.92,
      "end": 245.12,
      "text": "placeholders, and here it's going to access the name, and here it's going to",
      "tokens": [
        51108,
        1081,
        12916,
        11,
        293,
        510,
        309,
        311,
        516,
        281,
        2105,
        264,
        1315,
        11,
        293,
        510,
        309,
        311,
        516,
        281,
        51268
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08504728170541617,
      "compression_ratio": 1.8494208494208495,
      "no_speech_prob": 0.16984571516513824,
      "confidence": 0.8301542848348618
    },
    {
      "id": 52,
      "start": 245.12,
      "end": 248.84,
      "text": "access the age. So if I save that and run it, then you can see that it still works.",
      "tokens": [
        51268,
        2105,
        264,
        3205,
        13,
        407,
        498,
        286,
        3155,
        300,
        293,
        1190,
        309,
        11,
        550,
        291,
        393,
        536,
        300,
        309,
        920,
        1985,
        13,
        51454
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08504728170541617,
      "compression_ratio": 1.8494208494208495,
      "no_speech_prob": 0.16984571516513824,
      "confidence": 0.8301542848348618
    },
    {
      "id": 53,
      "start": 248.84,
      "end": 254.39999999999998,
      "text": "Now this is also how you would access values of a list too. So for example, let",
      "tokens": [
        51454,
        823,
        341,
        307,
        611,
        577,
        291,
        576,
        2105,
        4190,
        295,
        257,
        1329,
        886,
        13,
        407,
        337,
        1365,
        11,
        718,
        51732
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08504728170541617,
      "compression_ratio": 1.8494208494208495,
      "no_speech_prob": 0.16984571516513824,
      "confidence": 0.8301542848348618
    },
    {
      "id": 54,
      "start": 254.4,
      "end": 259.76,
      "text": "me do L equals and make a list here, and I'm just going to do the exact same",
      "tokens": [
        50364,
        385,
        360,
        441,
        6915,
        293,
        652,
        257,
        1329,
        510,
        11,
        293,
        286,
        478,
        445,
        516,
        281,
        360,
        264,
        1900,
        912,
        50632
      ],
      "temperature": 0.0,
      "avg_logprob": -0.14165687561035156,
      "compression_ratio": 1.7466666666666666,
      "no_speech_prob": 0.16788655519485474,
      "confidence": 0.8321134448051453
    },
    {
      "id": 55,
      "start": 259.76,
      "end": 265.88,
      "text": "value. So I'm going to do Gen and 23, and here I'm going to pass in that list, and",
      "tokens": [
        50632,
        2158,
        13,
        407,
        286,
        478,
        516,
        281,
        360,
        3632,
        293,
        6673,
        11,
        293,
        510,
        286,
        478,
        516,
        281,
        1320,
        294,
        300,
        1329,
        11,
        293,
        50938
      ],
      "temperature": 0.0,
      "avg_logprob": -0.14165687561035156,
      "compression_ratio": 1.7466666666666666,
      "no_speech_prob": 0.16788655519485474,
      "confidence": 0.8321134448051453
    },
    {
      "id": 56,
      "start": 265.88,
      "end": 272.8,
      "text": "now instead of name, I'm going to grab the first index there and then the next",
      "tokens": [
        50938,
        586,
        2602,
        295,
        1315,
        11,
        286,
        478,
        516,
        281,
        4444,
        264,
        700,
        8186,
        456,
        293,
        550,
        264,
        958,
        51284
      ],
      "temperature": 0.0,
      "avg_logprob": -0.14165687561035156,
      "compression_ratio": 1.7466666666666666,
      "no_speech_prob": 0.16788655519485474,
      "confidence": 0.8321134448051453
    },
    {
      "id": 57,
      "start": 272.8,
      "end": 277.32,
      "text": "index and save that and run it, and you can see that that works also. Okay, so",
      "tokens": [
        51284,
        8186,
        293,
        3155,
        300,
        293,
        1190,
        309,
        11,
        293,
        291,
        393,
        536,
        300,
        300,
        1985,
        611,
        13,
        1033,
        11,
        370,
        51510
      ],
      "temperature": 0.0,
      "avg_logprob": -0.14165687561035156,
      "compression_ratio": 1.7466666666666666,
      "no_speech_prob": 0.16788655519485474,
      "confidence": 0.8321134448051453
    },
    {
      "id": 58,
      "start": 277.32,
      "end": 281.56,
      "text": "that is how you access values from dictionaries and lists, but you can also",
      "tokens": [
        51510,
        300,
        307,
        577,
        291,
        2105,
        4190,
        490,
        22352,
        4889,
        293,
        14511,
        11,
        457,
        291,
        393,
        611,
        51722
      ],
      "temperature": 0.0,
      "avg_logprob": -0.14165687561035156,
      "compression_ratio": 1.7466666666666666,
      "no_speech_prob": 0.16788655519485474,
      "confidence": 0.8321134448051453
    },
    {
      "id": 59,
      "start": 281.56,
      "end": 287.56,
      "text": "access attributes in a similar way. Okay, so I have a small test class here called",
      "tokens": [
        50364,
        2105,
        17212,
        294,
        257,
        2531,
        636,
        13,
        1033,
        11,
        370,
        286,
        362,
        257,
        1359,
        1500,
        1508,
        510,
        1219,
        50664
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12449032652611826,
      "compression_ratio": 1.703862660944206,
      "no_speech_prob": 0.44848936796188354,
      "confidence": 0.5515106320381165
    },
    {
      "id": 60,
      "start": 287.56,
      "end": 293.96,
      "text": "person, and this has a name attribute and an age attribute, and then here I'm",
      "tokens": [
        50664,
        954,
        11,
        293,
        341,
        575,
        257,
        1315,
        19667,
        293,
        364,
        3205,
        19667,
        11,
        293,
        550,
        510,
        286,
        478,
        50984
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12449032652611826,
      "compression_ratio": 1.703862660944206,
      "no_speech_prob": 0.44848936796188354,
      "confidence": 0.5515106320381165
    },
    {
      "id": 61,
      "start": 293.96,
      "end": 300.48,
      "text": "making an instance of this class person with the name Jack and the age 33. Now if",
      "tokens": [
        50984,
        1455,
        364,
        5197,
        295,
        341,
        1508,
        954,
        365,
        264,
        1315,
        4718,
        293,
        264,
        3205,
        11816,
        13,
        823,
        498,
        51310
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12449032652611826,
      "compression_ratio": 1.703862660944206,
      "no_speech_prob": 0.44848936796188354,
      "confidence": 0.5515106320381165
    },
    {
      "id": 62,
      "start": 300.48,
      "end": 304.76,
      "text": "I want to print this out, it's almost the same as what we did with the dictionary,",
      "tokens": [
        51310,
        286,
        528,
        281,
        4482,
        341,
        484,
        11,
        309,
        311,
        1920,
        264,
        912,
        382,
        437,
        321,
        630,
        365,
        264,
        25890,
        11,
        51524
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12449032652611826,
      "compression_ratio": 1.703862660944206,
      "no_speech_prob": 0.44848936796188354,
      "confidence": 0.5515106320381165
    },
    {
      "id": 63,
      "start": 304.76,
      "end": 309.4,
      "text": "but now instead of using the brackets, we're just going to use this dot",
      "tokens": [
        51524,
        457,
        586,
        2602,
        295,
        1228,
        264,
        26179,
        11,
        321,
        434,
        445,
        516,
        281,
        764,
        341,
        5893,
        51756
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12449032652611826,
      "compression_ratio": 1.703862660944206,
      "no_speech_prob": 0.44848936796188354,
      "confidence": 0.5515106320381165
    },
    {
      "id": 64,
      "start": 309.4,
      "end": 313.71999999999997,
      "text": "attribute to grab that value. So you can see here I'm still just passing in this",
      "tokens": [
        50364,
        19667,
        281,
        4444,
        300,
        2158,
        13,
        407,
        291,
        393,
        536,
        510,
        286,
        478,
        920,
        445,
        8437,
        294,
        341,
        50580
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08428530091220893,
      "compression_ratio": 1.7533632286995515,
      "no_speech_prob": 0.48273658752441406,
      "confidence": 0.5172634124755859
    },
    {
      "id": 65,
      "start": 313.71999999999997,
      "end": 318.44,
      "text": "single object into format, and it's going to come in here and grab the name",
      "tokens": [
        50580,
        2167,
        2657,
        666,
        7877,
        11,
        293,
        309,
        311,
        516,
        281,
        808,
        294,
        510,
        293,
        4444,
        264,
        1315,
        50816
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08428530091220893,
      "compression_ratio": 1.7533632286995515,
      "no_speech_prob": 0.48273658752441406,
      "confidence": 0.5172634124755859
    },
    {
      "id": 66,
      "start": 318.44,
      "end": 322.67999999999995,
      "text": "attribute and the age attribute. So if I save that and run it, you can see that",
      "tokens": [
        50816,
        19667,
        293,
        264,
        3205,
        19667,
        13,
        407,
        498,
        286,
        3155,
        300,
        293,
        1190,
        309,
        11,
        291,
        393,
        536,
        300,
        51028
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08428530091220893,
      "compression_ratio": 1.7533632286995515,
      "no_speech_prob": 0.48273658752441406,
      "confidence": 0.5172634124755859
    },
    {
      "id": 67,
      "start": 322.67999999999995,
      "end": 330.4,
      "text": "that worked. Okay, so we can also pass in keyword arguments to format. So for my",
      "tokens": [
        51028,
        300,
        2732,
        13,
        1033,
        11,
        370,
        321,
        393,
        611,
        1320,
        294,
        20428,
        12869,
        281,
        7877,
        13,
        407,
        337,
        452,
        51414
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08428530091220893,
      "compression_ratio": 1.7533632286995515,
      "no_speech_prob": 0.48273658752441406,
      "confidence": 0.5172634124755859
    },
    {
      "id": 68,
      "start": 330.4,
      "end": 335.67999999999995,
      "text": "example that I have here, I have my placeholders, and I'm just passing in",
      "tokens": [
        51414,
        1365,
        300,
        286,
        362,
        510,
        11,
        286,
        362,
        452,
        1081,
        12916,
        11,
        293,
        286,
        478,
        445,
        8437,
        294,
        51678
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08428530091220893,
      "compression_ratio": 1.7533632286995515,
      "no_speech_prob": 0.48273658752441406,
      "confidence": 0.5172634124755859
    },
    {
      "id": 69,
      "start": 335.68,
      "end": 342.04,
      "text": "some keywords into the placeholders. Now within format here, instead of passing in",
      "tokens": [
        50364,
        512,
        21009,
        666,
        264,
        1081,
        12916,
        13,
        823,
        1951,
        7877,
        510,
        11,
        2602,
        295,
        8437,
        294,
        50682
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10966917547849145,
      "compression_ratio": 1.706896551724138,
      "no_speech_prob": 0.5145825147628784,
      "confidence": 0.4854174852371216
    },
    {
      "id": 70,
      "start": 342.04,
      "end": 347.32,
      "text": "a specific object, I'm setting these keyword values. So I'm setting name",
      "tokens": [
        50682,
        257,
        2685,
        2657,
        11,
        286,
        478,
        3287,
        613,
        20428,
        4190,
        13,
        407,
        286,
        478,
        3287,
        1315,
        50946
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10966917547849145,
      "compression_ratio": 1.706896551724138,
      "no_speech_prob": 0.5145825147628784,
      "confidence": 0.4854174852371216
    },
    {
      "id": 71,
      "start": 347.32,
      "end": 353.84000000000003,
      "text": "equal to gin and the age equal to 23. So now anywhere that it sees a placeholder",
      "tokens": [
        50946,
        2681,
        281,
        36604,
        293,
        264,
        3205,
        2681,
        281,
        6673,
        13,
        407,
        586,
        4992,
        300,
        309,
        8194,
        257,
        1081,
        20480,
        51272
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10966917547849145,
      "compression_ratio": 1.706896551724138,
      "no_speech_prob": 0.5145825147628784,
      "confidence": 0.4854174852371216
    },
    {
      "id": 72,
      "start": 353.84000000000003,
      "end": 359.08,
      "text": "that matches that keyword, then it'll fill it in with that value. So if I save",
      "tokens": [
        51272,
        300,
        10676,
        300,
        20428,
        11,
        550,
        309,
        603,
        2836,
        309,
        294,
        365,
        300,
        2158,
        13,
        407,
        498,
        286,
        3155,
        51534
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10966917547849145,
      "compression_ratio": 1.706896551724138,
      "no_speech_prob": 0.5145825147628784,
      "confidence": 0.4854174852371216
    },
    {
      "id": 73,
      "start": 359.08,
      "end": 363.32,
      "text": "that and run it, then you can see that that worked right. Now this is the method",
      "tokens": [
        51534,
        300,
        293,
        1190,
        309,
        11,
        550,
        291,
        393,
        536,
        300,
        300,
        2732,
        558,
        13,
        823,
        341,
        307,
        264,
        3170,
        51746
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10966917547849145,
      "compression_ratio": 1.706896551724138,
      "no_speech_prob": 0.5145825147628784,
      "confidence": 0.4854174852371216
    },
    {
      "id": 74,
      "start": 363.32,
      "end": 367.8,
      "text": "that I usually use to print out dictionaries, because I think that it is",
      "tokens": [
        50364,
        300,
        286,
        2673,
        764,
        281,
        4482,
        484,
        22352,
        4889,
        11,
        570,
        286,
        519,
        300,
        309,
        307,
        50588
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10245859300768054,
      "compression_ratio": 1.726235741444867,
      "no_speech_prob": 0.22600698471069336,
      "confidence": 0.7739930152893066
    },
    {
      "id": 75,
      "start": 367.8,
      "end": 372.28,
      "text": "a little bit more readable. Now if you know about unpacking lists and",
      "tokens": [
        50588,
        257,
        707,
        857,
        544,
        49857,
        13,
        823,
        498,
        291,
        458,
        466,
        26699,
        278,
        14511,
        293,
        50812
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10245859300768054,
      "compression_ratio": 1.726235741444867,
      "no_speech_prob": 0.22600698471069336,
      "confidence": 0.7739930152893066
    },
    {
      "id": 76,
      "start": 372.28,
      "end": 376.15999999999997,
      "text": "dictionaries, then you'll probably realize here that we can just unpack our",
      "tokens": [
        50812,
        22352,
        4889,
        11,
        550,
        291,
        603,
        1391,
        4325,
        510,
        300,
        321,
        393,
        445,
        26699,
        527,
        51006
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10245859300768054,
      "compression_ratio": 1.726235741444867,
      "no_speech_prob": 0.22600698471069336,
      "confidence": 0.7739930152893066
    },
    {
      "id": 77,
      "start": 376.15999999999997,
      "end": 380.88,
      "text": "dictionary from before into format, and it will find all those keywords for us",
      "tokens": [
        51006,
        25890,
        490,
        949,
        666,
        7877,
        11,
        293,
        309,
        486,
        915,
        439,
        729,
        21009,
        337,
        505,
        51242
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10245859300768054,
      "compression_ratio": 1.726235741444867,
      "no_speech_prob": 0.22600698471069336,
      "confidence": 0.7739930152893066
    },
    {
      "id": 78,
      "start": 380.88,
      "end": 385.52,
      "text": "to use. So I actually accidentally deleted that dictionary that we had from",
      "tokens": [
        51242,
        281,
        764,
        13,
        407,
        286,
        767,
        15715,
        22981,
        300,
        25890,
        300,
        321,
        632,
        490,
        51474
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10245859300768054,
      "compression_ratio": 1.726235741444867,
      "no_speech_prob": 0.22600698471069336,
      "confidence": 0.7739930152893066
    },
    {
      "id": 79,
      "start": 385.52,
      "end": 391.52,
      "text": "before, so let me go ahead and make that again. So let's see, that was name, and",
      "tokens": [
        51474,
        949,
        11,
        370,
        718,
        385,
        352,
        2286,
        293,
        652,
        300,
        797,
        13,
        407,
        718,
        311,
        536,
        11,
        300,
        390,
        1315,
        11,
        293,
        51774
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10245859300768054,
      "compression_ratio": 1.726235741444867,
      "no_speech_prob": 0.22600698471069336,
      "confidence": 0.7739930152893066
    },
    {
      "id": 80,
      "start": 391.64,
      "end": 400.32,
      "text": "I'll just do gin, and I'll do the age as 23, and let me fix that curly brace there.",
      "tokens": [
        50370,
        286,
        603,
        445,
        360,
        36604,
        11,
        293,
        286,
        603,
        360,
        264,
        3205,
        382,
        6673,
        11,
        293,
        718,
        385,
        3191,
        300,
        32066,
        38458,
        456,
        13,
        50804
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09646279471261161,
      "compression_ratio": 1.7025862068965518,
      "no_speech_prob": 0.08301325142383575,
      "confidence": 0.9169867485761642
    },
    {
      "id": 81,
      "start": 400.32,
      "end": 406.44,
      "text": "Okay, so now in this example here, I'm using these keyword arguments, and if I",
      "tokens": [
        50804,
        1033,
        11,
        370,
        586,
        294,
        341,
        1365,
        510,
        11,
        286,
        478,
        1228,
        613,
        20428,
        12869,
        11,
        293,
        498,
        286,
        51110
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09646279471261161,
      "compression_ratio": 1.7025862068965518,
      "no_speech_prob": 0.08301325142383575,
      "confidence": 0.9169867485761642
    },
    {
      "id": 82,
      "start": 406.44,
      "end": 411.12,
      "text": "just unpack that dictionary, then it will fill in those keyword arguments for us.",
      "tokens": [
        51110,
        445,
        26699,
        300,
        25890,
        11,
        550,
        309,
        486,
        2836,
        294,
        729,
        20428,
        12869,
        337,
        505,
        13,
        51344
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09646279471261161,
      "compression_ratio": 1.7025862068965518,
      "no_speech_prob": 0.08301325142383575,
      "confidence": 0.9169867485761642
    },
    {
      "id": 83,
      "start": 411.12,
      "end": 416.06,
      "text": "So let me save that and print it, and you can see that that worked. So to me,",
      "tokens": [
        51344,
        407,
        718,
        385,
        3155,
        300,
        293,
        4482,
        309,
        11,
        293,
        291,
        393,
        536,
        300,
        300,
        2732,
        13,
        407,
        281,
        385,
        11,
        51591
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09646279471261161,
      "compression_ratio": 1.7025862068965518,
      "no_speech_prob": 0.08301325142383575,
      "confidence": 0.9169867485761642
    },
    {
      "id": 84,
      "start": 416.06,
      "end": 419.59999999999997,
      "text": "that's the most readable and most convenient way to print out dictionary",
      "tokens": [
        51591,
        300,
        311,
        264,
        881,
        49857,
        293,
        881,
        10851,
        636,
        281,
        4482,
        484,
        25890,
        51768
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09646279471261161,
      "compression_ratio": 1.7025862068965518,
      "no_speech_prob": 0.08301325142383575,
      "confidence": 0.9169867485761642
    },
    {
      "id": 85,
      "start": 419.6,
      "end": 425.6,
      "text": "values. Okay, so now let's take a look at how we can format and print out numbers.",
      "tokens": [
        50364,
        4190,
        13,
        1033,
        11,
        370,
        586,
        718,
        311,
        747,
        257,
        574,
        412,
        577,
        321,
        393,
        7877,
        293,
        4482,
        484,
        3547,
        13,
        50664
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11343306415485886,
      "compression_ratio": 1.6822033898305084,
      "no_speech_prob": 0.07500238716602325,
      "confidence": 0.9249976128339767
    },
    {
      "id": 86,
      "start": 425.6,
      "end": 431.48,
      "text": "So in this example that I have here, all I'm doing here is looping through and",
      "tokens": [
        50664,
        407,
        294,
        341,
        1365,
        300,
        286,
        362,
        510,
        11,
        439,
        286,
        478,
        884,
        510,
        307,
        6367,
        278,
        807,
        293,
        50958
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11343306415485886,
      "compression_ratio": 1.6822033898305084,
      "no_speech_prob": 0.07500238716602325,
      "confidence": 0.9249976128339767
    },
    {
      "id": 87,
      "start": 431.48,
      "end": 437.0,
      "text": "printing out the numbers 1 through 10. So now what if I wanted all of these",
      "tokens": [
        50958,
        14699,
        484,
        264,
        3547,
        502,
        807,
        1266,
        13,
        407,
        586,
        437,
        498,
        286,
        1415,
        439,
        295,
        613,
        51234
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11343306415485886,
      "compression_ratio": 1.6822033898305084,
      "no_speech_prob": 0.07500238716602325,
      "confidence": 0.9249976128339767
    },
    {
      "id": 88,
      "start": 437.0,
      "end": 443.40000000000003,
      "text": "numbers to have two digits, and zero pad my single digit values with a zero. Now",
      "tokens": [
        51234,
        3547,
        281,
        362,
        732,
        27011,
        11,
        293,
        4018,
        6887,
        452,
        2167,
        14293,
        4190,
        365,
        257,
        4018,
        13,
        823,
        51554
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11343306415485886,
      "compression_ratio": 1.6822033898305084,
      "no_speech_prob": 0.07500238716602325,
      "confidence": 0.9249976128339767
    },
    {
      "id": 89,
      "start": 443.40000000000003,
      "end": 447.20000000000005,
      "text": "in order to do this, I'm gonna have to add formatting to our placeholders, and",
      "tokens": [
        51554,
        294,
        1668,
        281,
        360,
        341,
        11,
        286,
        478,
        799,
        362,
        281,
        909,
        39366,
        281,
        527,
        1081,
        12916,
        11,
        293,
        51744
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11343306415485886,
      "compression_ratio": 1.6822033898305084,
      "no_speech_prob": 0.07500238716602325,
      "confidence": 0.9249976128339767
    },
    {
      "id": 90,
      "start": 447.24,
      "end": 452.92,
      "text": "we can do that by adding a colon here. So now we can add whatever formatting that",
      "tokens": [
        50366,
        321,
        393,
        360,
        300,
        538,
        5127,
        257,
        8255,
        510,
        13,
        407,
        586,
        321,
        393,
        909,
        2035,
        39366,
        300,
        50650
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0983110490392466,
      "compression_ratio": 1.7260869565217392,
      "no_speech_prob": 0.11399795860052109,
      "confidence": 0.8860020413994789
    },
    {
      "id": 91,
      "start": 452.92,
      "end": 458.32,
      "text": "we'd like. So I want to zero pad my digits to 2. So we can do that just by",
      "tokens": [
        50650,
        321,
        1116,
        411,
        13,
        407,
        286,
        528,
        281,
        4018,
        6887,
        452,
        27011,
        281,
        568,
        13,
        407,
        321,
        393,
        360,
        300,
        445,
        538,
        50920
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0983110490392466,
      "compression_ratio": 1.7260869565217392,
      "no_speech_prob": 0.11399795860052109,
      "confidence": 0.8860020413994789
    },
    {
      "id": 92,
      "start": 458.32,
      "end": 464.24,
      "text": "doing a 0 2 here, and if I save that and run it, now you can see instead of 1 2",
      "tokens": [
        50920,
        884,
        257,
        1958,
        568,
        510,
        11,
        293,
        498,
        286,
        3155,
        300,
        293,
        1190,
        309,
        11,
        586,
        291,
        393,
        536,
        2602,
        295,
        502,
        568,
        51216
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0983110490392466,
      "compression_ratio": 1.7260869565217392,
      "no_speech_prob": 0.11399795860052109,
      "confidence": 0.8860020413994789
    },
    {
      "id": 93,
      "start": 464.24,
      "end": 469.2,
      "text": "3, it's 0 1 0 2, and then when I get down here to 10, it doesn't pad it because",
      "tokens": [
        51216,
        805,
        11,
        309,
        311,
        1958,
        502,
        1958,
        568,
        11,
        293,
        550,
        562,
        286,
        483,
        760,
        510,
        281,
        1266,
        11,
        309,
        1177,
        380,
        6887,
        309,
        570,
        51464
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0983110490392466,
      "compression_ratio": 1.7260869565217392,
      "no_speech_prob": 0.11399795860052109,
      "confidence": 0.8860020413994789
    },
    {
      "id": 94,
      "start": 469.2,
      "end": 474.32,
      "text": "it's already two digits. Now if I was to make this a 3 and save that and run it,",
      "tokens": [
        51464,
        309,
        311,
        1217,
        732,
        27011,
        13,
        823,
        498,
        286,
        390,
        281,
        652,
        341,
        257,
        805,
        293,
        3155,
        300,
        293,
        1190,
        309,
        11,
        51720
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0983110490392466,
      "compression_ratio": 1.7260869565217392,
      "no_speech_prob": 0.11399795860052109,
      "confidence": 0.8860020413994789
    },
    {
      "id": 95,
      "start": 474.32,
      "end": 478.96,
      "text": "now you can see that it zero pads all the way up to three digits. Okay, so now",
      "tokens": [
        50364,
        586,
        291,
        393,
        536,
        300,
        309,
        4018,
        19179,
        439,
        264,
        636,
        493,
        281,
        1045,
        27011,
        13,
        1033,
        11,
        370,
        586,
        50596
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08935761001874816,
      "compression_ratio": 1.8317757009345794,
      "no_speech_prob": 0.09502638131380081,
      "confidence": 0.9049736186861992
    },
    {
      "id": 96,
      "start": 478.96,
      "end": 485.59999999999997,
      "text": "let's look at using format to do decimal places. So here I have pi written out to",
      "tokens": [
        50596,
        718,
        311,
        574,
        412,
        1228,
        7877,
        281,
        360,
        26601,
        3190,
        13,
        407,
        510,
        286,
        362,
        3895,
        3720,
        484,
        281,
        50928
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08935761001874816,
      "compression_ratio": 1.8317757009345794,
      "no_speech_prob": 0.09502638131380081,
      "confidence": 0.9049736186861992
    },
    {
      "id": 97,
      "start": 485.59999999999997,
      "end": 490.0,
      "text": "eight decimal places. So let's say that I want to print that out, but I only want",
      "tokens": [
        50928,
        3180,
        26601,
        3190,
        13,
        407,
        718,
        311,
        584,
        300,
        286,
        528,
        281,
        4482,
        300,
        484,
        11,
        457,
        286,
        787,
        528,
        51148
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08935761001874816,
      "compression_ratio": 1.8317757009345794,
      "no_speech_prob": 0.09502638131380081,
      "confidence": 0.9049736186861992
    },
    {
      "id": 98,
      "start": 490.0,
      "end": 495.96,
      "text": "to print out to two decimal places. So let me add my colon so that it knows",
      "tokens": [
        51148,
        281,
        4482,
        484,
        281,
        732,
        26601,
        3190,
        13,
        407,
        718,
        385,
        909,
        452,
        8255,
        370,
        300,
        309,
        3255,
        51446
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08935761001874816,
      "compression_ratio": 1.8317757009345794,
      "no_speech_prob": 0.09502638131380081,
      "confidence": 0.9049736186861992
    },
    {
      "id": 99,
      "start": 495.96,
      "end": 499.96,
      "text": "that we want to do some formatting, and now I can specify that I want two",
      "tokens": [
        51446,
        300,
        321,
        528,
        281,
        360,
        512,
        39366,
        11,
        293,
        586,
        286,
        393,
        16500,
        300,
        286,
        528,
        732,
        51646
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08935761001874816,
      "compression_ratio": 1.8317757009345794,
      "no_speech_prob": 0.09502638131380081,
      "confidence": 0.9049736186861992
    },
    {
      "id": 100,
      "start": 499.96,
      "end": 507.12,
      "text": "decimal places just by doing a 0.2 f. So now if I save that and run it, you can",
      "tokens": [
        50364,
        26601,
        3190,
        445,
        538,
        884,
        257,
        1958,
        13,
        17,
        283,
        13,
        407,
        586,
        498,
        286,
        3155,
        300,
        293,
        1190,
        309,
        11,
        291,
        393,
        50722
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1457843780517578,
      "compression_ratio": 1.6382978723404256,
      "no_speech_prob": 0.24572116136550903,
      "confidence": 0.754278838634491
    },
    {
      "id": 101,
      "start": 507.12,
      "end": 513.3199999999999,
      "text": "see that it says pi is equal to 3.14, and again if I change that 2 to a 3 and",
      "tokens": [
        50722,
        536,
        300,
        309,
        1619,
        3895,
        307,
        2681,
        281,
        805,
        13,
        7271,
        11,
        293,
        797,
        498,
        286,
        1319,
        300,
        568,
        281,
        257,
        805,
        293,
        51032
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1457843780517578,
      "compression_ratio": 1.6382978723404256,
      "no_speech_prob": 0.24572116136550903,
      "confidence": 0.754278838634491
    },
    {
      "id": 102,
      "start": 513.3199999999999,
      "end": 517.24,
      "text": "save it and run it, and it does up to three decimal places. Okay, so let's look",
      "tokens": [
        51032,
        3155,
        309,
        293,
        1190,
        309,
        11,
        293,
        309,
        775,
        493,
        281,
        1045,
        26601,
        3190,
        13,
        1033,
        11,
        370,
        718,
        311,
        574,
        51228
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1457843780517578,
      "compression_ratio": 1.6382978723404256,
      "no_speech_prob": 0.24572116136550903,
      "confidence": 0.754278838634491
    },
    {
      "id": 103,
      "start": 517.24,
      "end": 523.1999999999999,
      "text": "at an example for say that we wanted to print out a large number and we wanted",
      "tokens": [
        51228,
        412,
        364,
        1365,
        337,
        584,
        300,
        321,
        1415,
        281,
        4482,
        484,
        257,
        2416,
        1230,
        293,
        321,
        1415,
        51526
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1457843780517578,
      "compression_ratio": 1.6382978723404256,
      "no_speech_prob": 0.24572116136550903,
      "confidence": 0.754278838634491
    },
    {
      "id": 104,
      "start": 523.1999999999999,
      "end": 529.76,
      "text": "some comma separators so that it was more easily readable. So we can",
      "tokens": [
        51526,
        512,
        22117,
        3128,
        3391,
        370,
        300,
        309,
        390,
        544,
        3612,
        49857,
        13,
        407,
        321,
        393,
        51854
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1457843780517578,
      "compression_ratio": 1.6382978723404256,
      "no_speech_prob": 0.24572116136550903,
      "confidence": 0.754278838634491
    },
    {
      "id": 105,
      "start": 529.76,
      "end": 535.76,
      "text": "easily do that just by adding a comma after our colon. So I'll do a colon here",
      "tokens": [
        50364,
        3612,
        360,
        300,
        445,
        538,
        5127,
        257,
        22117,
        934,
        527,
        8255,
        13,
        407,
        286,
        603,
        360,
        257,
        8255,
        510,
        50664
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09992972623954699,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.011849851347506046,
      "confidence": 0.988150148652494
    },
    {
      "id": 106,
      "start": 535.76,
      "end": 540.88,
      "text": "to specify that we want formatting, and I'll just put in a comma and if I save",
      "tokens": [
        50664,
        281,
        16500,
        300,
        321,
        528,
        39366,
        11,
        293,
        286,
        603,
        445,
        829,
        294,
        257,
        22117,
        293,
        498,
        286,
        3155,
        50920
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09992972623954699,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.011849851347506046,
      "confidence": 0.988150148652494
    },
    {
      "id": 107,
      "start": 540.88,
      "end": 545.12,
      "text": "that and run it, you can see that we have our comma separators here on these large",
      "tokens": [
        50920,
        300,
        293,
        1190,
        309,
        11,
        291,
        393,
        536,
        300,
        321,
        362,
        527,
        22117,
        3128,
        3391,
        510,
        322,
        613,
        2416,
        51132
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09992972623954699,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.011849851347506046,
      "confidence": 0.988150148652494
    },
    {
      "id": 108,
      "start": 545.12,
      "end": 549.88,
      "text": "values. And you can chain this formatting together too. So let's say that we wanted",
      "tokens": [
        51132,
        4190,
        13,
        400,
        291,
        393,
        5021,
        341,
        39366,
        1214,
        886,
        13,
        407,
        718,
        311,
        584,
        300,
        321,
        1415,
        51370
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09992972623954699,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.011849851347506046,
      "confidence": 0.988150148652494
    },
    {
      "id": 109,
      "start": 549.88,
      "end": 555.12,
      "text": "the comma separated values and we wanted to display up to two decimal places. So",
      "tokens": [
        51370,
        264,
        22117,
        12005,
        4190,
        293,
        321,
        1415,
        281,
        4674,
        493,
        281,
        732,
        26601,
        3190,
        13,
        407,
        51632
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09992972623954699,
      "compression_ratio": 1.8,
      "no_speech_prob": 0.011849851347506046,
      "confidence": 0.988150148652494
    },
    {
      "id": 110,
      "start": 555.52,
      "end": 561.84,
      "text": "right after the comma, I could do my 0.2 f that we did from before, and if I run",
      "tokens": [
        50384,
        558,
        934,
        264,
        22117,
        11,
        286,
        727,
        360,
        452,
        1958,
        13,
        17,
        283,
        300,
        321,
        630,
        490,
        949,
        11,
        293,
        498,
        286,
        1190,
        50700
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13459471359993647,
      "compression_ratio": 1.617283950617284,
      "no_speech_prob": 0.05134519562125206,
      "confidence": 0.9486548043787479
    },
    {
      "id": 111,
      "start": 561.84,
      "end": 566.48,
      "text": "that, you can see that we have our comma separated values and it added two",
      "tokens": [
        50700,
        300,
        11,
        291,
        393,
        536,
        300,
        321,
        362,
        527,
        22117,
        12005,
        4190,
        293,
        309,
        3869,
        732,
        50932
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13459471359993647,
      "compression_ratio": 1.617283950617284,
      "no_speech_prob": 0.05134519562125206,
      "confidence": 0.9486548043787479
    },
    {
      "id": 112,
      "start": 566.48,
      "end": 571.44,
      "text": "decimal places on to the end. Okay, so let's take a look at an example for how",
      "tokens": [
        50932,
        26601,
        3190,
        322,
        281,
        264,
        917,
        13,
        1033,
        11,
        370,
        718,
        311,
        747,
        257,
        574,
        412,
        364,
        1365,
        337,
        577,
        51180
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13459471359993647,
      "compression_ratio": 1.617283950617284,
      "no_speech_prob": 0.05134519562125206,
      "confidence": 0.9486548043787479
    },
    {
      "id": 113,
      "start": 571.44,
      "end": 576.96,
      "text": "we can format and print out dates. So I think this is extremely useful if you",
      "tokens": [
        51180,
        321,
        393,
        7877,
        293,
        4482,
        484,
        11691,
        13,
        407,
        286,
        519,
        341,
        307,
        4664,
        4420,
        498,
        291,
        51456
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13459471359993647,
      "compression_ratio": 1.617283950617284,
      "no_speech_prob": 0.05134519562125206,
      "confidence": 0.9486548043787479
    },
    {
      "id": 114,
      "start": 576.96,
      "end": 581.88,
      "text": "need to print out date time information. It allows us to display the information",
      "tokens": [
        51456,
        643,
        281,
        4482,
        484,
        4002,
        565,
        1589,
        13,
        467,
        4045,
        505,
        281,
        4674,
        264,
        1589,
        51702
      ],
      "temperature": 0.0,
      "avg_logprob": -0.13459471359993647,
      "compression_ratio": 1.617283950617284,
      "no_speech_prob": 0.05134519562125206,
      "confidence": 0.9486548043787479
    },
    {
      "id": 115,
      "start": 581.88,
      "end": 584.96,
      "text": "in just about any way that we want. So it's especially useful if you're",
      "tokens": [
        50364,
        294,
        445,
        466,
        604,
        636,
        300,
        321,
        528,
        13,
        407,
        309,
        311,
        2318,
        4420,
        498,
        291,
        434,
        50518
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08966307773768345,
      "compression_ratio": 1.6864406779661016,
      "no_speech_prob": 0.02680523507297039,
      "confidence": 0.9731947649270296
    },
    {
      "id": 116,
      "start": 584.96,
      "end": 590.56,
      "text": "printing out dates for logs or creating reports or anything like that. So I just",
      "tokens": [
        50518,
        14699,
        484,
        11691,
        337,
        20820,
        420,
        4084,
        7122,
        420,
        1340,
        411,
        300,
        13,
        407,
        286,
        445,
        50798
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08966307773768345,
      "compression_ratio": 1.6864406779661016,
      "no_speech_prob": 0.02680523507297039,
      "confidence": 0.9731947649270296
    },
    {
      "id": 117,
      "start": 590.56,
      "end": 598.04,
      "text": "created a date here for September 24th of 2016. So if I just print out that date",
      "tokens": [
        50798,
        2942,
        257,
        4002,
        510,
        337,
        7216,
        4022,
        392,
        295,
        6549,
        13,
        407,
        498,
        286,
        445,
        4482,
        484,
        300,
        4002,
        51172
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08966307773768345,
      "compression_ratio": 1.6864406779661016,
      "no_speech_prob": 0.02680523507297039,
      "confidence": 0.9731947649270296
    },
    {
      "id": 118,
      "start": 598.04,
      "end": 602.0,
      "text": "variable, then you can see that it's not too bad. It's pretty easy to tell what",
      "tokens": [
        51172,
        7006,
        11,
        550,
        291,
        393,
        536,
        300,
        309,
        311,
        406,
        886,
        1578,
        13,
        467,
        311,
        1238,
        1858,
        281,
        980,
        437,
        51370
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08966307773768345,
      "compression_ratio": 1.6864406779661016,
      "no_speech_prob": 0.02680523507297039,
      "confidence": 0.9731947649270296
    },
    {
      "id": 119,
      "start": 602.0,
      "end": 606.96,
      "text": "it's doing. It's printing out the year, the month, the day, then the hours, minutes,",
      "tokens": [
        51370,
        309,
        311,
        884,
        13,
        467,
        311,
        14699,
        484,
        264,
        1064,
        11,
        264,
        1618,
        11,
        264,
        786,
        11,
        550,
        264,
        2496,
        11,
        2077,
        11,
        51618
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08966307773768345,
      "compression_ratio": 1.6864406779661016,
      "no_speech_prob": 0.02680523507297039,
      "confidence": 0.9731947649270296
    },
    {
      "id": 120,
      "start": 607.0400000000001,
      "end": 612.5600000000001,
      "text": "and seconds. But let's say that we wanted it in this format here. We wanted the",
      "tokens": [
        50368,
        293,
        3949,
        13,
        583,
        718,
        311,
        584,
        300,
        321,
        1415,
        309,
        294,
        341,
        7877,
        510,
        13,
        492,
        1415,
        264,
        50644
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08657862761310328,
      "compression_ratio": 1.775229357798165,
      "no_speech_prob": 0.10079546272754669,
      "confidence": 0.8992045372724533
    },
    {
      "id": 121,
      "start": 612.5600000000001,
      "end": 617.96,
      "text": "month, the day, and then a comma and the year. So let's take out this print",
      "tokens": [
        50644,
        1618,
        11,
        264,
        786,
        11,
        293,
        550,
        257,
        22117,
        293,
        264,
        1064,
        13,
        407,
        718,
        311,
        747,
        484,
        341,
        4482,
        50914
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08657862761310328,
      "compression_ratio": 1.775229357798165,
      "no_speech_prob": 0.10079546272754669,
      "confidence": 0.8992045372724533
    },
    {
      "id": 122,
      "start": 617.96,
      "end": 623.24,
      "text": "statement here and let's try to do that. Okay, so first of all, we're going to",
      "tokens": [
        50914,
        5629,
        510,
        293,
        718,
        311,
        853,
        281,
        360,
        300,
        13,
        1033,
        11,
        370,
        700,
        295,
        439,
        11,
        321,
        434,
        516,
        281,
        51178
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08657862761310328,
      "compression_ratio": 1.775229357798165,
      "no_speech_prob": 0.10079546272754669,
      "confidence": 0.8992045372724533
    },
    {
      "id": 123,
      "start": 623.24,
      "end": 628.1600000000001,
      "text": "want to add our colon here to specify that we want to do some formatting to",
      "tokens": [
        51178,
        528,
        281,
        909,
        527,
        8255,
        510,
        281,
        16500,
        300,
        321,
        528,
        281,
        360,
        512,
        39366,
        281,
        51424
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08657862761310328,
      "compression_ratio": 1.775229357798165,
      "no_speech_prob": 0.10079546272754669,
      "confidence": 0.8992045372724533
    },
    {
      "id": 124,
      "start": 628.1600000000001,
      "end": 634.08,
      "text": "this. And now I'm going to go to the website and get the values that we want",
      "tokens": [
        51424,
        341,
        13,
        400,
        586,
        286,
        478,
        516,
        281,
        352,
        281,
        264,
        3144,
        293,
        483,
        264,
        4190,
        300,
        321,
        528,
        51720
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08657862761310328,
      "compression_ratio": 1.775229357798165,
      "no_speech_prob": 0.10079546272754669,
      "confidence": 0.8992045372724533
    },
    {
      "id": 125,
      "start": 634.08,
      "end": 639.5600000000001,
      "text": "to use here. So we want the full month and we can see here that the full month",
      "tokens": [
        50364,
        281,
        764,
        510,
        13,
        407,
        321,
        528,
        264,
        1577,
        1618,
        293,
        321,
        393,
        536,
        510,
        300,
        264,
        1577,
        1618,
        50638
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11217971110907127,
      "compression_ratio": 1.9549180327868851,
      "no_speech_prob": 0.5333150029182434,
      "confidence": 0.4666849970817566
    },
    {
      "id": 126,
      "start": 639.5600000000001,
      "end": 644.64,
      "text": "is percent sign B. And we also want the day of the month and we can see that the",
      "tokens": [
        50638,
        307,
        3043,
        1465,
        363,
        13,
        400,
        321,
        611,
        528,
        264,
        786,
        295,
        264,
        1618,
        293,
        321,
        393,
        536,
        300,
        264,
        50892
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11217971110907127,
      "compression_ratio": 1.9549180327868851,
      "no_speech_prob": 0.5333150029182434,
      "confidence": 0.4666849970817566
    },
    {
      "id": 127,
      "start": 644.64,
      "end": 649.9200000000001,
      "text": "day of the month here is percent sign D. And we also want the year here. And",
      "tokens": [
        50892,
        786,
        295,
        264,
        1618,
        510,
        307,
        3043,
        1465,
        413,
        13,
        400,
        321,
        611,
        528,
        264,
        1064,
        510,
        13,
        400,
        51156
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11217971110907127,
      "compression_ratio": 1.9549180327868851,
      "no_speech_prob": 0.5333150029182434,
      "confidence": 0.4666849970817566
    },
    {
      "id": 128,
      "start": 649.9200000000001,
      "end": 653.5600000000001,
      "text": "there's a couple of options for the year, but we're going to go ahead and just do",
      "tokens": [
        51156,
        456,
        311,
        257,
        1916,
        295,
        3956,
        337,
        264,
        1064,
        11,
        457,
        321,
        434,
        516,
        281,
        352,
        2286,
        293,
        445,
        360,
        51338
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11217971110907127,
      "compression_ratio": 1.9549180327868851,
      "no_speech_prob": 0.5333150029182434,
      "confidence": 0.4666849970817566
    },
    {
      "id": 129,
      "start": 653.5600000000001,
      "end": 658.2,
      "text": "the four digit one here with the capital Y. So like I said, it's completely fine if",
      "tokens": [
        51338,
        264,
        1451,
        14293,
        472,
        510,
        365,
        264,
        4238,
        398,
        13,
        407,
        411,
        286,
        848,
        11,
        309,
        311,
        2584,
        2489,
        498,
        51570
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11217971110907127,
      "compression_ratio": 1.9549180327868851,
      "no_speech_prob": 0.5333150029182434,
      "confidence": 0.4666849970817566
    },
    {
      "id": 130,
      "start": 658.2,
      "end": 661.12,
      "text": "you don't know these formatting options. Just whenever you're trying to do",
      "tokens": [
        51570,
        291,
        500,
        380,
        458,
        613,
        39366,
        3956,
        13,
        1449,
        5699,
        291,
        434,
        1382,
        281,
        360,
        51716
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11217971110907127,
      "compression_ratio": 1.9549180327868851,
      "no_speech_prob": 0.5333150029182434,
      "confidence": 0.4666849970817566
    },
    {
      "id": 131,
      "start": 661.16,
      "end": 664.96,
      "text": "something, you can look it up in the documentation and know how to get it",
      "tokens": [
        50366,
        746,
        11,
        291,
        393,
        574,
        309,
        493,
        294,
        264,
        14333,
        293,
        458,
        577,
        281,
        483,
        309,
        50556
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09331677036900674,
      "compression_ratio": 1.7916666666666667,
      "no_speech_prob": 0.3111652135848999,
      "confidence": 0.6888347864151001
    },
    {
      "id": 132,
      "start": 664.96,
      "end": 670.88,
      "text": "done. So let's go ahead and pass these in. So the name of the month was a percent",
      "tokens": [
        50556,
        1096,
        13,
        407,
        718,
        311,
        352,
        2286,
        293,
        1320,
        613,
        294,
        13,
        407,
        264,
        1315,
        295,
        264,
        1618,
        390,
        257,
        3043,
        50852
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09331677036900674,
      "compression_ratio": 1.7916666666666667,
      "no_speech_prob": 0.3111652135848999,
      "confidence": 0.6888347864151001
    },
    {
      "id": 133,
      "start": 670.88,
      "end": 676.44,
      "text": "sign B. And then I'm going to do the day as percent sign D. And then I want the",
      "tokens": [
        50852,
        1465,
        363,
        13,
        400,
        550,
        286,
        478,
        516,
        281,
        360,
        264,
        786,
        382,
        3043,
        1465,
        413,
        13,
        400,
        550,
        286,
        528,
        264,
        51130
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09331677036900674,
      "compression_ratio": 1.7916666666666667,
      "no_speech_prob": 0.3111652135848999,
      "confidence": 0.6888347864151001
    },
    {
      "id": 134,
      "start": 676.44,
      "end": 681.24,
      "text": "comma and then the percent sign capital Y for the year. So let me go ahead and",
      "tokens": [
        51130,
        22117,
        293,
        550,
        264,
        3043,
        1465,
        4238,
        398,
        337,
        264,
        1064,
        13,
        407,
        718,
        385,
        352,
        2286,
        293,
        51370
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09331677036900674,
      "compression_ratio": 1.7916666666666667,
      "no_speech_prob": 0.3111652135848999,
      "confidence": 0.6888347864151001
    },
    {
      "id": 135,
      "start": 681.24,
      "end": 685.2,
      "text": "print that out. Okay, so that worked the way that we wanted it to. So you can see",
      "tokens": [
        51370,
        4482,
        300,
        484,
        13,
        1033,
        11,
        370,
        300,
        2732,
        264,
        636,
        300,
        321,
        1415,
        309,
        281,
        13,
        407,
        291,
        393,
        536,
        51568
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09331677036900674,
      "compression_ratio": 1.7916666666666667,
      "no_speech_prob": 0.3111652135848999,
      "confidence": 0.6888347864151001
    },
    {
      "id": 136,
      "start": 685.2,
      "end": 689.44,
      "text": "how formatting your strings like this could be extremely useful for printing",
      "tokens": [
        51568,
        577,
        39366,
        428,
        13985,
        411,
        341,
        727,
        312,
        4664,
        4420,
        337,
        14699,
        51780
      ],
      "temperature": 0.0,
      "avg_logprob": -0.09331677036900674,
      "compression_ratio": 1.7916666666666667,
      "no_speech_prob": 0.3111652135848999,
      "confidence": 0.6888347864151001
    },
    {
      "id": 137,
      "start": 689.44,
      "end": 695.2,
      "text": "out dates. So now let's do a slightly more complicated example and let's try",
      "tokens": [
        50364,
        484,
        11691,
        13,
        407,
        586,
        718,
        311,
        360,
        257,
        4748,
        544,
        6179,
        1365,
        293,
        718,
        311,
        853,
        50652
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07164831328810307,
      "compression_ratio": 1.8826291079812207,
      "no_speech_prob": 0.15863655507564545,
      "confidence": 0.8413634449243546
    },
    {
      "id": 138,
      "start": 695.2,
      "end": 699.44,
      "text": "to do it in this format here. Let's say that we want the name of the month, the",
      "tokens": [
        50652,
        281,
        360,
        309,
        294,
        341,
        7877,
        510,
        13,
        961,
        311,
        584,
        300,
        321,
        528,
        264,
        1315,
        295,
        264,
        1618,
        11,
        264,
        50864
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07164831328810307,
      "compression_ratio": 1.8826291079812207,
      "no_speech_prob": 0.15863655507564545,
      "confidence": 0.8413634449243546
    },
    {
      "id": 139,
      "start": 699.44,
      "end": 704.8000000000001,
      "text": "day, the comma, and the year. Then we want to say that it fell on A and then put in",
      "tokens": [
        50864,
        786,
        11,
        264,
        22117,
        11,
        293,
        264,
        1064,
        13,
        1396,
        321,
        528,
        281,
        584,
        300,
        309,
        5696,
        322,
        316,
        293,
        550,
        829,
        294,
        51132
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07164831328810307,
      "compression_ratio": 1.8826291079812207,
      "no_speech_prob": 0.15863655507564545,
      "confidence": 0.8413634449243546
    },
    {
      "id": 140,
      "start": 704.8000000000001,
      "end": 711.2,
      "text": "the day of the week and that it was the day of the year. So I want to put the day",
      "tokens": [
        51132,
        264,
        786,
        295,
        264,
        1243,
        293,
        300,
        309,
        390,
        264,
        786,
        295,
        264,
        1064,
        13,
        407,
        286,
        528,
        281,
        829,
        264,
        786,
        51452
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07164831328810307,
      "compression_ratio": 1.8826291079812207,
      "no_speech_prob": 0.15863655507564545,
      "confidence": 0.8413634449243546
    },
    {
      "id": 141,
      "start": 711.2,
      "end": 715.4000000000001,
      "text": "of the year here. So we want to format our string to where it looks like this.",
      "tokens": [
        51452,
        295,
        264,
        1064,
        510,
        13,
        407,
        321,
        528,
        281,
        7877,
        527,
        6798,
        281,
        689,
        309,
        1542,
        411,
        341,
        13,
        51662
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07164831328810307,
      "compression_ratio": 1.8826291079812207,
      "no_speech_prob": 0.15863655507564545,
      "confidence": 0.8413634449243546
    },
    {
      "id": 142,
      "start": 715.76,
      "end": 720.24,
      "text": "So let me uncomment out what we have here so far. Now we already know how to do",
      "tokens": [
        50382,
        407,
        718,
        385,
        8585,
        518,
        484,
        437,
        321,
        362,
        510,
        370,
        1400,
        13,
        823,
        321,
        1217,
        458,
        577,
        281,
        360,
        50606
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11577365228107997,
      "compression_ratio": 1.7876106194690264,
      "no_speech_prob": 0.60118567943573,
      "confidence": 0.39881432056427
    },
    {
      "id": 143,
      "start": 720.24,
      "end": 725.4,
      "text": "this first part here. So that was just a colon and we want our percent sign B,",
      "tokens": [
        50606,
        341,
        700,
        644,
        510,
        13,
        407,
        300,
        390,
        445,
        257,
        8255,
        293,
        321,
        528,
        527,
        3043,
        1465,
        363,
        11,
        50864
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11577365228107997,
      "compression_ratio": 1.7876106194690264,
      "no_speech_prob": 0.60118567943573,
      "confidence": 0.39881432056427
    },
    {
      "id": 144,
      "start": 725.4,
      "end": 731.4399999999999,
      "text": "percent sign D for the day, comma, percent sign capital Y. So now let's also go back",
      "tokens": [
        50864,
        3043,
        1465,
        413,
        337,
        264,
        786,
        11,
        22117,
        11,
        3043,
        1465,
        4238,
        398,
        13,
        407,
        586,
        718,
        311,
        611,
        352,
        646,
        51166
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11577365228107997,
      "compression_ratio": 1.7876106194690264,
      "no_speech_prob": 0.60118567943573,
      "confidence": 0.39881432056427
    },
    {
      "id": 145,
      "start": 731.4399999999999,
      "end": 736.64,
      "text": "to the documentation and find the day of the week and the day of the year. So I'm",
      "tokens": [
        51166,
        281,
        264,
        14333,
        293,
        915,
        264,
        786,
        295,
        264,
        1243,
        293,
        264,
        786,
        295,
        264,
        1064,
        13,
        407,
        286,
        478,
        51426
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11577365228107997,
      "compression_ratio": 1.7876106194690264,
      "no_speech_prob": 0.60118567943573,
      "confidence": 0.39881432056427
    },
    {
      "id": 146,
      "start": 736.64,
      "end": 745.28,
      "text": "going to go and grab that. So we can see here that the day of the week is over",
      "tokens": [
        51426,
        516,
        281,
        352,
        293,
        4444,
        300,
        13,
        407,
        321,
        393,
        536,
        510,
        300,
        264,
        786,
        295,
        264,
        1243,
        307,
        670,
        51858
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11577365228107997,
      "compression_ratio": 1.7876106194690264,
      "no_speech_prob": 0.60118567943573,
      "confidence": 0.39881432056427
    },
    {
      "id": 147,
      "start": 745.28,
      "end": 753.4,
      "text": "here at capital A and the day of the year is this percent sign J. So if I go",
      "tokens": [
        50364,
        510,
        412,
        4238,
        316,
        293,
        264,
        786,
        295,
        264,
        1064,
        307,
        341,
        3043,
        1465,
        508,
        13,
        407,
        498,
        286,
        352,
        50770
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0791796366373698,
      "compression_ratio": 1.7727272727272727,
      "no_speech_prob": 0.006604662165045738,
      "confidence": 0.9933953378349543
    },
    {
      "id": 148,
      "start": 753.4,
      "end": 760.0,
      "text": "back here and do our colon and a percent sign with a capital A and then over here",
      "tokens": [
        50770,
        646,
        510,
        293,
        360,
        527,
        8255,
        293,
        257,
        3043,
        1465,
        365,
        257,
        4238,
        316,
        293,
        550,
        670,
        510,
        51100
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0791796366373698,
      "compression_ratio": 1.7727272727272727,
      "no_speech_prob": 0.006604662165045738,
      "confidence": 0.9933953378349543
    },
    {
      "id": 149,
      "start": 760.0,
      "end": 764.64,
      "text": "I'm going to do the colon with percent sign lowercase J. Now if I just try to",
      "tokens": [
        51100,
        286,
        478,
        516,
        281,
        360,
        264,
        8255,
        365,
        3043,
        1465,
        3126,
        9765,
        508,
        13,
        823,
        498,
        286,
        445,
        853,
        281,
        51332
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0791796366373698,
      "compression_ratio": 1.7727272727272727,
      "no_speech_prob": 0.006604662165045738,
      "confidence": 0.9933953378349543
    },
    {
      "id": 150,
      "start": 764.64,
      "end": 769.0,
      "text": "run this as is then you can see that we get an error. Now the reason that we got",
      "tokens": [
        51332,
        1190,
        341,
        382,
        307,
        550,
        291,
        393,
        536,
        300,
        321,
        483,
        364,
        6713,
        13,
        823,
        264,
        1778,
        300,
        321,
        658,
        51550
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0791796366373698,
      "compression_ratio": 1.7727272727272727,
      "no_speech_prob": 0.006604662165045738,
      "confidence": 0.9933953378349543
    },
    {
      "id": 151,
      "start": 769.0,
      "end": 773.4399999999999,
      "text": "an error is because we have three placeholders but we're only passing in",
      "tokens": [
        51550,
        364,
        6713,
        307,
        570,
        321,
        362,
        1045,
        1081,
        12916,
        457,
        321,
        434,
        787,
        8437,
        294,
        51772
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0791796366373698,
      "compression_ratio": 1.7727272727272727,
      "no_speech_prob": 0.006604662165045738,
      "confidence": 0.9933953378349543
    },
    {
      "id": 152,
      "start": 773.44,
      "end": 780.2,
      "text": "one value to our format. So if you remember I can just do the index here so",
      "tokens": [
        50364,
        472,
        2158,
        281,
        527,
        7877,
        13,
        407,
        498,
        291,
        1604,
        286,
        393,
        445,
        360,
        264,
        8186,
        510,
        370,
        50702
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10181715994170218,
      "compression_ratio": 1.855072463768116,
      "no_speech_prob": 0.43400320410728455,
      "confidence": 0.5659967958927155
    },
    {
      "id": 153,
      "start": 780.2,
      "end": 784.44,
      "text": "I can say that we want this to be the zero index and the first value that we",
      "tokens": [
        50702,
        286,
        393,
        584,
        300,
        321,
        528,
        341,
        281,
        312,
        264,
        4018,
        8186,
        293,
        264,
        700,
        2158,
        300,
        321,
        50914
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10181715994170218,
      "compression_ratio": 1.855072463768116,
      "no_speech_prob": 0.43400320410728455,
      "confidence": 0.5659967958927155
    },
    {
      "id": 154,
      "start": 784.44,
      "end": 789.48,
      "text": "pass in the format. So now even though we have three placeholders it will replace",
      "tokens": [
        50914,
        1320,
        294,
        264,
        7877,
        13,
        407,
        586,
        754,
        1673,
        321,
        362,
        1045,
        1081,
        12916,
        309,
        486,
        7406,
        51166
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10181715994170218,
      "compression_ratio": 1.855072463768116,
      "no_speech_prob": 0.43400320410728455,
      "confidence": 0.5659967958927155
    },
    {
      "id": 155,
      "start": 789.48,
      "end": 793.6800000000001,
      "text": "all of those placeholders with our single value that we're passing in to",
      "tokens": [
        51166,
        439,
        295,
        729,
        1081,
        12916,
        365,
        527,
        2167,
        2158,
        300,
        321,
        434,
        8437,
        294,
        281,
        51376
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10181715994170218,
      "compression_ratio": 1.855072463768116,
      "no_speech_prob": 0.43400320410728455,
      "confidence": 0.5659967958927155
    },
    {
      "id": 156,
      "start": 793.6800000000001,
      "end": 798.24,
      "text": "format. So now if I run that you can see that it gives us the output that we",
      "tokens": [
        51376,
        7877,
        13,
        407,
        586,
        498,
        286,
        1190,
        300,
        291,
        393,
        536,
        300,
        309,
        2709,
        505,
        264,
        5598,
        300,
        321,
        51604
      ],
      "temperature": 0.0,
      "avg_logprob": -0.10181715994170218,
      "compression_ratio": 1.855072463768116,
      "no_speech_prob": 0.43400320410728455,
      "confidence": 0.5659967958927155
    },
    {
      "id": 157,
      "start": 798.24,
      "end": 803.08,
      "text": "wanted. So now you can see here that it says September 24th 2016 fell on a",
      "tokens": [
        50364,
        1415,
        13,
        407,
        586,
        291,
        393,
        536,
        510,
        300,
        309,
        1619,
        7216,
        4022,
        392,
        6549,
        5696,
        322,
        257,
        50606
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12526189422607423,
      "compression_ratio": 1.6456953642384107,
      "no_speech_prob": 0.3333015441894531,
      "confidence": 0.6666984558105469
    },
    {
      "id": 158,
      "start": 803.08,
      "end": 809.08,
      "text": "Saturday and was the 268th day of the year. So I think that's going to do it",
      "tokens": [
        50606,
        8803,
        293,
        390,
        264,
        7551,
        23,
        392,
        786,
        295,
        264,
        1064,
        13,
        407,
        286,
        519,
        300,
        311,
        516,
        281,
        360,
        309,
        50906
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12526189422607423,
      "compression_ratio": 1.6456953642384107,
      "no_speech_prob": 0.3333015441894531,
      "confidence": 0.6666984558105469
    },
    {
      "id": 159,
      "start": 809.08,
      "end": 812.88,
      "text": "for this video. I hope it helped in knowing what all is available when it",
      "tokens": [
        50906,
        337,
        341,
        960,
        13,
        286,
        1454,
        309,
        4254,
        294,
        5276,
        437,
        439,
        307,
        2435,
        562,
        309,
        51096
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12526189422607423,
      "compression_ratio": 1.6456953642384107,
      "no_speech_prob": 0.3333015441894531,
      "confidence": 0.6666984558105469
    },
    {
      "id": 160,
      "start": 812.88,
      "end": 816.96,
      "text": "comes to string formatting and also maybe gave you some ideas for how you",
      "tokens": [
        51096,
        1487,
        281,
        6798,
        39366,
        293,
        611,
        1310,
        2729,
        291,
        512,
        3487,
        337,
        577,
        291,
        51300
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12526189422607423,
      "compression_ratio": 1.6456953642384107,
      "no_speech_prob": 0.3333015441894531,
      "confidence": 0.6666984558105469
    },
    {
      "id": 161,
      "start": 816.96,
      "end": 820.28,
      "text": "can use this in your own applications. But if you do have any questions just",
      "tokens": [
        51300,
        393,
        764,
        341,
        294,
        428,
        1065,
        5821,
        13,
        583,
        498,
        291,
        360,
        362,
        604,
        1651,
        445,
        51466
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12526189422607423,
      "compression_ratio": 1.6456953642384107,
      "no_speech_prob": 0.3333015441894531,
      "confidence": 0.6666984558105469
    },
    {
      "id": 162,
      "start": 820.28,
      "end": 823.64,
      "text": "feel free to ask me in the comment section below. Be sure to subscribe for",
      "tokens": [
        51466,
        841,
        1737,
        281,
        1029,
        385,
        294,
        264,
        2871,
        3541,
        2507,
        13,
        879,
        988,
        281,
        3022,
        337,
        51634
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12526189422607423,
      "compression_ratio": 1.6456953642384107,
      "no_speech_prob": 0.3333015441894531,
      "confidence": 0.6666984558105469
    },
    {
      "id": 163,
      "start": 823.64,
      "end": 827.44,
      "text": "future videos and thank you all for watching.",
      "tokens": [
        51634,
        2027,
        2145,
        293,
        1309,
        291,
        439,
        337,
        1976,
        13,
        51824
      ],
      "temperature": 0.0,
      "avg_logprob": -0.12526189422607423,
      "compression_ratio": 1.6456953642384107,
      "no_speech_prob": 0.3333015441894531,
      "confidence": 0.6666984558105469
    }
  ]
}