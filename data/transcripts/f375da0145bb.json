{
  "video_id": "f375da0145bb",
  "video_path": "videos/Python Tutorial for Beginners 6- Conditionals and Booleans - If, Else, and Elif Statements.mp4",
  "video_filename": "Python Tutorial for Beginners 6- Conditionals and Booleans - If, Else, and Elif Statements.mp4",
  "model_size": "medium",
  "language": "en",
  "duration": 0,
  "text": " Hey there, how's it going everybody? In this video we'll be learning about conditionals and how we can control what statements get executed depending on whether certain values evaluate to true or false. And we've mentioned in previous videos that these true and false values are called booleans. So let's look at one of the simplest conditionals that we can write. So we're going to write an if statement and we'll say if and now the condition that we want to check whether it evaluates to true or false. So we're just going to make this obvious for now and just say true then we'll put in a colon and hit enter. And now on the next line we want to be sure that we're indented over so that we're writing code within our if block. So now we'll just print out a string here and I'll just say conditional was true. So now if I save that and run it then we can see that it printed out that our condition was true. Now this print statement will only be executed if the condition after our if statement evaluates to true. So what if I was to instead change this over to false. Now if I run this then we can see that it didn't print out the statement within our if block. Now conditionals are usually not hard-coded to true and false values like this. We really want to put in some code that evaluates to true or false. So for example I'm going to create a variable here and I'll just call this variable language and I'll set this equal to So now let's say that we only want to execute this print statement if the language is equal to python. So to do this we can say if language equals equals python. Now notice that we have a double equals here. So this tests for equality. Now this is different from the single equal sign which is for assigning values. So with this double equals here we're testing for equality. And this will evaluate to true or false and that will determine if the code in our if statement is executed. So if we run this then we can see that it executed our print statement that the condition was true. Now there are a lot of different comparisons that we can test for and I've got these written out in a snippets file here. So I'm just going to copy these and paste them in so that we have them as a reference. Now we went over some of these in our numbers tutorial but let's go ahead and just look through here really quick. So double equals tests for equality. Exclamation point equals test if something is not equal. Greater than sign is for greater than. Less than sign is for less than. Greater than equal to is for greater than or equal to. Less than equal to is for less or equal. And then we have this object identity. Now some people wonder what the difference is between this and the double equal signs but when we use this is keyword check we're actually checking if values have the same id or basically whether they're the same object in memory. And we're going to look at an example of this in just a bit but right now let's move on to else statements. So what if we wanted to execute one portion of our code if our language was equal to python but another portion of our code if it wasn't. So to do this we're going to use an else statement. So first I'm going to change my print statement here and just print this to say that the language is python and now we want to execute some code if the language is not equal to python. So to do this we're just going to put in an else statement and make sure that your else is back here on our baseline and not within our if statement. So now we'll say else and now within our else block we will print out a string that just says no match. So now if we run this we can see that it printed out that the language is python. So our check if the language is equal to python is evaluating to true. So it's printing the code within that block and since it meets that conditional it never executes the code within our else block. Now if I was instead to change this language and set that equal to java and rerun this then we can see that it didn't meet the conditional for our if statement. So that evaluated to false. So then it dropped down to our else statement and executed that code. Okay so what if we wanted to check for multiple languages and execute different code for each one that we encountered. So this is where an elif statement comes in. So let's say that we wanted to check if the language was equal to python and if it wasn't then we wanted to check if it was equal to java and if it was neither of those then we would just print out no match. So we'll add our additional check after our if statement by putting in an elif and again make sure that your indentation is back to this base level because we're no longer in the if block. So now I'm just going to copy this code here and say if the language is equal to java and put in our colon and then we'll grab this and just say print language is java. So basically what this is saying is if the language is equal to python then execute this code. If it's not then run a second conditional and see if it's equal to java and if it is then run this code and if none of those conditionals are met then print no match. So now if we run this then we can see that it executed the print statement that the language is java and none of these other statements were executed. Now if you're coming from another language you might be wondering if python has a switch case statement. Now if you don't know what a switch case statement is then it's not a big deal. Basically it's just a way to check multiple values and python doesn't have a switch case and the reason is because the if, elif, and else statements are plenty clean enough to do this already. So if we wanted to check another language then we could just keep adding elif statements. So if I wanted to add a javascript check to the list then I could just come down here if I copy all of this then I could just do another test here for javascript and then say if the language is javascript then execute this code here and this basically gives us the same functionality as a switch case from another language. Okay so now I'm going to remove some code here so that we can take a look at another example. Now in addition to these comparisons that we have here we also have some boolean operations that we can use and these are and or and not. So for example let me create two variables here and I'll call one of these user and set this equal to a string of admin and then I'll create a another variable here called logged in and I'll set that equal to true. Now let's say that we only wanted to execute some code if the user is equal to admin and logged in is equal to true. Now to do this we can use the and keyword so I could say if user equal equals admin and then we'll use this and keyword and logged in and now we can write the code if this is true so I'll just print out a string that says admin page and now we can put in an else block and then for the else block I'll just say if neither of these are true then print out the string that just says bad creds for credentials and let me bring this down just a little bit here and just to give us a little bit of extra room I'm actually going to delete these comparison comments up here that we have as a reference but I will have a link to these to the github page so that you can download those if you want to have those as a reference. Okay so now if we run the code that we currently have then we can see that it printed out our admin page because both of those evaluated to true our user is equal to admin and our logged in is equal to true but if I changed our logged in variable to false and rerun this and we can see that it executes our bad credentials statement because both of these didn't evaluate to true so this user equals admin evaluated to true but logged in was equal to false so and make sure that both of these have to be true now if we only care if one of these evaluate to true then we can use the or keyword so I could change this and to an or and now if I run this then you can see that it printed out our admin page statement because that evaluated to true because only one or the other needed to be true and our user was equal to admin so it didn't matter if the login was false or not because it only had to be one or the other now this not operation is just used to switch a bullion so it'll change a true to a false and a false to a true so for example if we were to say if not logged in then we will print a string here that just says please log in and else print welcome so we can see that currently our logged in value is equal to false now when we say not logged in then it'll evaluate to true because this not just switches that false to a true now I know that that can sound a little confusing but basically you can just think of it as saying not false if not false which would evaluate to true so if we run this then it prints out please log in because not logged in evaluated to true so it ran what was in our if statement so when I had the conditionals pulled up here as a reference before so now I'm in my snippets here we remember that we had this object identity with this is keyword and I said that we'd look at the difference between that and the double equals which tests for equality now like I said before that object identity tests if two objects have the same id which basically means if they're the same object in memory so two objects can actually be equal and not be the same object in memory so for example let me create two different lists here so I'll just call one list equal to a and I'll put in the values of one two three another list equal to b and put in the values one two three and now I will print out a double equals b so this should evaluate to true because these two lists are equal so if we run this then we can see that we got true which is what we would expect because a and b are equal but instead if we say a is b and then we run this then that returns false now the reason is because these are two different objects in memory and we can print out these locations with this built-in id function so right above printing that a is b I'm also going to print out the id of a and I will also print out the id of b so I'll save that and run it and we can see that these ids are different so really this is comparison is really checking whether these ids are the same so up here instead of creating a new list if I just said b equals a and save that and run it now we can see that the id of a and id of b are the same and then when we print a is b that evaluates to true because now these are the same object in memory and if I check equality then they're also equal so that's basically the difference there behind the scenes the is comparison if you say a is b it's really the same as saying id of a equals equals the id of b so if I run that that's equal to true that's basically what the is operator does okay so basically now all the conditionals that we looked at completely depend on what python evaluates to true or false so let's see what all python evaluates to true or false and there are a few things that may be unexpected to us so I have a couple of things pulled up here in my snippets and let me grab these really fast so to determine what python evaluates to true and false it's easier to show everything that evaluates to false and then everything else will by default evaluate to true and we have a quick if else statement here to test all of these so we're going to make a few different conditions here and if that condition evaluates to true we'll print out evaluated true else evaluated to false and my comments here are all the things in python that evaluate to false values so the first one is the most obvious if we set a conditional equal to false then it's going to evaluate to false and this one would include all the comparison operations that we just saw so they would return true or false so if I run this then we can see that obviously our conditional evaluated to false here since we set our condition equal to false now the next value in our list here is none so none actually evaluates to false as well so if we put that value in as our conditional and run this then we can see that with our condition equal to none that that condition also evaluates to false now this next one here isn't always so obvious so if you have a numeric data type and pass it into a conditional then zero will evaluate to false so if we set this condition equal to zero and run this then we can see that that evaluated to false but if we set this to any other number so if our condition is 10 instead of zero and run that then we can see that that evaluated to true so that's something to keep in mind there when working with numbers because you don't want to accidentally pass in a zero that you think would be true but it evaluates to false okay so moving on down the list if we have any empty sequence and pass it into a conditional then that will evaluate to false so this can be an empty string an empty list an empty tuple so for example if i just set this condition to an empty list and run this then we can see that that evaluates to false and if you have an empty string that evaluates to false also and now lastly here in our list empty mapping so an empty mapping which is basically an empty dictionary this evaluates to false as well so if i pass in an empty dictionary here and run this then we can see that that empty dictionary also evaluated to false now knowing these types of things can be useful because let's say that you have a function or something that is supposed to return some values now sometimes it's needed to check if those values are actually there so you could just pass in these sequences into a conditional to check whether a string is empty or a dictionary is empty and you don't actually have to call any specific method you can just pass in the empty sequence or the empty dictionary and it'll evaluate the true or false if that is empty now there are also some user defined classes that can evaluate to false but these are the majority of the conditions that will be checking so now that we know everything that evaluates to false then everything else is obviously going to evaluate to true so you know for example just to do another example here if i set this condition equal to a string that just says test now an empty string would evaluate the false so if we pass that in then we can see that that a string with some characters evaluated to true so that's really important when working with these conditionals is just having an idea of what is going to evaluate the true and what's going to evaluate to false okay so i think that is going to do it for this video i hope that now everyone has a clear understanding of how these conditionals work and all the different ways that python determines what values are true and false now in the next video we'll be learning about loops and iterations but if anyone has any questions about what we covered in this video then feel free to ask in the comment section below and i'll do my best to answer those now if you enjoy these tutorials and would like to support them then there are several ways you can do that the easiest ways is simply like the video and give it a thumbs up and also it's a huge help to share these videos with anyone who you think would find them useful and if you have the means you can contribute through patreon and there's a link to that page in the description section below be sure to subscribe for future videos and thank you all for watching",
  "segments": [
    {
      "id": 0,
      "start": 0.0,
      "end": 2.88,
      "text": "Hey there, how's it going everybody? In this video we'll be learning about",
      "tokens": [
        50364,
        1911,
        456,
        11,
        577,
        311,
        309,
        516,
        2201,
        30,
        682,
        341,
        960,
        321,
        603,
        312,
        2539,
        466,
        50508
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06736700875418526,
      "compression_ratio": 1.867986798679868,
      "no_speech_prob": 0.16611561179161072,
      "confidence": 0.8338843882083893
    },
    {
      "id": 1,
      "start": 2.88,
      "end": 6.16,
      "text": "conditionals and how we can control what statements get executed",
      "tokens": [
        50508,
        4188,
        1124,
        293,
        577,
        321,
        393,
        1969,
        437,
        12363,
        483,
        17577,
        50672
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06736700875418526,
      "compression_ratio": 1.867986798679868,
      "no_speech_prob": 0.16611561179161072,
      "confidence": 0.8338843882083893
    },
    {
      "id": 2,
      "start": 6.16,
      "end": 9.68,
      "text": "depending on whether certain values evaluate to true or false.",
      "tokens": [
        50672,
        5413,
        322,
        1968,
        1629,
        4190,
        13059,
        281,
        2074,
        420,
        7908,
        13,
        50848
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06736700875418526,
      "compression_ratio": 1.867986798679868,
      "no_speech_prob": 0.16611561179161072,
      "confidence": 0.8338843882083893
    },
    {
      "id": 3,
      "start": 9.68,
      "end": 13.200000000000001,
      "text": "And we've mentioned in previous videos that these true and false values are",
      "tokens": [
        50848,
        400,
        321,
        600,
        2835,
        294,
        3894,
        2145,
        300,
        613,
        2074,
        293,
        7908,
        4190,
        366,
        51024
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06736700875418526,
      "compression_ratio": 1.867986798679868,
      "no_speech_prob": 0.16611561179161072,
      "confidence": 0.8338843882083893
    },
    {
      "id": 4,
      "start": 13.200000000000001,
      "end": 15.84,
      "text": "called booleans. So let's look at one of the simplest",
      "tokens": [
        51024,
        1219,
        748,
        4812,
        599,
        13,
        407,
        718,
        311,
        574,
        412,
        472,
        295,
        264,
        22811,
        51156
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06736700875418526,
      "compression_ratio": 1.867986798679868,
      "no_speech_prob": 0.16611561179161072,
      "confidence": 0.8338843882083893
    },
    {
      "id": 5,
      "start": 15.84,
      "end": 19.2,
      "text": "conditionals that we can write. So we're going to write an if statement",
      "tokens": [
        51156,
        4188,
        1124,
        300,
        321,
        393,
        2464,
        13,
        407,
        321,
        434,
        516,
        281,
        2464,
        364,
        498,
        5629,
        51324
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06736700875418526,
      "compression_ratio": 1.867986798679868,
      "no_speech_prob": 0.16611561179161072,
      "confidence": 0.8338843882083893
    },
    {
      "id": 6,
      "start": 19.2,
      "end": 22.48,
      "text": "and we'll say if and now the condition that we want to",
      "tokens": [
        51324,
        293,
        321,
        603,
        584,
        498,
        293,
        586,
        264,
        4188,
        300,
        321,
        528,
        281,
        51488
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06736700875418526,
      "compression_ratio": 1.867986798679868,
      "no_speech_prob": 0.16611561179161072,
      "confidence": 0.8338843882083893
    },
    {
      "id": 7,
      "start": 22.48,
      "end": 25.04,
      "text": "check whether it evaluates to true or false.",
      "tokens": [
        51488,
        1520,
        1968,
        309,
        6133,
        1024,
        281,
        2074,
        420,
        7908,
        13,
        51616
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06736700875418526,
      "compression_ratio": 1.867986798679868,
      "no_speech_prob": 0.16611561179161072,
      "confidence": 0.8338843882083893
    },
    {
      "id": 8,
      "start": 25.04,
      "end": 28.240000000000002,
      "text": "So we're just going to make this obvious for now and just say",
      "tokens": [
        51616,
        407,
        321,
        434,
        445,
        516,
        281,
        652,
        341,
        6322,
        337,
        586,
        293,
        445,
        584,
        51776
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06736700875418526,
      "compression_ratio": 1.867986798679868,
      "no_speech_prob": 0.16611561179161072,
      "confidence": 0.8338843882083893
    },
    {
      "id": 9,
      "start": 28.24,
      "end": 31.2,
      "text": "true then we'll put in a colon and hit enter.",
      "tokens": [
        50364,
        2074,
        550,
        321,
        603,
        829,
        294,
        257,
        8255,
        293,
        2045,
        3242,
        13,
        50512
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08152640876123461,
      "compression_ratio": 1.8589211618257262,
      "no_speech_prob": 0.14835141599178314,
      "confidence": 0.8516485840082169
    },
    {
      "id": 10,
      "start": 31.2,
      "end": 34.239999999999995,
      "text": "And now on the next line we want to be sure that we're indented over so that",
      "tokens": [
        50512,
        400,
        586,
        322,
        264,
        958,
        1622,
        321,
        528,
        281,
        312,
        988,
        300,
        321,
        434,
        1016,
        6003,
        670,
        370,
        300,
        50664
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08152640876123461,
      "compression_ratio": 1.8589211618257262,
      "no_speech_prob": 0.14835141599178314,
      "confidence": 0.8516485840082169
    },
    {
      "id": 11,
      "start": 34.239999999999995,
      "end": 39.44,
      "text": "we're writing code within our if block. So now we'll just print out a string",
      "tokens": [
        50664,
        321,
        434,
        3579,
        3089,
        1951,
        527,
        498,
        3461,
        13,
        407,
        586,
        321,
        603,
        445,
        4482,
        484,
        257,
        6798,
        50924
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08152640876123461,
      "compression_ratio": 1.8589211618257262,
      "no_speech_prob": 0.14835141599178314,
      "confidence": 0.8516485840082169
    },
    {
      "id": 12,
      "start": 39.44,
      "end": 44.4,
      "text": "here and I'll just say conditional was true. So now if I save",
      "tokens": [
        50924,
        510,
        293,
        286,
        603,
        445,
        584,
        27708,
        390,
        2074,
        13,
        407,
        586,
        498,
        286,
        3155,
        51172
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08152640876123461,
      "compression_ratio": 1.8589211618257262,
      "no_speech_prob": 0.14835141599178314,
      "confidence": 0.8516485840082169
    },
    {
      "id": 13,
      "start": 44.4,
      "end": 47.2,
      "text": "that and run it then we can see that it printed out",
      "tokens": [
        51172,
        300,
        293,
        1190,
        309,
        550,
        321,
        393,
        536,
        300,
        309,
        13567,
        484,
        51312
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08152640876123461,
      "compression_ratio": 1.8589211618257262,
      "no_speech_prob": 0.14835141599178314,
      "confidence": 0.8516485840082169
    },
    {
      "id": 14,
      "start": 47.2,
      "end": 50.959999999999994,
      "text": "that our condition was true. Now this print statement will only be",
      "tokens": [
        51312,
        300,
        527,
        4188,
        390,
        2074,
        13,
        823,
        341,
        4482,
        5629,
        486,
        787,
        312,
        51500
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08152640876123461,
      "compression_ratio": 1.8589211618257262,
      "no_speech_prob": 0.14835141599178314,
      "confidence": 0.8516485840082169
    },
    {
      "id": 15,
      "start": 50.959999999999994,
      "end": 55.68,
      "text": "executed if the condition after our if statement evaluates to true.",
      "tokens": [
        51500,
        17577,
        498,
        264,
        4188,
        934,
        527,
        498,
        5629,
        6133,
        1024,
        281,
        2074,
        13,
        51736
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08152640876123461,
      "compression_ratio": 1.8589211618257262,
      "no_speech_prob": 0.14835141599178314,
      "confidence": 0.8516485840082169
    },
    {
      "id": 16,
      "start": 55.68,
      "end": 58.8,
      "text": "So what if I was to instead change this over",
      "tokens": [
        50364,
        407,
        437,
        498,
        286,
        390,
        281,
        2602,
        1319,
        341,
        670,
        50520
      ],
      "temperature": 0.0,
      "avg_logprob": -0.060118653752782324,
      "compression_ratio": 1.6842105263157894,
      "no_speech_prob": 0.020957469940185547,
      "confidence": 0.9790425300598145
    },
    {
      "id": 17,
      "start": 58.8,
      "end": 63.28,
      "text": "to false. Now if I run this then we can see that it didn't print out the",
      "tokens": [
        50520,
        281,
        7908,
        13,
        823,
        498,
        286,
        1190,
        341,
        550,
        321,
        393,
        536,
        300,
        309,
        994,
        380,
        4482,
        484,
        264,
        50744
      ],
      "temperature": 0.0,
      "avg_logprob": -0.060118653752782324,
      "compression_ratio": 1.6842105263157894,
      "no_speech_prob": 0.020957469940185547,
      "confidence": 0.9790425300598145
    },
    {
      "id": 18,
      "start": 63.28,
      "end": 67.6,
      "text": "statement within our if block. Now conditionals are usually not",
      "tokens": [
        50744,
        5629,
        1951,
        527,
        498,
        3461,
        13,
        823,
        4188,
        1124,
        366,
        2673,
        406,
        50960
      ],
      "temperature": 0.0,
      "avg_logprob": -0.060118653752782324,
      "compression_ratio": 1.6842105263157894,
      "no_speech_prob": 0.020957469940185547,
      "confidence": 0.9790425300598145
    },
    {
      "id": 19,
      "start": 67.6,
      "end": 70.4,
      "text": "hard-coded to true and false values like this.",
      "tokens": [
        50960,
        1152,
        12,
        66,
        12340,
        281,
        2074,
        293,
        7908,
        4190,
        411,
        341,
        13,
        51100
      ],
      "temperature": 0.0,
      "avg_logprob": -0.060118653752782324,
      "compression_ratio": 1.6842105263157894,
      "no_speech_prob": 0.020957469940185547,
      "confidence": 0.9790425300598145
    },
    {
      "id": 20,
      "start": 70.4,
      "end": 74.4,
      "text": "We really want to put in some code that evaluates to true or false.",
      "tokens": [
        51100,
        492,
        534,
        528,
        281,
        829,
        294,
        512,
        3089,
        300,
        6133,
        1024,
        281,
        2074,
        420,
        7908,
        13,
        51300
      ],
      "temperature": 0.0,
      "avg_logprob": -0.060118653752782324,
      "compression_ratio": 1.6842105263157894,
      "no_speech_prob": 0.020957469940185547,
      "confidence": 0.9790425300598145
    },
    {
      "id": 21,
      "start": 74.4,
      "end": 78.8,
      "text": "So for example I'm going to create a variable here and I'll just call this",
      "tokens": [
        51300,
        407,
        337,
        1365,
        286,
        478,
        516,
        281,
        1884,
        257,
        7006,
        510,
        293,
        286,
        603,
        445,
        818,
        341,
        51520
      ],
      "temperature": 0.0,
      "avg_logprob": -0.060118653752782324,
      "compression_ratio": 1.6842105263157894,
      "no_speech_prob": 0.020957469940185547,
      "confidence": 0.9790425300598145
    },
    {
      "id": 22,
      "start": 78.8,
      "end": 81.68,
      "text": "variable language and I'll set this equal to",
      "tokens": [
        51520,
        7006,
        2856,
        293,
        286,
        603,
        992,
        341,
        2681,
        281,
        51664
      ],
      "temperature": 0.0,
      "avg_logprob": -0.060118653752782324,
      "compression_ratio": 1.6842105263157894,
      "no_speech_prob": 0.020957469940185547,
      "confidence": 0.9790425300598145
    },
    {
      "id": 23,
      "start": 82.48,
      "end": 86.24000000000001,
      "text": "So now let's say that we only want to execute this print statement",
      "tokens": [
        50404,
        407,
        586,
        718,
        311,
        584,
        300,
        321,
        787,
        528,
        281,
        14483,
        341,
        4482,
        5629,
        50592
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0774329019629437,
      "compression_ratio": 1.838235294117647,
      "no_speech_prob": 0.05429535731673241,
      "confidence": 0.9457046426832676
    },
    {
      "id": 24,
      "start": 86.24000000000001,
      "end": 90.4,
      "text": "if the language is equal to python. So to do this we can say",
      "tokens": [
        50592,
        498,
        264,
        2856,
        307,
        2681,
        281,
        38797,
        13,
        407,
        281,
        360,
        341,
        321,
        393,
        584,
        50800
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0774329019629437,
      "compression_ratio": 1.838235294117647,
      "no_speech_prob": 0.05429535731673241,
      "confidence": 0.9457046426832676
    },
    {
      "id": 25,
      "start": 90.4,
      "end": 96.16000000000001,
      "text": "if language equals equals python. Now notice that we have a double equals",
      "tokens": [
        50800,
        498,
        2856,
        6915,
        6915,
        38797,
        13,
        823,
        3449,
        300,
        321,
        362,
        257,
        3834,
        6915,
        51088
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0774329019629437,
      "compression_ratio": 1.838235294117647,
      "no_speech_prob": 0.05429535731673241,
      "confidence": 0.9457046426832676
    },
    {
      "id": 26,
      "start": 96.16000000000001,
      "end": 99.28,
      "text": "here. So this tests for equality. Now this is",
      "tokens": [
        51088,
        510,
        13,
        407,
        341,
        6921,
        337,
        14949,
        13,
        823,
        341,
        307,
        51244
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0774329019629437,
      "compression_ratio": 1.838235294117647,
      "no_speech_prob": 0.05429535731673241,
      "confidence": 0.9457046426832676
    },
    {
      "id": 27,
      "start": 99.28,
      "end": 104.32000000000001,
      "text": "different from the single equal sign which is for assigning values.",
      "tokens": [
        51244,
        819,
        490,
        264,
        2167,
        2681,
        1465,
        597,
        307,
        337,
        49602,
        4190,
        13,
        51496
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0774329019629437,
      "compression_ratio": 1.838235294117647,
      "no_speech_prob": 0.05429535731673241,
      "confidence": 0.9457046426832676
    },
    {
      "id": 28,
      "start": 104.32000000000001,
      "end": 108.0,
      "text": "So with this double equals here we're testing for equality.",
      "tokens": [
        51496,
        407,
        365,
        341,
        3834,
        6915,
        510,
        321,
        434,
        4997,
        337,
        14949,
        13,
        51680
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0774329019629437,
      "compression_ratio": 1.838235294117647,
      "no_speech_prob": 0.05429535731673241,
      "confidence": 0.9457046426832676
    },
    {
      "id": 29,
      "start": 108.0,
      "end": 111.92,
      "text": "And this will evaluate to true or false and that will determine",
      "tokens": [
        50364,
        400,
        341,
        486,
        13059,
        281,
        2074,
        420,
        7908,
        293,
        300,
        486,
        6997,
        50560
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04627066619636477,
      "compression_ratio": 1.78125,
      "no_speech_prob": 0.0675724446773529,
      "confidence": 0.9324275553226471
    },
    {
      "id": 30,
      "start": 111.92,
      "end": 115.12,
      "text": "if the code in our if statement is executed. So",
      "tokens": [
        50560,
        498,
        264,
        3089,
        294,
        527,
        498,
        5629,
        307,
        17577,
        13,
        407,
        50720
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04627066619636477,
      "compression_ratio": 1.78125,
      "no_speech_prob": 0.0675724446773529,
      "confidence": 0.9324275553226471
    },
    {
      "id": 31,
      "start": 115.12,
      "end": 119.2,
      "text": "if we run this then we can see that it executed our print statement that the",
      "tokens": [
        50720,
        498,
        321,
        1190,
        341,
        550,
        321,
        393,
        536,
        300,
        309,
        17577,
        527,
        4482,
        5629,
        300,
        264,
        50924
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04627066619636477,
      "compression_ratio": 1.78125,
      "no_speech_prob": 0.0675724446773529,
      "confidence": 0.9324275553226471
    },
    {
      "id": 32,
      "start": 119.2,
      "end": 121.76,
      "text": "condition was true. Now there are a lot of different",
      "tokens": [
        50924,
        4188,
        390,
        2074,
        13,
        823,
        456,
        366,
        257,
        688,
        295,
        819,
        51052
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04627066619636477,
      "compression_ratio": 1.78125,
      "no_speech_prob": 0.0675724446773529,
      "confidence": 0.9324275553226471
    },
    {
      "id": 33,
      "start": 121.76,
      "end": 125.2,
      "text": "comparisons that we can test for and I've got these written out in a",
      "tokens": [
        51052,
        33157,
        300,
        321,
        393,
        1500,
        337,
        293,
        286,
        600,
        658,
        613,
        3720,
        484,
        294,
        257,
        51224
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04627066619636477,
      "compression_ratio": 1.78125,
      "no_speech_prob": 0.0675724446773529,
      "confidence": 0.9324275553226471
    },
    {
      "id": 34,
      "start": 125.2,
      "end": 128.32,
      "text": "snippets file here. So I'm just going to copy these and paste",
      "tokens": [
        51224,
        35623,
        1385,
        3991,
        510,
        13,
        407,
        286,
        478,
        445,
        516,
        281,
        5055,
        613,
        293,
        9163,
        51380
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04627066619636477,
      "compression_ratio": 1.78125,
      "no_speech_prob": 0.0675724446773529,
      "confidence": 0.9324275553226471
    },
    {
      "id": 35,
      "start": 128.32,
      "end": 132.48,
      "text": "them in so that we have them as a reference. Now we went over some of",
      "tokens": [
        51380,
        552,
        294,
        370,
        300,
        321,
        362,
        552,
        382,
        257,
        6408,
        13,
        823,
        321,
        1437,
        670,
        512,
        295,
        51588
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04627066619636477,
      "compression_ratio": 1.78125,
      "no_speech_prob": 0.0675724446773529,
      "confidence": 0.9324275553226471
    },
    {
      "id": 36,
      "start": 132.48,
      "end": 135.68,
      "text": "these in our numbers tutorial but let's go ahead and just look through",
      "tokens": [
        51588,
        613,
        294,
        527,
        3547,
        7073,
        457,
        718,
        311,
        352,
        2286,
        293,
        445,
        574,
        807,
        51748
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04627066619636477,
      "compression_ratio": 1.78125,
      "no_speech_prob": 0.0675724446773529,
      "confidence": 0.9324275553226471
    },
    {
      "id": 37,
      "start": 135.68,
      "end": 139.44,
      "text": "here really quick. So double equals tests for equality.",
      "tokens": [
        50364,
        510,
        534,
        1702,
        13,
        407,
        3834,
        6915,
        6921,
        337,
        14949,
        13,
        50552
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07614585840813468,
      "compression_ratio": 1.9601769911504425,
      "no_speech_prob": 0.2754674255847931,
      "confidence": 0.7245325744152069
    },
    {
      "id": 38,
      "start": 139.44,
      "end": 143.04000000000002,
      "text": "Exclamation point equals test if something is not equal.",
      "tokens": [
        50552,
        2111,
        41411,
        935,
        6915,
        1500,
        498,
        746,
        307,
        406,
        2681,
        13,
        50732
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07614585840813468,
      "compression_ratio": 1.9601769911504425,
      "no_speech_prob": 0.2754674255847931,
      "confidence": 0.7245325744152069
    },
    {
      "id": 39,
      "start": 143.04000000000002,
      "end": 146.8,
      "text": "Greater than sign is for greater than. Less than sign is for less than.",
      "tokens": [
        50732,
        38410,
        813,
        1465,
        307,
        337,
        5044,
        813,
        13,
        18649,
        813,
        1465,
        307,
        337,
        1570,
        813,
        13,
        50920
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07614585840813468,
      "compression_ratio": 1.9601769911504425,
      "no_speech_prob": 0.2754674255847931,
      "confidence": 0.7245325744152069
    },
    {
      "id": 40,
      "start": 146.8,
      "end": 150.88,
      "text": "Greater than equal to is for greater than or equal to. Less than equal to is",
      "tokens": [
        50920,
        38410,
        813,
        2681,
        281,
        307,
        337,
        5044,
        813,
        420,
        2681,
        281,
        13,
        18649,
        813,
        2681,
        281,
        307,
        51124
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07614585840813468,
      "compression_ratio": 1.9601769911504425,
      "no_speech_prob": 0.2754674255847931,
      "confidence": 0.7245325744152069
    },
    {
      "id": 41,
      "start": 150.88,
      "end": 155.28,
      "text": "for less or equal. And then we have this object identity.",
      "tokens": [
        51124,
        337,
        1570,
        420,
        2681,
        13,
        400,
        550,
        321,
        362,
        341,
        2657,
        6575,
        13,
        51344
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07614585840813468,
      "compression_ratio": 1.9601769911504425,
      "no_speech_prob": 0.2754674255847931,
      "confidence": 0.7245325744152069
    },
    {
      "id": 42,
      "start": 155.28,
      "end": 158.56,
      "text": "Now some people wonder what the difference is between this and the",
      "tokens": [
        51344,
        823,
        512,
        561,
        2441,
        437,
        264,
        2649,
        307,
        1296,
        341,
        293,
        264,
        51508
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07614585840813468,
      "compression_ratio": 1.9601769911504425,
      "no_speech_prob": 0.2754674255847931,
      "confidence": 0.7245325744152069
    },
    {
      "id": 43,
      "start": 158.56,
      "end": 163.04000000000002,
      "text": "double equal signs but when we use this is keyword check",
      "tokens": [
        51508,
        3834,
        2681,
        7880,
        457,
        562,
        321,
        764,
        341,
        307,
        20428,
        1520,
        51732
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07614585840813468,
      "compression_ratio": 1.9601769911504425,
      "no_speech_prob": 0.2754674255847931,
      "confidence": 0.7245325744152069
    },
    {
      "id": 44,
      "start": 163.04,
      "end": 166.23999999999998,
      "text": "we're actually checking if values have the same id",
      "tokens": [
        50364,
        321,
        434,
        767,
        8568,
        498,
        4190,
        362,
        264,
        912,
        4496,
        50524
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05481371840810388,
      "compression_ratio": 1.8068181818181819,
      "no_speech_prob": 0.18223784863948822,
      "confidence": 0.8177621513605118
    },
    {
      "id": 45,
      "start": 166.23999999999998,
      "end": 169.44,
      "text": "or basically whether they're the same object in memory.",
      "tokens": [
        50524,
        420,
        1936,
        1968,
        436,
        434,
        264,
        912,
        2657,
        294,
        4675,
        13,
        50684
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05481371840810388,
      "compression_ratio": 1.8068181818181819,
      "no_speech_prob": 0.18223784863948822,
      "confidence": 0.8177621513605118
    },
    {
      "id": 46,
      "start": 169.44,
      "end": 172.95999999999998,
      "text": "And we're going to look at an example of this in just a bit but right now let's",
      "tokens": [
        50684,
        400,
        321,
        434,
        516,
        281,
        574,
        412,
        364,
        1365,
        295,
        341,
        294,
        445,
        257,
        857,
        457,
        558,
        586,
        718,
        311,
        50860
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05481371840810388,
      "compression_ratio": 1.8068181818181819,
      "no_speech_prob": 0.18223784863948822,
      "confidence": 0.8177621513605118
    },
    {
      "id": 47,
      "start": 172.95999999999998,
      "end": 176.56,
      "text": "move on to else statements. So what if we wanted to execute one",
      "tokens": [
        50860,
        1286,
        322,
        281,
        1646,
        12363,
        13,
        407,
        437,
        498,
        321,
        1415,
        281,
        14483,
        472,
        51040
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05481371840810388,
      "compression_ratio": 1.8068181818181819,
      "no_speech_prob": 0.18223784863948822,
      "confidence": 0.8177621513605118
    },
    {
      "id": 48,
      "start": 176.56,
      "end": 179.04,
      "text": "portion of our code if our language was equal to",
      "tokens": [
        51040,
        8044,
        295,
        527,
        3089,
        498,
        527,
        2856,
        390,
        2681,
        281,
        51164
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05481371840810388,
      "compression_ratio": 1.8068181818181819,
      "no_speech_prob": 0.18223784863948822,
      "confidence": 0.8177621513605118
    },
    {
      "id": 49,
      "start": 179.04,
      "end": 182.48,
      "text": "python but another portion of our code if it wasn't.",
      "tokens": [
        51164,
        38797,
        457,
        1071,
        8044,
        295,
        527,
        3089,
        498,
        309,
        2067,
        380,
        13,
        51336
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05481371840810388,
      "compression_ratio": 1.8068181818181819,
      "no_speech_prob": 0.18223784863948822,
      "confidence": 0.8177621513605118
    },
    {
      "id": 50,
      "start": 182.48,
      "end": 185.51999999999998,
      "text": "So to do this we're going to use an else statement. So",
      "tokens": [
        51336,
        407,
        281,
        360,
        341,
        321,
        434,
        516,
        281,
        764,
        364,
        1646,
        5629,
        13,
        407,
        51488
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05481371840810388,
      "compression_ratio": 1.8068181818181819,
      "no_speech_prob": 0.18223784863948822,
      "confidence": 0.8177621513605118
    },
    {
      "id": 51,
      "start": 185.51999999999998,
      "end": 189.6,
      "text": "first I'm going to change my print statement here and just print this",
      "tokens": [
        51488,
        700,
        286,
        478,
        516,
        281,
        1319,
        452,
        4482,
        5629,
        510,
        293,
        445,
        4482,
        341,
        51692
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05481371840810388,
      "compression_ratio": 1.8068181818181819,
      "no_speech_prob": 0.18223784863948822,
      "confidence": 0.8177621513605118
    },
    {
      "id": 52,
      "start": 189.6,
      "end": 195.28,
      "text": "to say that the language is python and now we want to execute some code",
      "tokens": [
        50364,
        281,
        584,
        300,
        264,
        2856,
        307,
        38797,
        293,
        586,
        321,
        528,
        281,
        14483,
        512,
        3089,
        50648
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06829352562244122,
      "compression_ratio": 1.8341013824884793,
      "no_speech_prob": 0.12034107744693756,
      "confidence": 0.8796589225530624
    },
    {
      "id": 53,
      "start": 195.28,
      "end": 198.88,
      "text": "if the language is not equal to python. So to do this we're just",
      "tokens": [
        50648,
        498,
        264,
        2856,
        307,
        406,
        2681,
        281,
        38797,
        13,
        407,
        281,
        360,
        341,
        321,
        434,
        445,
        50828
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06829352562244122,
      "compression_ratio": 1.8341013824884793,
      "no_speech_prob": 0.12034107744693756,
      "confidence": 0.8796589225530624
    },
    {
      "id": 54,
      "start": 198.88,
      "end": 202.64,
      "text": "going to put in an else statement and make sure that your else",
      "tokens": [
        50828,
        516,
        281,
        829,
        294,
        364,
        1646,
        5629,
        293,
        652,
        988,
        300,
        428,
        1646,
        51016
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06829352562244122,
      "compression_ratio": 1.8341013824884793,
      "no_speech_prob": 0.12034107744693756,
      "confidence": 0.8796589225530624
    },
    {
      "id": 55,
      "start": 202.64,
      "end": 205.84,
      "text": "is back here on our baseline and not within",
      "tokens": [
        51016,
        307,
        646,
        510,
        322,
        527,
        20518,
        293,
        406,
        1951,
        51176
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06829352562244122,
      "compression_ratio": 1.8341013824884793,
      "no_speech_prob": 0.12034107744693756,
      "confidence": 0.8796589225530624
    },
    {
      "id": 56,
      "start": 205.84,
      "end": 211.12,
      "text": "our if statement. So now we'll say else and now within our else block we will",
      "tokens": [
        51176,
        527,
        498,
        5629,
        13,
        407,
        586,
        321,
        603,
        584,
        1646,
        293,
        586,
        1951,
        527,
        1646,
        3461,
        321,
        486,
        51440
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06829352562244122,
      "compression_ratio": 1.8341013824884793,
      "no_speech_prob": 0.12034107744693756,
      "confidence": 0.8796589225530624
    },
    {
      "id": 57,
      "start": 211.12,
      "end": 216.56,
      "text": "print out a string that just says no match. So now if we run this we can see",
      "tokens": [
        51440,
        4482,
        484,
        257,
        6798,
        300,
        445,
        1619,
        572,
        2995,
        13,
        407,
        586,
        498,
        321,
        1190,
        341,
        321,
        393,
        536,
        51712
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06829352562244122,
      "compression_ratio": 1.8341013824884793,
      "no_speech_prob": 0.12034107744693756,
      "confidence": 0.8796589225530624
    },
    {
      "id": 58,
      "start": 216.56,
      "end": 220.32,
      "text": "that it printed out that the language is python. So our",
      "tokens": [
        50364,
        300,
        309,
        13567,
        484,
        300,
        264,
        2856,
        307,
        38797,
        13,
        407,
        527,
        50552
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06799409644944328,
      "compression_ratio": 1.9106382978723404,
      "no_speech_prob": 0.07254553586244583,
      "confidence": 0.9274544641375542
    },
    {
      "id": 59,
      "start": 220.32,
      "end": 224.24,
      "text": "check if the language is equal to python is evaluating to true.",
      "tokens": [
        50552,
        1520,
        498,
        264,
        2856,
        307,
        2681,
        281,
        38797,
        307,
        27479,
        281,
        2074,
        13,
        50748
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06799409644944328,
      "compression_ratio": 1.9106382978723404,
      "no_speech_prob": 0.07254553586244583,
      "confidence": 0.9274544641375542
    },
    {
      "id": 60,
      "start": 224.24,
      "end": 228.56,
      "text": "So it's printing the code within that block and since it meets that conditional",
      "tokens": [
        50748,
        407,
        309,
        311,
        14699,
        264,
        3089,
        1951,
        300,
        3461,
        293,
        1670,
        309,
        13961,
        300,
        27708,
        50964
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06799409644944328,
      "compression_ratio": 1.9106382978723404,
      "no_speech_prob": 0.07254553586244583,
      "confidence": 0.9274544641375542
    },
    {
      "id": 61,
      "start": 228.56,
      "end": 231.6,
      "text": "it never executes the code within our else block.",
      "tokens": [
        50964,
        309,
        1128,
        4454,
        1819,
        264,
        3089,
        1951,
        527,
        1646,
        3461,
        13,
        51116
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06799409644944328,
      "compression_ratio": 1.9106382978723404,
      "no_speech_prob": 0.07254553586244583,
      "confidence": 0.9274544641375542
    },
    {
      "id": 62,
      "start": 231.6,
      "end": 235.6,
      "text": "Now if I was instead to change this language and set that equal to",
      "tokens": [
        51116,
        823,
        498,
        286,
        390,
        2602,
        281,
        1319,
        341,
        2856,
        293,
        992,
        300,
        2681,
        281,
        51316
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06799409644944328,
      "compression_ratio": 1.9106382978723404,
      "no_speech_prob": 0.07254553586244583,
      "confidence": 0.9274544641375542
    },
    {
      "id": 63,
      "start": 235.6,
      "end": 240.32,
      "text": "java and rerun this then we can see that it didn't meet the conditional for our",
      "tokens": [
        51316,
        361,
        4061,
        293,
        43819,
        409,
        341,
        550,
        321,
        393,
        536,
        300,
        309,
        994,
        380,
        1677,
        264,
        27708,
        337,
        527,
        51552
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06799409644944328,
      "compression_ratio": 1.9106382978723404,
      "no_speech_prob": 0.07254553586244583,
      "confidence": 0.9274544641375542
    },
    {
      "id": 64,
      "start": 240.32,
      "end": 243.6,
      "text": "if statement. So that evaluated to false. So then it",
      "tokens": [
        51552,
        498,
        5629,
        13,
        407,
        300,
        25509,
        281,
        7908,
        13,
        407,
        550,
        309,
        51716
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06799409644944328,
      "compression_ratio": 1.9106382978723404,
      "no_speech_prob": 0.07254553586244583,
      "confidence": 0.9274544641375542
    },
    {
      "id": 65,
      "start": 243.6,
      "end": 246.96,
      "text": "dropped down to our else statement and executed that code.",
      "tokens": [
        50364,
        8119,
        760,
        281,
        527,
        1646,
        5629,
        293,
        17577,
        300,
        3089,
        13,
        50532
      ],
      "temperature": 0.0,
      "avg_logprob": -0.054478402795462774,
      "compression_ratio": 1.8938775510204082,
      "no_speech_prob": 0.0967036634683609,
      "confidence": 0.9032963365316391
    },
    {
      "id": 66,
      "start": 246.96,
      "end": 250.0,
      "text": "Okay so what if we wanted to check for multiple languages",
      "tokens": [
        50532,
        1033,
        370,
        437,
        498,
        321,
        1415,
        281,
        1520,
        337,
        3866,
        8650,
        50684
      ],
      "temperature": 0.0,
      "avg_logprob": -0.054478402795462774,
      "compression_ratio": 1.8938775510204082,
      "no_speech_prob": 0.0967036634683609,
      "confidence": 0.9032963365316391
    },
    {
      "id": 67,
      "start": 250.0,
      "end": 253.2,
      "text": "and execute different code for each one that we encountered.",
      "tokens": [
        50684,
        293,
        14483,
        819,
        3089,
        337,
        1184,
        472,
        300,
        321,
        20381,
        13,
        50844
      ],
      "temperature": 0.0,
      "avg_logprob": -0.054478402795462774,
      "compression_ratio": 1.8938775510204082,
      "no_speech_prob": 0.0967036634683609,
      "confidence": 0.9032963365316391
    },
    {
      "id": 68,
      "start": 253.2,
      "end": 257.68,
      "text": "So this is where an elif statement comes in. So let's say that we wanted to check",
      "tokens": [
        50844,
        407,
        341,
        307,
        689,
        364,
        806,
        351,
        5629,
        1487,
        294,
        13,
        407,
        718,
        311,
        584,
        300,
        321,
        1415,
        281,
        1520,
        51068
      ],
      "temperature": 0.0,
      "avg_logprob": -0.054478402795462774,
      "compression_ratio": 1.8938775510204082,
      "no_speech_prob": 0.0967036634683609,
      "confidence": 0.9032963365316391
    },
    {
      "id": 69,
      "start": 257.68,
      "end": 262.24,
      "text": "if the language was equal to python and if it wasn't then we wanted to",
      "tokens": [
        51068,
        498,
        264,
        2856,
        390,
        2681,
        281,
        38797,
        293,
        498,
        309,
        2067,
        380,
        550,
        321,
        1415,
        281,
        51296
      ],
      "temperature": 0.0,
      "avg_logprob": -0.054478402795462774,
      "compression_ratio": 1.8938775510204082,
      "no_speech_prob": 0.0967036634683609,
      "confidence": 0.9032963365316391
    },
    {
      "id": 70,
      "start": 262.24,
      "end": 265.68,
      "text": "check if it was equal to java and if it was neither of those",
      "tokens": [
        51296,
        1520,
        498,
        309,
        390,
        2681,
        281,
        361,
        4061,
        293,
        498,
        309,
        390,
        9662,
        295,
        729,
        51468
      ],
      "temperature": 0.0,
      "avg_logprob": -0.054478402795462774,
      "compression_ratio": 1.8938775510204082,
      "no_speech_prob": 0.0967036634683609,
      "confidence": 0.9032963365316391
    },
    {
      "id": 71,
      "start": 265.68,
      "end": 269.76,
      "text": "then we would just print out no match. So we'll add our additional check",
      "tokens": [
        51468,
        550,
        321,
        576,
        445,
        4482,
        484,
        572,
        2995,
        13,
        407,
        321,
        603,
        909,
        527,
        4497,
        1520,
        51672
      ],
      "temperature": 0.0,
      "avg_logprob": -0.054478402795462774,
      "compression_ratio": 1.8938775510204082,
      "no_speech_prob": 0.0967036634683609,
      "confidence": 0.9032963365316391
    },
    {
      "id": 72,
      "start": 269.76,
      "end": 275.92,
      "text": "after our if statement by putting in an elif and again make sure that your",
      "tokens": [
        50364,
        934,
        527,
        498,
        5629,
        538,
        3372,
        294,
        364,
        806,
        351,
        293,
        797,
        652,
        988,
        300,
        428,
        50672
      ],
      "temperature": 0.0,
      "avg_logprob": -0.053776487708091736,
      "compression_ratio": 1.6543778801843319,
      "no_speech_prob": 0.1742256134748459,
      "confidence": 0.8257743865251541
    },
    {
      "id": 73,
      "start": 275.92,
      "end": 280.15999999999997,
      "text": "indentation is back to this base level because we're no longer in the if",
      "tokens": [
        50672,
        44494,
        399,
        307,
        646,
        281,
        341,
        3096,
        1496,
        570,
        321,
        434,
        572,
        2854,
        294,
        264,
        498,
        50884
      ],
      "temperature": 0.0,
      "avg_logprob": -0.053776487708091736,
      "compression_ratio": 1.6543778801843319,
      "no_speech_prob": 0.1742256134748459,
      "confidence": 0.8257743865251541
    },
    {
      "id": 74,
      "start": 280.15999999999997,
      "end": 283.52,
      "text": "block. So now I'm just going to copy this code",
      "tokens": [
        50884,
        3461,
        13,
        407,
        586,
        286,
        478,
        445,
        516,
        281,
        5055,
        341,
        3089,
        51052
      ],
      "temperature": 0.0,
      "avg_logprob": -0.053776487708091736,
      "compression_ratio": 1.6543778801843319,
      "no_speech_prob": 0.1742256134748459,
      "confidence": 0.8257743865251541
    },
    {
      "id": 75,
      "start": 283.52,
      "end": 287.52,
      "text": "here and say if the language is equal to java",
      "tokens": [
        51052,
        510,
        293,
        584,
        498,
        264,
        2856,
        307,
        2681,
        281,
        361,
        4061,
        51252
      ],
      "temperature": 0.0,
      "avg_logprob": -0.053776487708091736,
      "compression_ratio": 1.6543778801843319,
      "no_speech_prob": 0.1742256134748459,
      "confidence": 0.8257743865251541
    },
    {
      "id": 76,
      "start": 287.52,
      "end": 290.71999999999997,
      "text": "and put in our colon and then we'll grab this",
      "tokens": [
        51252,
        293,
        829,
        294,
        527,
        8255,
        293,
        550,
        321,
        603,
        4444,
        341,
        51412
      ],
      "temperature": 0.0,
      "avg_logprob": -0.053776487708091736,
      "compression_ratio": 1.6543778801843319,
      "no_speech_prob": 0.1742256134748459,
      "confidence": 0.8257743865251541
    },
    {
      "id": 77,
      "start": 290.71999999999997,
      "end": 296.32,
      "text": "and just say print language is java. So basically what this is saying is",
      "tokens": [
        51412,
        293,
        445,
        584,
        4482,
        2856,
        307,
        361,
        4061,
        13,
        407,
        1936,
        437,
        341,
        307,
        1566,
        307,
        51692
      ],
      "temperature": 0.0,
      "avg_logprob": -0.053776487708091736,
      "compression_ratio": 1.6543778801843319,
      "no_speech_prob": 0.1742256134748459,
      "confidence": 0.8257743865251541
    },
    {
      "id": 78,
      "start": 296.32,
      "end": 300.0,
      "text": "if the language is equal to python then execute this code.",
      "tokens": [
        50364,
        498,
        264,
        2856,
        307,
        2681,
        281,
        38797,
        550,
        14483,
        341,
        3089,
        13,
        50548
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06623465850435455,
      "compression_ratio": 1.9787234042553192,
      "no_speech_prob": 0.06732109934091568,
      "confidence": 0.9326789006590843
    },
    {
      "id": 79,
      "start": 300.0,
      "end": 304.71999999999997,
      "text": "If it's not then run a second conditional and see if it's equal to",
      "tokens": [
        50548,
        759,
        309,
        311,
        406,
        550,
        1190,
        257,
        1150,
        27708,
        293,
        536,
        498,
        309,
        311,
        2681,
        281,
        50784
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06623465850435455,
      "compression_ratio": 1.9787234042553192,
      "no_speech_prob": 0.06732109934091568,
      "confidence": 0.9326789006590843
    },
    {
      "id": 80,
      "start": 304.71999999999997,
      "end": 309.36,
      "text": "java and if it is then run this code and if none of those conditionals are met",
      "tokens": [
        50784,
        361,
        4061,
        293,
        498,
        309,
        307,
        550,
        1190,
        341,
        3089,
        293,
        498,
        6022,
        295,
        729,
        4188,
        1124,
        366,
        1131,
        51016
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06623465850435455,
      "compression_ratio": 1.9787234042553192,
      "no_speech_prob": 0.06732109934091568,
      "confidence": 0.9326789006590843
    },
    {
      "id": 81,
      "start": 309.36,
      "end": 314.24,
      "text": "then print no match. So now if we run this then we can see that it executed the",
      "tokens": [
        51016,
        550,
        4482,
        572,
        2995,
        13,
        407,
        586,
        498,
        321,
        1190,
        341,
        550,
        321,
        393,
        536,
        300,
        309,
        17577,
        264,
        51260
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06623465850435455,
      "compression_ratio": 1.9787234042553192,
      "no_speech_prob": 0.06732109934091568,
      "confidence": 0.9326789006590843
    },
    {
      "id": 82,
      "start": 314.24,
      "end": 318.15999999999997,
      "text": "print statement that the language is java and none of these other statements",
      "tokens": [
        51260,
        4482,
        5629,
        300,
        264,
        2856,
        307,
        361,
        4061,
        293,
        6022,
        295,
        613,
        661,
        12363,
        51456
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06623465850435455,
      "compression_ratio": 1.9787234042553192,
      "no_speech_prob": 0.06732109934091568,
      "confidence": 0.9326789006590843
    },
    {
      "id": 83,
      "start": 318.15999999999997,
      "end": 320.32,
      "text": "were executed. Now if you're coming from another",
      "tokens": [
        51456,
        645,
        17577,
        13,
        823,
        498,
        291,
        434,
        1348,
        490,
        1071,
        51564
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06623465850435455,
      "compression_ratio": 1.9787234042553192,
      "no_speech_prob": 0.06732109934091568,
      "confidence": 0.9326789006590843
    },
    {
      "id": 84,
      "start": 320.32,
      "end": 323.52,
      "text": "language you might be wondering if python has a switch",
      "tokens": [
        51564,
        2856,
        291,
        1062,
        312,
        6359,
        498,
        38797,
        575,
        257,
        3679,
        51724
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06623465850435455,
      "compression_ratio": 1.9787234042553192,
      "no_speech_prob": 0.06732109934091568,
      "confidence": 0.9326789006590843
    },
    {
      "id": 85,
      "start": 323.52,
      "end": 326.64,
      "text": "case statement. Now if you don't know what a switch case statement is then",
      "tokens": [
        50364,
        1389,
        5629,
        13,
        823,
        498,
        291,
        500,
        380,
        458,
        437,
        257,
        3679,
        1389,
        5629,
        307,
        550,
        50520
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06203182673050185,
      "compression_ratio": 1.7790697674418605,
      "no_speech_prob": 0.31346797943115234,
      "confidence": 0.6865320205688477
    },
    {
      "id": 86,
      "start": 326.64,
      "end": 329.35999999999996,
      "text": "it's not a big deal. Basically it's just a way to check",
      "tokens": [
        50520,
        309,
        311,
        406,
        257,
        955,
        2028,
        13,
        8537,
        309,
        311,
        445,
        257,
        636,
        281,
        1520,
        50656
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06203182673050185,
      "compression_ratio": 1.7790697674418605,
      "no_speech_prob": 0.31346797943115234,
      "confidence": 0.6865320205688477
    },
    {
      "id": 87,
      "start": 329.35999999999996,
      "end": 332.96,
      "text": "multiple values and python doesn't have a switch case",
      "tokens": [
        50656,
        3866,
        4190,
        293,
        38797,
        1177,
        380,
        362,
        257,
        3679,
        1389,
        50836
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06203182673050185,
      "compression_ratio": 1.7790697674418605,
      "no_speech_prob": 0.31346797943115234,
      "confidence": 0.6865320205688477
    },
    {
      "id": 88,
      "start": 332.96,
      "end": 336.71999999999997,
      "text": "and the reason is because the if, elif, and else statements",
      "tokens": [
        50836,
        293,
        264,
        1778,
        307,
        570,
        264,
        498,
        11,
        806,
        351,
        11,
        293,
        1646,
        12363,
        51024
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06203182673050185,
      "compression_ratio": 1.7790697674418605,
      "no_speech_prob": 0.31346797943115234,
      "confidence": 0.6865320205688477
    },
    {
      "id": 89,
      "start": 336.71999999999997,
      "end": 340.64,
      "text": "are plenty clean enough to do this already. So if we wanted to check",
      "tokens": [
        51024,
        366,
        7140,
        2541,
        1547,
        281,
        360,
        341,
        1217,
        13,
        407,
        498,
        321,
        1415,
        281,
        1520,
        51220
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06203182673050185,
      "compression_ratio": 1.7790697674418605,
      "no_speech_prob": 0.31346797943115234,
      "confidence": 0.6865320205688477
    },
    {
      "id": 90,
      "start": 340.64,
      "end": 344.47999999999996,
      "text": "another language then we could just keep adding elif statements.",
      "tokens": [
        51220,
        1071,
        2856,
        550,
        321,
        727,
        445,
        1066,
        5127,
        806,
        351,
        12363,
        13,
        51412
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06203182673050185,
      "compression_ratio": 1.7790697674418605,
      "no_speech_prob": 0.31346797943115234,
      "confidence": 0.6865320205688477
    },
    {
      "id": 91,
      "start": 344.47999999999996,
      "end": 350.56,
      "text": "So if I wanted to add a javascript check to the list then I could just come down",
      "tokens": [
        51412,
        407,
        498,
        286,
        1415,
        281,
        909,
        257,
        361,
        37331,
        5944,
        1520,
        281,
        264,
        1329,
        550,
        286,
        727,
        445,
        808,
        760,
        51716
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06203182673050185,
      "compression_ratio": 1.7790697674418605,
      "no_speech_prob": 0.31346797943115234,
      "confidence": 0.6865320205688477
    },
    {
      "id": 92,
      "start": 350.56,
      "end": 354.96,
      "text": "here if I copy all of this then I could just do",
      "tokens": [
        50364,
        510,
        498,
        286,
        5055,
        439,
        295,
        341,
        550,
        286,
        727,
        445,
        360,
        50584
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05662883845242587,
      "compression_ratio": 1.7903225806451613,
      "no_speech_prob": 0.12304141372442245,
      "confidence": 0.8769585862755775
    },
    {
      "id": 93,
      "start": 354.96,
      "end": 359.76,
      "text": "another test here for javascript and then say if the language is javascript",
      "tokens": [
        50584,
        1071,
        1500,
        510,
        337,
        361,
        37331,
        5944,
        293,
        550,
        584,
        498,
        264,
        2856,
        307,
        361,
        37331,
        5944,
        50824
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05662883845242587,
      "compression_ratio": 1.7903225806451613,
      "no_speech_prob": 0.12304141372442245,
      "confidence": 0.8769585862755775
    },
    {
      "id": 94,
      "start": 359.76,
      "end": 363.36,
      "text": "then execute this code here and this basically gives us the same",
      "tokens": [
        50824,
        550,
        14483,
        341,
        3089,
        510,
        293,
        341,
        1936,
        2709,
        505,
        264,
        912,
        51004
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05662883845242587,
      "compression_ratio": 1.7903225806451613,
      "no_speech_prob": 0.12304141372442245,
      "confidence": 0.8769585862755775
    },
    {
      "id": 95,
      "start": 363.36,
      "end": 367.28,
      "text": "functionality as a switch case from another language. Okay so now I'm",
      "tokens": [
        51004,
        14980,
        382,
        257,
        3679,
        1389,
        490,
        1071,
        2856,
        13,
        1033,
        370,
        586,
        286,
        478,
        51200
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05662883845242587,
      "compression_ratio": 1.7903225806451613,
      "no_speech_prob": 0.12304141372442245,
      "confidence": 0.8769585862755775
    },
    {
      "id": 96,
      "start": 367.28,
      "end": 370.48,
      "text": "going to remove some code here so that we can take a look at",
      "tokens": [
        51200,
        516,
        281,
        4159,
        512,
        3089,
        510,
        370,
        300,
        321,
        393,
        747,
        257,
        574,
        412,
        51360
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05662883845242587,
      "compression_ratio": 1.7903225806451613,
      "no_speech_prob": 0.12304141372442245,
      "confidence": 0.8769585862755775
    },
    {
      "id": 97,
      "start": 370.48,
      "end": 374.8,
      "text": "another example. Now in addition to these comparisons that we have here",
      "tokens": [
        51360,
        1071,
        1365,
        13,
        823,
        294,
        4500,
        281,
        613,
        33157,
        300,
        321,
        362,
        510,
        51576
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05662883845242587,
      "compression_ratio": 1.7903225806451613,
      "no_speech_prob": 0.12304141372442245,
      "confidence": 0.8769585862755775
    },
    {
      "id": 98,
      "start": 374.8,
      "end": 378.0,
      "text": "we also have some boolean operations that we can use",
      "tokens": [
        51576,
        321,
        611,
        362,
        512,
        748,
        4812,
        282,
        7705,
        300,
        321,
        393,
        764,
        51736
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05662883845242587,
      "compression_ratio": 1.7903225806451613,
      "no_speech_prob": 0.12304141372442245,
      "confidence": 0.8769585862755775
    },
    {
      "id": 99,
      "start": 378.0,
      "end": 384.64,
      "text": "and these are and or and not. So for example let me create two",
      "tokens": [
        50364,
        293,
        613,
        366,
        293,
        420,
        293,
        406,
        13,
        407,
        337,
        1365,
        718,
        385,
        1884,
        732,
        50696
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05771946907043457,
      "compression_ratio": 1.9166666666666667,
      "no_speech_prob": 0.1180974468588829,
      "confidence": 0.8819025531411171
    },
    {
      "id": 100,
      "start": 384.64,
      "end": 387.68,
      "text": "variables here and I'll call one of these user and",
      "tokens": [
        50696,
        9102,
        510,
        293,
        286,
        603,
        818,
        472,
        295,
        613,
        4195,
        293,
        50848
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05771946907043457,
      "compression_ratio": 1.9166666666666667,
      "no_speech_prob": 0.1180974468588829,
      "confidence": 0.8819025531411171
    },
    {
      "id": 101,
      "start": 387.68,
      "end": 391.76,
      "text": "set this equal to a string of admin and then I'll",
      "tokens": [
        50848,
        992,
        341,
        2681,
        281,
        257,
        6798,
        295,
        24236,
        293,
        550,
        286,
        603,
        51052
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05771946907043457,
      "compression_ratio": 1.9166666666666667,
      "no_speech_prob": 0.1180974468588829,
      "confidence": 0.8819025531411171
    },
    {
      "id": 102,
      "start": 391.76,
      "end": 394.4,
      "text": "create a another variable here called logged in",
      "tokens": [
        51052,
        1884,
        257,
        1071,
        7006,
        510,
        1219,
        27231,
        294,
        51184
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05771946907043457,
      "compression_ratio": 1.9166666666666667,
      "no_speech_prob": 0.1180974468588829,
      "confidence": 0.8819025531411171
    },
    {
      "id": 103,
      "start": 394.4,
      "end": 397.84,
      "text": "and I'll set that equal to true. Now let's say that we only wanted to",
      "tokens": [
        51184,
        293,
        286,
        603,
        992,
        300,
        2681,
        281,
        2074,
        13,
        823,
        718,
        311,
        584,
        300,
        321,
        787,
        1415,
        281,
        51356
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05771946907043457,
      "compression_ratio": 1.9166666666666667,
      "no_speech_prob": 0.1180974468588829,
      "confidence": 0.8819025531411171
    },
    {
      "id": 104,
      "start": 397.84,
      "end": 401.84,
      "text": "execute some code if the user is equal to admin and",
      "tokens": [
        51356,
        14483,
        512,
        3089,
        498,
        264,
        4195,
        307,
        2681,
        281,
        24236,
        293,
        51556
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05771946907043457,
      "compression_ratio": 1.9166666666666667,
      "no_speech_prob": 0.1180974468588829,
      "confidence": 0.8819025531411171
    },
    {
      "id": 105,
      "start": 401.84,
      "end": 405.2,
      "text": "logged in is equal to true. Now to do this we can use the",
      "tokens": [
        51556,
        27231,
        294,
        307,
        2681,
        281,
        2074,
        13,
        823,
        281,
        360,
        341,
        321,
        393,
        764,
        264,
        51724
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05771946907043457,
      "compression_ratio": 1.9166666666666667,
      "no_speech_prob": 0.1180974468588829,
      "confidence": 0.8819025531411171
    },
    {
      "id": 106,
      "start": 405.2,
      "end": 412.0,
      "text": "and keyword so I could say if user equal equals admin and then we'll use",
      "tokens": [
        50364,
        293,
        20428,
        370,
        286,
        727,
        584,
        498,
        4195,
        2681,
        6915,
        24236,
        293,
        550,
        321,
        603,
        764,
        50704
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0824986748073412,
      "compression_ratio": 1.9553072625698324,
      "no_speech_prob": 0.03133018687367439,
      "confidence": 0.9686698131263256
    },
    {
      "id": 107,
      "start": 412.0,
      "end": 416.4,
      "text": "this and keyword and logged in and now we can",
      "tokens": [
        50704,
        341,
        293,
        20428,
        293,
        27231,
        294,
        293,
        586,
        321,
        393,
        50924
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0824986748073412,
      "compression_ratio": 1.9553072625698324,
      "no_speech_prob": 0.03133018687367439,
      "confidence": 0.9686698131263256
    },
    {
      "id": 108,
      "start": 416.4,
      "end": 420.15999999999997,
      "text": "write the code if this is true so I'll just print out a",
      "tokens": [
        50924,
        2464,
        264,
        3089,
        498,
        341,
        307,
        2074,
        370,
        286,
        603,
        445,
        4482,
        484,
        257,
        51112
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0824986748073412,
      "compression_ratio": 1.9553072625698324,
      "no_speech_prob": 0.03133018687367439,
      "confidence": 0.9686698131263256
    },
    {
      "id": 109,
      "start": 420.15999999999997,
      "end": 425.03999999999996,
      "text": "string that says admin page and now we can put in an else",
      "tokens": [
        51112,
        6798,
        300,
        1619,
        24236,
        3028,
        293,
        586,
        321,
        393,
        829,
        294,
        364,
        1646,
        51356
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0824986748073412,
      "compression_ratio": 1.9553072625698324,
      "no_speech_prob": 0.03133018687367439,
      "confidence": 0.9686698131263256
    },
    {
      "id": 110,
      "start": 425.03999999999996,
      "end": 428.56,
      "text": "block and then for the else block I'll just say if neither of these",
      "tokens": [
        51356,
        3461,
        293,
        550,
        337,
        264,
        1646,
        3461,
        286,
        603,
        445,
        584,
        498,
        9662,
        295,
        613,
        51532
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0824986748073412,
      "compression_ratio": 1.9553072625698324,
      "no_speech_prob": 0.03133018687367439,
      "confidence": 0.9686698131263256
    },
    {
      "id": 111,
      "start": 428.56,
      "end": 432.88,
      "text": "are true then print out the string that just says",
      "tokens": [
        51532,
        366,
        2074,
        550,
        4482,
        484,
        264,
        6798,
        300,
        445,
        1619,
        51748
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0824986748073412,
      "compression_ratio": 1.9553072625698324,
      "no_speech_prob": 0.03133018687367439,
      "confidence": 0.9686698131263256
    },
    {
      "id": 112,
      "start": 432.88,
      "end": 437.28,
      "text": "bad creds for credentials and let me bring this down just a little bit",
      "tokens": [
        50364,
        1578,
        3864,
        82,
        337,
        27404,
        293,
        718,
        385,
        1565,
        341,
        760,
        445,
        257,
        707,
        857,
        50584
      ],
      "temperature": 0.0,
      "avg_logprob": -0.050426964211252936,
      "compression_ratio": 1.8040816326530613,
      "no_speech_prob": 0.1078154593706131,
      "confidence": 0.8921845406293869
    },
    {
      "id": 113,
      "start": 437.28,
      "end": 441.44,
      "text": "here and just to give us a little bit of extra room I'm actually going to delete",
      "tokens": [
        50584,
        510,
        293,
        445,
        281,
        976,
        505,
        257,
        707,
        857,
        295,
        2857,
        1808,
        286,
        478,
        767,
        516,
        281,
        12097,
        50792
      ],
      "temperature": 0.0,
      "avg_logprob": -0.050426964211252936,
      "compression_ratio": 1.8040816326530613,
      "no_speech_prob": 0.1078154593706131,
      "confidence": 0.8921845406293869
    },
    {
      "id": 114,
      "start": 441.44,
      "end": 445.2,
      "text": "these comparison comments up here that we have as a reference but I will have a",
      "tokens": [
        50792,
        613,
        9660,
        3053,
        493,
        510,
        300,
        321,
        362,
        382,
        257,
        6408,
        457,
        286,
        486,
        362,
        257,
        50980
      ],
      "temperature": 0.0,
      "avg_logprob": -0.050426964211252936,
      "compression_ratio": 1.8040816326530613,
      "no_speech_prob": 0.1078154593706131,
      "confidence": 0.8921845406293869
    },
    {
      "id": 115,
      "start": 445.2,
      "end": 448.48,
      "text": "link to these to the github page so that you can",
      "tokens": [
        50980,
        2113,
        281,
        613,
        281,
        264,
        290,
        355,
        836,
        3028,
        370,
        300,
        291,
        393,
        51144
      ],
      "temperature": 0.0,
      "avg_logprob": -0.050426964211252936,
      "compression_ratio": 1.8040816326530613,
      "no_speech_prob": 0.1078154593706131,
      "confidence": 0.8921845406293869
    },
    {
      "id": 116,
      "start": 448.48,
      "end": 451.52,
      "text": "download those if you want to have those as a reference.",
      "tokens": [
        51144,
        5484,
        729,
        498,
        291,
        528,
        281,
        362,
        729,
        382,
        257,
        6408,
        13,
        51296
      ],
      "temperature": 0.0,
      "avg_logprob": -0.050426964211252936,
      "compression_ratio": 1.8040816326530613,
      "no_speech_prob": 0.1078154593706131,
      "confidence": 0.8921845406293869
    },
    {
      "id": 117,
      "start": 451.52,
      "end": 455.52,
      "text": "Okay so now if we run the code that we currently have",
      "tokens": [
        51296,
        1033,
        370,
        586,
        498,
        321,
        1190,
        264,
        3089,
        300,
        321,
        4362,
        362,
        51496
      ],
      "temperature": 0.0,
      "avg_logprob": -0.050426964211252936,
      "compression_ratio": 1.8040816326530613,
      "no_speech_prob": 0.1078154593706131,
      "confidence": 0.8921845406293869
    },
    {
      "id": 118,
      "start": 455.52,
      "end": 458.8,
      "text": "then we can see that it printed out our admin page",
      "tokens": [
        51496,
        550,
        321,
        393,
        536,
        300,
        309,
        13567,
        484,
        527,
        24236,
        3028,
        51660
      ],
      "temperature": 0.0,
      "avg_logprob": -0.050426964211252936,
      "compression_ratio": 1.8040816326530613,
      "no_speech_prob": 0.1078154593706131,
      "confidence": 0.8921845406293869
    },
    {
      "id": 119,
      "start": 458.8,
      "end": 462.64,
      "text": "because both of those evaluated to true our user",
      "tokens": [
        50364,
        570,
        1293,
        295,
        729,
        25509,
        281,
        2074,
        527,
        4195,
        50556
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04658268909065091,
      "compression_ratio": 2.0358974358974358,
      "no_speech_prob": 0.2434302568435669,
      "confidence": 0.7565697431564331
    },
    {
      "id": 120,
      "start": 462.64,
      "end": 466.32,
      "text": "is equal to admin and our logged in is equal to true",
      "tokens": [
        50556,
        307,
        2681,
        281,
        24236,
        293,
        527,
        27231,
        294,
        307,
        2681,
        281,
        2074,
        50740
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04658268909065091,
      "compression_ratio": 2.0358974358974358,
      "no_speech_prob": 0.2434302568435669,
      "confidence": 0.7565697431564331
    },
    {
      "id": 121,
      "start": 466.32,
      "end": 469.84000000000003,
      "text": "but if I changed our logged in variable to false",
      "tokens": [
        50740,
        457,
        498,
        286,
        3105,
        527,
        27231,
        294,
        7006,
        281,
        7908,
        50916
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04658268909065091,
      "compression_ratio": 2.0358974358974358,
      "no_speech_prob": 0.2434302568435669,
      "confidence": 0.7565697431564331
    },
    {
      "id": 122,
      "start": 469.84000000000003,
      "end": 473.2,
      "text": "and rerun this and we can see that it executes our",
      "tokens": [
        50916,
        293,
        43819,
        409,
        341,
        293,
        321,
        393,
        536,
        300,
        309,
        4454,
        1819,
        527,
        51084
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04658268909065091,
      "compression_ratio": 2.0358974358974358,
      "no_speech_prob": 0.2434302568435669,
      "confidence": 0.7565697431564331
    },
    {
      "id": 123,
      "start": 473.2,
      "end": 477.92,
      "text": "bad credentials statement because both of these didn't evaluate to true",
      "tokens": [
        51084,
        1578,
        27404,
        5629,
        570,
        1293,
        295,
        613,
        994,
        380,
        13059,
        281,
        2074,
        51320
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04658268909065091,
      "compression_ratio": 2.0358974358974358,
      "no_speech_prob": 0.2434302568435669,
      "confidence": 0.7565697431564331
    },
    {
      "id": 124,
      "start": 477.92,
      "end": 481.68,
      "text": "so this user equals admin evaluated to true",
      "tokens": [
        51320,
        370,
        341,
        4195,
        6915,
        24236,
        25509,
        281,
        2074,
        51508
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04658268909065091,
      "compression_ratio": 2.0358974358974358,
      "no_speech_prob": 0.2434302568435669,
      "confidence": 0.7565697431564331
    },
    {
      "id": 125,
      "start": 481.68,
      "end": 486.24,
      "text": "but logged in was equal to false so and make sure that both of these have to be",
      "tokens": [
        51508,
        457,
        27231,
        294,
        390,
        2681,
        281,
        7908,
        370,
        293,
        652,
        988,
        300,
        1293,
        295,
        613,
        362,
        281,
        312,
        51736
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04658268909065091,
      "compression_ratio": 2.0358974358974358,
      "no_speech_prob": 0.2434302568435669,
      "confidence": 0.7565697431564331
    },
    {
      "id": 126,
      "start": 486.24,
      "end": 488.88,
      "text": "true now if we only care if one of these",
      "tokens": [
        50364,
        2074,
        586,
        498,
        321,
        787,
        1127,
        498,
        472,
        295,
        613,
        50496
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06588846445083618,
      "compression_ratio": 1.8387096774193548,
      "no_speech_prob": 0.05223148316144943,
      "confidence": 0.9477685168385506
    },
    {
      "id": 127,
      "start": 488.88,
      "end": 492.64,
      "text": "evaluate to true then we can use the or keyword so I",
      "tokens": [
        50496,
        13059,
        281,
        2074,
        550,
        321,
        393,
        764,
        264,
        420,
        20428,
        370,
        286,
        50684
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06588846445083618,
      "compression_ratio": 1.8387096774193548,
      "no_speech_prob": 0.05223148316144943,
      "confidence": 0.9477685168385506
    },
    {
      "id": 128,
      "start": 492.64,
      "end": 497.44,
      "text": "could change this and to an or and now if I run this then you",
      "tokens": [
        50684,
        727,
        1319,
        341,
        293,
        281,
        364,
        420,
        293,
        586,
        498,
        286,
        1190,
        341,
        550,
        291,
        50924
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06588846445083618,
      "compression_ratio": 1.8387096774193548,
      "no_speech_prob": 0.05223148316144943,
      "confidence": 0.9477685168385506
    },
    {
      "id": 129,
      "start": 497.44,
      "end": 500.08,
      "text": "can see that it printed out our admin page statement",
      "tokens": [
        50924,
        393,
        536,
        300,
        309,
        13567,
        484,
        527,
        24236,
        3028,
        5629,
        51056
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06588846445083618,
      "compression_ratio": 1.8387096774193548,
      "no_speech_prob": 0.05223148316144943,
      "confidence": 0.9477685168385506
    },
    {
      "id": 130,
      "start": 500.08,
      "end": 504.16,
      "text": "because that evaluated to true because only one or the other",
      "tokens": [
        51056,
        570,
        300,
        25509,
        281,
        2074,
        570,
        787,
        472,
        420,
        264,
        661,
        51260
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06588846445083618,
      "compression_ratio": 1.8387096774193548,
      "no_speech_prob": 0.05223148316144943,
      "confidence": 0.9477685168385506
    },
    {
      "id": 131,
      "start": 504.16,
      "end": 509.28000000000003,
      "text": "needed to be true and our user was equal to admin so it didn't matter",
      "tokens": [
        51260,
        2978,
        281,
        312,
        2074,
        293,
        527,
        4195,
        390,
        2681,
        281,
        24236,
        370,
        309,
        994,
        380,
        1871,
        51516
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06588846445083618,
      "compression_ratio": 1.8387096774193548,
      "no_speech_prob": 0.05223148316144943,
      "confidence": 0.9477685168385506
    },
    {
      "id": 132,
      "start": 509.28000000000003,
      "end": 512.96,
      "text": "if the login was false or not because it only had to be one",
      "tokens": [
        51516,
        498,
        264,
        24276,
        390,
        7908,
        420,
        406,
        570,
        309,
        787,
        632,
        281,
        312,
        472,
        51700
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06588846445083618,
      "compression_ratio": 1.8387096774193548,
      "no_speech_prob": 0.05223148316144943,
      "confidence": 0.9477685168385506
    },
    {
      "id": 133,
      "start": 512.96,
      "end": 518.72,
      "text": "or the other now this not operation is just used to switch a bullion so",
      "tokens": [
        50364,
        420,
        264,
        661,
        586,
        341,
        406,
        6916,
        307,
        445,
        1143,
        281,
        3679,
        257,
        4693,
        313,
        370,
        50652
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06710403139998274,
      "compression_ratio": 1.7087912087912087,
      "no_speech_prob": 0.28194400668144226,
      "confidence": 0.7180559933185577
    },
    {
      "id": 134,
      "start": 518.72,
      "end": 522.1600000000001,
      "text": "it'll change a true to a false and a false to a true",
      "tokens": [
        50652,
        309,
        603,
        1319,
        257,
        2074,
        281,
        257,
        7908,
        293,
        257,
        7908,
        281,
        257,
        2074,
        50824
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06710403139998274,
      "compression_ratio": 1.7087912087912087,
      "no_speech_prob": 0.28194400668144226,
      "confidence": 0.7180559933185577
    },
    {
      "id": 135,
      "start": 522.1600000000001,
      "end": 529.12,
      "text": "so for example if we were to say if not logged in then we will",
      "tokens": [
        50824,
        370,
        337,
        1365,
        498,
        321,
        645,
        281,
        584,
        498,
        406,
        27231,
        294,
        550,
        321,
        486,
        51172
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06710403139998274,
      "compression_ratio": 1.7087912087912087,
      "no_speech_prob": 0.28194400668144226,
      "confidence": 0.7180559933185577
    },
    {
      "id": 136,
      "start": 529.12,
      "end": 536.08,
      "text": "print a string here that just says please log in and else print",
      "tokens": [
        51172,
        4482,
        257,
        6798,
        510,
        300,
        445,
        1619,
        1767,
        3565,
        294,
        293,
        1646,
        4482,
        51520
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06710403139998274,
      "compression_ratio": 1.7087912087912087,
      "no_speech_prob": 0.28194400668144226,
      "confidence": 0.7180559933185577
    },
    {
      "id": 137,
      "start": 536.08,
      "end": 539.52,
      "text": "welcome so we can see that currently our logged in value is",
      "tokens": [
        51520,
        2928,
        370,
        321,
        393,
        536,
        300,
        4362,
        527,
        27231,
        294,
        2158,
        307,
        51692
      ],
      "temperature": 0.0,
      "avg_logprob": -0.06710403139998274,
      "compression_ratio": 1.7087912087912087,
      "no_speech_prob": 0.28194400668144226,
      "confidence": 0.7180559933185577
    },
    {
      "id": 138,
      "start": 539.52,
      "end": 545.76,
      "text": "equal to false now when we say not logged in then it'll evaluate to true",
      "tokens": [
        50364,
        2681,
        281,
        7908,
        586,
        562,
        321,
        584,
        406,
        27231,
        294,
        550,
        309,
        603,
        13059,
        281,
        2074,
        50676
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07708844134682104,
      "compression_ratio": 1.8564593301435406,
      "no_speech_prob": 0.06793556362390518,
      "confidence": 0.9320644363760948
    },
    {
      "id": 139,
      "start": 545.76,
      "end": 549.04,
      "text": "because this not just switches that false to a true",
      "tokens": [
        50676,
        570,
        341,
        406,
        445,
        19458,
        300,
        7908,
        281,
        257,
        2074,
        50840
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07708844134682104,
      "compression_ratio": 1.8564593301435406,
      "no_speech_prob": 0.06793556362390518,
      "confidence": 0.9320644363760948
    },
    {
      "id": 140,
      "start": 549.04,
      "end": 552.72,
      "text": "now I know that that can sound a little confusing but basically you can just",
      "tokens": [
        50840,
        586,
        286,
        458,
        300,
        300,
        393,
        1626,
        257,
        707,
        13181,
        457,
        1936,
        291,
        393,
        445,
        51024
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07708844134682104,
      "compression_ratio": 1.8564593301435406,
      "no_speech_prob": 0.06793556362390518,
      "confidence": 0.9320644363760948
    },
    {
      "id": 141,
      "start": 552.72,
      "end": 557.04,
      "text": "think of it as saying not false if not false which would",
      "tokens": [
        51024,
        519,
        295,
        309,
        382,
        1566,
        406,
        7908,
        498,
        406,
        7908,
        597,
        576,
        51240
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07708844134682104,
      "compression_ratio": 1.8564593301435406,
      "no_speech_prob": 0.06793556362390518,
      "confidence": 0.9320644363760948
    },
    {
      "id": 142,
      "start": 557.04,
      "end": 560.8,
      "text": "evaluate to true so if we run this then it prints out",
      "tokens": [
        51240,
        13059,
        281,
        2074,
        370,
        498,
        321,
        1190,
        341,
        550,
        309,
        22305,
        484,
        51428
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07708844134682104,
      "compression_ratio": 1.8564593301435406,
      "no_speech_prob": 0.06793556362390518,
      "confidence": 0.9320644363760948
    },
    {
      "id": 143,
      "start": 560.8,
      "end": 566.3199999999999,
      "text": "please log in because not logged in evaluated to true so it ran what was in",
      "tokens": [
        51428,
        1767,
        3565,
        294,
        570,
        406,
        27231,
        294,
        25509,
        281,
        2074,
        370,
        309,
        5872,
        437,
        390,
        294,
        51704
      ],
      "temperature": 0.0,
      "avg_logprob": -0.07708844134682104,
      "compression_ratio": 1.8564593301435406,
      "no_speech_prob": 0.06793556362390518,
      "confidence": 0.9320644363760948
    },
    {
      "id": 144,
      "start": 566.4000000000001,
      "end": 570.0,
      "text": "our if statement so when I had the conditionals pulled up here as a",
      "tokens": [
        50368,
        527,
        498,
        5629,
        370,
        562,
        286,
        632,
        264,
        4188,
        1124,
        7373,
        493,
        510,
        382,
        257,
        50548
      ],
      "temperature": 0.0,
      "avg_logprob": -0.062107328935102984,
      "compression_ratio": 1.874493927125506,
      "no_speech_prob": 0.5413039326667786,
      "confidence": 0.45869606733322144
    },
    {
      "id": 145,
      "start": 570.0,
      "end": 572.5600000000001,
      "text": "reference before so now I'm in my snippets here",
      "tokens": [
        50548,
        6408,
        949,
        370,
        586,
        286,
        478,
        294,
        452,
        35623,
        1385,
        510,
        50676
      ],
      "temperature": 0.0,
      "avg_logprob": -0.062107328935102984,
      "compression_ratio": 1.874493927125506,
      "no_speech_prob": 0.5413039326667786,
      "confidence": 0.45869606733322144
    },
    {
      "id": 146,
      "start": 572.5600000000001,
      "end": 576.1600000000001,
      "text": "we remember that we had this object identity with this",
      "tokens": [
        50676,
        321,
        1604,
        300,
        321,
        632,
        341,
        2657,
        6575,
        365,
        341,
        50856
      ],
      "temperature": 0.0,
      "avg_logprob": -0.062107328935102984,
      "compression_ratio": 1.874493927125506,
      "no_speech_prob": 0.5413039326667786,
      "confidence": 0.45869606733322144
    },
    {
      "id": 147,
      "start": 576.1600000000001,
      "end": 579.2,
      "text": "is keyword and I said that we'd look at the difference between",
      "tokens": [
        50856,
        307,
        20428,
        293,
        286,
        848,
        300,
        321,
        1116,
        574,
        412,
        264,
        2649,
        1296,
        51008
      ],
      "temperature": 0.0,
      "avg_logprob": -0.062107328935102984,
      "compression_ratio": 1.874493927125506,
      "no_speech_prob": 0.5413039326667786,
      "confidence": 0.45869606733322144
    },
    {
      "id": 148,
      "start": 579.2,
      "end": 582.48,
      "text": "that and the double equals which tests for equality",
      "tokens": [
        51008,
        300,
        293,
        264,
        3834,
        6915,
        597,
        6921,
        337,
        14949,
        51172
      ],
      "temperature": 0.0,
      "avg_logprob": -0.062107328935102984,
      "compression_ratio": 1.874493927125506,
      "no_speech_prob": 0.5413039326667786,
      "confidence": 0.45869606733322144
    },
    {
      "id": 149,
      "start": 582.48,
      "end": 586.08,
      "text": "now like I said before that object identity",
      "tokens": [
        51172,
        586,
        411,
        286,
        848,
        949,
        300,
        2657,
        6575,
        51352
      ],
      "temperature": 0.0,
      "avg_logprob": -0.062107328935102984,
      "compression_ratio": 1.874493927125506,
      "no_speech_prob": 0.5413039326667786,
      "confidence": 0.45869606733322144
    },
    {
      "id": 150,
      "start": 586.08,
      "end": 590.72,
      "text": "tests if two objects have the same id which basically means if they're the",
      "tokens": [
        51352,
        6921,
        498,
        732,
        6565,
        362,
        264,
        912,
        4496,
        597,
        1936,
        1355,
        498,
        436,
        434,
        264,
        51584
      ],
      "temperature": 0.0,
      "avg_logprob": -0.062107328935102984,
      "compression_ratio": 1.874493927125506,
      "no_speech_prob": 0.5413039326667786,
      "confidence": 0.45869606733322144
    },
    {
      "id": 151,
      "start": 590.72,
      "end": 594.6400000000001,
      "text": "same object in memory so two objects can actually be equal",
      "tokens": [
        51584,
        912,
        2657,
        294,
        4675,
        370,
        732,
        6565,
        393,
        767,
        312,
        2681,
        51780
      ],
      "temperature": 0.0,
      "avg_logprob": -0.062107328935102984,
      "compression_ratio": 1.874493927125506,
      "no_speech_prob": 0.5413039326667786,
      "confidence": 0.45869606733322144
    },
    {
      "id": 152,
      "start": 594.64,
      "end": 598.56,
      "text": "and not be the same object in memory so for example",
      "tokens": [
        50364,
        293,
        406,
        312,
        264,
        912,
        2657,
        294,
        4675,
        370,
        337,
        1365,
        50560
      ],
      "temperature": 0.0,
      "avg_logprob": -0.035126141473358755,
      "compression_ratio": 1.8428571428571427,
      "no_speech_prob": 0.037063006311655045,
      "confidence": 0.962936993688345
    },
    {
      "id": 153,
      "start": 598.56,
      "end": 603.1999999999999,
      "text": "let me create two different lists here so I'll just call one list equal to a",
      "tokens": [
        50560,
        718,
        385,
        1884,
        732,
        819,
        14511,
        510,
        370,
        286,
        603,
        445,
        818,
        472,
        1329,
        2681,
        281,
        257,
        50792
      ],
      "temperature": 0.0,
      "avg_logprob": -0.035126141473358755,
      "compression_ratio": 1.8428571428571427,
      "no_speech_prob": 0.037063006311655045,
      "confidence": 0.962936993688345
    },
    {
      "id": 154,
      "start": 603.1999999999999,
      "end": 606.8,
      "text": "and I'll put in the values of one two three another list",
      "tokens": [
        50792,
        293,
        286,
        603,
        829,
        294,
        264,
        4190,
        295,
        472,
        732,
        1045,
        1071,
        1329,
        50972
      ],
      "temperature": 0.0,
      "avg_logprob": -0.035126141473358755,
      "compression_ratio": 1.8428571428571427,
      "no_speech_prob": 0.037063006311655045,
      "confidence": 0.962936993688345
    },
    {
      "id": 155,
      "start": 606.8,
      "end": 610.0,
      "text": "equal to b and put in the values one two three",
      "tokens": [
        50972,
        2681,
        281,
        272,
        293,
        829,
        294,
        264,
        4190,
        472,
        732,
        1045,
        51132
      ],
      "temperature": 0.0,
      "avg_logprob": -0.035126141473358755,
      "compression_ratio": 1.8428571428571427,
      "no_speech_prob": 0.037063006311655045,
      "confidence": 0.962936993688345
    },
    {
      "id": 156,
      "start": 610.0,
      "end": 614.16,
      "text": "and now I will print out a double equals b",
      "tokens": [
        51132,
        293,
        586,
        286,
        486,
        4482,
        484,
        257,
        3834,
        6915,
        272,
        51340
      ],
      "temperature": 0.0,
      "avg_logprob": -0.035126141473358755,
      "compression_ratio": 1.8428571428571427,
      "no_speech_prob": 0.037063006311655045,
      "confidence": 0.962936993688345
    },
    {
      "id": 157,
      "start": 614.16,
      "end": 617.68,
      "text": "so this should evaluate to true because these two lists",
      "tokens": [
        51340,
        370,
        341,
        820,
        13059,
        281,
        2074,
        570,
        613,
        732,
        14511,
        51516
      ],
      "temperature": 0.0,
      "avg_logprob": -0.035126141473358755,
      "compression_ratio": 1.8428571428571427,
      "no_speech_prob": 0.037063006311655045,
      "confidence": 0.962936993688345
    },
    {
      "id": 158,
      "start": 617.68,
      "end": 621.04,
      "text": "are equal so if we run this then we can see that we got",
      "tokens": [
        51516,
        366,
        2681,
        370,
        498,
        321,
        1190,
        341,
        550,
        321,
        393,
        536,
        300,
        321,
        658,
        51684
      ],
      "temperature": 0.0,
      "avg_logprob": -0.035126141473358755,
      "compression_ratio": 1.8428571428571427,
      "no_speech_prob": 0.037063006311655045,
      "confidence": 0.962936993688345
    },
    {
      "id": 159,
      "start": 621.04,
      "end": 623.52,
      "text": "true which is what we would expect because",
      "tokens": [
        50364,
        2074,
        597,
        307,
        437,
        321,
        576,
        2066,
        570,
        50488
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08205969961065995,
      "compression_ratio": 1.7302325581395348,
      "no_speech_prob": 0.13069097697734833,
      "confidence": 0.8693090230226517
    },
    {
      "id": 160,
      "start": 623.52,
      "end": 630.4,
      "text": "a and b are equal but instead if we say a is b and then we run this",
      "tokens": [
        50488,
        257,
        293,
        272,
        366,
        2681,
        457,
        2602,
        498,
        321,
        584,
        257,
        307,
        272,
        293,
        550,
        321,
        1190,
        341,
        50832
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08205969961065995,
      "compression_ratio": 1.7302325581395348,
      "no_speech_prob": 0.13069097697734833,
      "confidence": 0.8693090230226517
    },
    {
      "id": 161,
      "start": 630.4,
      "end": 634.48,
      "text": "then that returns false now the reason is because these are two different",
      "tokens": [
        50832,
        550,
        300,
        11247,
        7908,
        586,
        264,
        1778,
        307,
        570,
        613,
        366,
        732,
        819,
        51036
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08205969961065995,
      "compression_ratio": 1.7302325581395348,
      "no_speech_prob": 0.13069097697734833,
      "confidence": 0.8693090230226517
    },
    {
      "id": 162,
      "start": 634.48,
      "end": 637.12,
      "text": "objects in memory and we can print out these",
      "tokens": [
        51036,
        6565,
        294,
        4675,
        293,
        321,
        393,
        4482,
        484,
        613,
        51168
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08205969961065995,
      "compression_ratio": 1.7302325581395348,
      "no_speech_prob": 0.13069097697734833,
      "confidence": 0.8693090230226517
    },
    {
      "id": 163,
      "start": 637.12,
      "end": 642.56,
      "text": "locations with this built-in id function so right above printing that",
      "tokens": [
        51168,
        9253,
        365,
        341,
        3094,
        12,
        259,
        4496,
        2445,
        370,
        558,
        3673,
        14699,
        300,
        51440
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08205969961065995,
      "compression_ratio": 1.7302325581395348,
      "no_speech_prob": 0.13069097697734833,
      "confidence": 0.8693090230226517
    },
    {
      "id": 164,
      "start": 642.56,
      "end": 649.76,
      "text": "a is b I'm also going to print out the id of a and I will also print out",
      "tokens": [
        51440,
        257,
        307,
        272,
        286,
        478,
        611,
        516,
        281,
        4482,
        484,
        264,
        4496,
        295,
        257,
        293,
        286,
        486,
        611,
        4482,
        484,
        51800
      ],
      "temperature": 0.0,
      "avg_logprob": -0.08205969961065995,
      "compression_ratio": 1.7302325581395348,
      "no_speech_prob": 0.13069097697734833,
      "confidence": 0.8693090230226517
    },
    {
      "id": 165,
      "start": 649.76,
      "end": 653.12,
      "text": "the id of b so I'll save that and run it",
      "tokens": [
        50364,
        264,
        4496,
        295,
        272,
        370,
        286,
        603,
        3155,
        300,
        293,
        1190,
        309,
        50532
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05775924699496379,
      "compression_ratio": 1.9345794392523366,
      "no_speech_prob": 0.020589493215084076,
      "confidence": 0.9794105067849159
    },
    {
      "id": 166,
      "start": 653.12,
      "end": 656.48,
      "text": "and we can see that these ids are different so really",
      "tokens": [
        50532,
        293,
        321,
        393,
        536,
        300,
        613,
        220,
        3742,
        366,
        819,
        370,
        534,
        50700
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05775924699496379,
      "compression_ratio": 1.9345794392523366,
      "no_speech_prob": 0.020589493215084076,
      "confidence": 0.9794105067849159
    },
    {
      "id": 167,
      "start": 656.48,
      "end": 661.2,
      "text": "this is comparison is really checking whether these ids are the same",
      "tokens": [
        50700,
        341,
        307,
        9660,
        307,
        534,
        8568,
        1968,
        613,
        220,
        3742,
        366,
        264,
        912,
        50936
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05775924699496379,
      "compression_ratio": 1.9345794392523366,
      "no_speech_prob": 0.020589493215084076,
      "confidence": 0.9794105067849159
    },
    {
      "id": 168,
      "start": 661.2,
      "end": 665.28,
      "text": "so up here instead of creating a new list if I just said",
      "tokens": [
        50936,
        370,
        493,
        510,
        2602,
        295,
        4084,
        257,
        777,
        1329,
        498,
        286,
        445,
        848,
        51140
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05775924699496379,
      "compression_ratio": 1.9345794392523366,
      "no_speech_prob": 0.020589493215084076,
      "confidence": 0.9794105067849159
    },
    {
      "id": 169,
      "start": 665.28,
      "end": 671.76,
      "text": "b equals a and save that and run it now we can see that the id of a and id of",
      "tokens": [
        51140,
        272,
        6915,
        257,
        293,
        3155,
        300,
        293,
        1190,
        309,
        586,
        321,
        393,
        536,
        300,
        264,
        4496,
        295,
        257,
        293,
        4496,
        295,
        51464
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05775924699496379,
      "compression_ratio": 1.9345794392523366,
      "no_speech_prob": 0.020589493215084076,
      "confidence": 0.9794105067849159
    },
    {
      "id": 170,
      "start": 671.76,
      "end": 675.52,
      "text": "b are the same and then when we print a is b",
      "tokens": [
        51464,
        272,
        366,
        264,
        912,
        293,
        550,
        562,
        321,
        4482,
        257,
        307,
        272,
        51652
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05775924699496379,
      "compression_ratio": 1.9345794392523366,
      "no_speech_prob": 0.020589493215084076,
      "confidence": 0.9794105067849159
    },
    {
      "id": 171,
      "start": 675.52,
      "end": 679.52,
      "text": "that evaluates to true because now these are the same object in memory",
      "tokens": [
        51652,
        300,
        6133,
        1024,
        281,
        2074,
        570,
        586,
        613,
        366,
        264,
        912,
        2657,
        294,
        4675,
        51852
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05775924699496379,
      "compression_ratio": 1.9345794392523366,
      "no_speech_prob": 0.020589493215084076,
      "confidence": 0.9794105067849159
    },
    {
      "id": 172,
      "start": 679.52,
      "end": 683.68,
      "text": "and if I check equality then they're also equal",
      "tokens": [
        50364,
        293,
        498,
        286,
        1520,
        14949,
        550,
        436,
        434,
        611,
        2681,
        50572
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04387892498059219,
      "compression_ratio": 1.7897435897435898,
      "no_speech_prob": 4.029407136840746e-05,
      "confidence": 0.9999597059286316
    },
    {
      "id": 173,
      "start": 683.68,
      "end": 687.04,
      "text": "so that's basically the difference there behind the scenes",
      "tokens": [
        50572,
        370,
        300,
        311,
        1936,
        264,
        2649,
        456,
        2261,
        264,
        8026,
        50740
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04387892498059219,
      "compression_ratio": 1.7897435897435898,
      "no_speech_prob": 4.029407136840746e-05,
      "confidence": 0.9999597059286316
    },
    {
      "id": 174,
      "start": 687.04,
      "end": 691.12,
      "text": "the is comparison if you say a is b it's really the same",
      "tokens": [
        50740,
        264,
        307,
        9660,
        498,
        291,
        584,
        257,
        307,
        272,
        309,
        311,
        534,
        264,
        912,
        50944
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04387892498059219,
      "compression_ratio": 1.7897435897435898,
      "no_speech_prob": 4.029407136840746e-05,
      "confidence": 0.9999597059286316
    },
    {
      "id": 175,
      "start": 691.12,
      "end": 698.96,
      "text": "as saying id of a equals equals the id of b so if I run that",
      "tokens": [
        50944,
        382,
        1566,
        4496,
        295,
        257,
        6915,
        6915,
        264,
        4496,
        295,
        272,
        370,
        498,
        286,
        1190,
        300,
        51336
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04387892498059219,
      "compression_ratio": 1.7897435897435898,
      "no_speech_prob": 4.029407136840746e-05,
      "confidence": 0.9999597059286316
    },
    {
      "id": 176,
      "start": 698.96,
      "end": 702.8,
      "text": "that's equal to true that's basically what the is operator does",
      "tokens": [
        51336,
        300,
        311,
        2681,
        281,
        2074,
        300,
        311,
        1936,
        437,
        264,
        307,
        12973,
        775,
        51528
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04387892498059219,
      "compression_ratio": 1.7897435897435898,
      "no_speech_prob": 4.029407136840746e-05,
      "confidence": 0.9999597059286316
    },
    {
      "id": 177,
      "start": 702.8,
      "end": 706.72,
      "text": "okay so basically now all the conditionals that we looked at",
      "tokens": [
        51528,
        1392,
        370,
        1936,
        586,
        439,
        264,
        4188,
        1124,
        300,
        321,
        2956,
        412,
        51724
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04387892498059219,
      "compression_ratio": 1.7897435897435898,
      "no_speech_prob": 4.029407136840746e-05,
      "confidence": 0.9999597059286316
    },
    {
      "id": 178,
      "start": 706.72,
      "end": 711.2,
      "text": "completely depend on what python evaluates to true or false",
      "tokens": [
        50364,
        2584,
        5672,
        322,
        437,
        38797,
        6133,
        1024,
        281,
        2074,
        420,
        7908,
        50588
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04277890336279776,
      "compression_ratio": 1.9904306220095693,
      "no_speech_prob": 0.19661305844783783,
      "confidence": 0.8033869415521622
    },
    {
      "id": 179,
      "start": 711.2,
      "end": 715.0400000000001,
      "text": "so let's see what all python evaluates to true or false",
      "tokens": [
        50588,
        370,
        718,
        311,
        536,
        437,
        439,
        38797,
        6133,
        1024,
        281,
        2074,
        420,
        7908,
        50780
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04277890336279776,
      "compression_ratio": 1.9904306220095693,
      "no_speech_prob": 0.19661305844783783,
      "confidence": 0.8033869415521622
    },
    {
      "id": 180,
      "start": 715.0400000000001,
      "end": 718.1600000000001,
      "text": "and there are a few things that may be unexpected to us",
      "tokens": [
        50780,
        293,
        456,
        366,
        257,
        1326,
        721,
        300,
        815,
        312,
        13106,
        281,
        505,
        50936
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04277890336279776,
      "compression_ratio": 1.9904306220095693,
      "no_speech_prob": 0.19661305844783783,
      "confidence": 0.8033869415521622
    },
    {
      "id": 181,
      "start": 718.1600000000001,
      "end": 722.1600000000001,
      "text": "so I have a couple of things pulled up here in my snippets",
      "tokens": [
        50936,
        370,
        286,
        362,
        257,
        1916,
        295,
        721,
        7373,
        493,
        510,
        294,
        452,
        35623,
        1385,
        51136
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04277890336279776,
      "compression_ratio": 1.9904306220095693,
      "no_speech_prob": 0.19661305844783783,
      "confidence": 0.8033869415521622
    },
    {
      "id": 182,
      "start": 722.1600000000001,
      "end": 728.96,
      "text": "and let me grab these really fast so to determine what python evaluates to",
      "tokens": [
        51136,
        293,
        718,
        385,
        4444,
        613,
        534,
        2370,
        370,
        281,
        6997,
        437,
        38797,
        6133,
        1024,
        281,
        51476
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04277890336279776,
      "compression_ratio": 1.9904306220095693,
      "no_speech_prob": 0.19661305844783783,
      "confidence": 0.8033869415521622
    },
    {
      "id": 183,
      "start": 728.96,
      "end": 731.84,
      "text": "true and false it's easier to show everything that",
      "tokens": [
        51476,
        2074,
        293,
        7908,
        309,
        311,
        3571,
        281,
        855,
        1203,
        300,
        51620
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04277890336279776,
      "compression_ratio": 1.9904306220095693,
      "no_speech_prob": 0.19661305844783783,
      "confidence": 0.8033869415521622
    },
    {
      "id": 184,
      "start": 731.84,
      "end": 735.84,
      "text": "evaluates to false and then everything else will by default",
      "tokens": [
        51620,
        6133,
        1024,
        281,
        7908,
        293,
        550,
        1203,
        1646,
        486,
        538,
        7576,
        51820
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04277890336279776,
      "compression_ratio": 1.9904306220095693,
      "no_speech_prob": 0.19661305844783783,
      "confidence": 0.8033869415521622
    },
    {
      "id": 185,
      "start": 735.84,
      "end": 740.08,
      "text": "evaluate to true and we have a quick if else statement",
      "tokens": [
        50364,
        13059,
        281,
        2074,
        293,
        321,
        362,
        257,
        1702,
        498,
        1646,
        5629,
        50576
      ],
      "temperature": 0.0,
      "avg_logprob": -0.040901364951298154,
      "compression_ratio": 1.988,
      "no_speech_prob": 0.01043874491006136,
      "confidence": 0.9895612550899386
    },
    {
      "id": 186,
      "start": 740.08,
      "end": 742.88,
      "text": "here to test all of these so we're going to make a few different",
      "tokens": [
        50576,
        510,
        281,
        1500,
        439,
        295,
        613,
        370,
        321,
        434,
        516,
        281,
        652,
        257,
        1326,
        819,
        50716
      ],
      "temperature": 0.0,
      "avg_logprob": -0.040901364951298154,
      "compression_ratio": 1.988,
      "no_speech_prob": 0.01043874491006136,
      "confidence": 0.9895612550899386
    },
    {
      "id": 187,
      "start": 742.88,
      "end": 745.84,
      "text": "conditions here and if that condition evaluates to true",
      "tokens": [
        50716,
        4487,
        510,
        293,
        498,
        300,
        4188,
        6133,
        1024,
        281,
        2074,
        50864
      ],
      "temperature": 0.0,
      "avg_logprob": -0.040901364951298154,
      "compression_ratio": 1.988,
      "no_speech_prob": 0.01043874491006136,
      "confidence": 0.9895612550899386
    },
    {
      "id": 188,
      "start": 745.84,
      "end": 749.52,
      "text": "we'll print out evaluated true else evaluated to false",
      "tokens": [
        50864,
        321,
        603,
        4482,
        484,
        25509,
        2074,
        1646,
        25509,
        281,
        7908,
        51048
      ],
      "temperature": 0.0,
      "avg_logprob": -0.040901364951298154,
      "compression_ratio": 1.988,
      "no_speech_prob": 0.01043874491006136,
      "confidence": 0.9895612550899386
    },
    {
      "id": 189,
      "start": 749.52,
      "end": 753.52,
      "text": "and my comments here are all the things in python that evaluate to false",
      "tokens": [
        51048,
        293,
        452,
        3053,
        510,
        366,
        439,
        264,
        721,
        294,
        38797,
        300,
        13059,
        281,
        7908,
        51248
      ],
      "temperature": 0.0,
      "avg_logprob": -0.040901364951298154,
      "compression_ratio": 1.988,
      "no_speech_prob": 0.01043874491006136,
      "confidence": 0.9895612550899386
    },
    {
      "id": 190,
      "start": 753.52,
      "end": 756.8000000000001,
      "text": "values so the first one is the most obvious",
      "tokens": [
        51248,
        4190,
        370,
        264,
        700,
        472,
        307,
        264,
        881,
        6322,
        51412
      ],
      "temperature": 0.0,
      "avg_logprob": -0.040901364951298154,
      "compression_ratio": 1.988,
      "no_speech_prob": 0.01043874491006136,
      "confidence": 0.9895612550899386
    },
    {
      "id": 191,
      "start": 756.8000000000001,
      "end": 761.9200000000001,
      "text": "if we set a conditional equal to false then it's going to evaluate to false",
      "tokens": [
        51412,
        498,
        321,
        992,
        257,
        27708,
        2681,
        281,
        7908,
        550,
        309,
        311,
        516,
        281,
        13059,
        281,
        7908,
        51668
      ],
      "temperature": 0.0,
      "avg_logprob": -0.040901364951298154,
      "compression_ratio": 1.988,
      "no_speech_prob": 0.01043874491006136,
      "confidence": 0.9895612550899386
    },
    {
      "id": 192,
      "start": 761.9200000000001,
      "end": 765.76,
      "text": "and this one would include all the comparison operations that we just saw",
      "tokens": [
        51668,
        293,
        341,
        472,
        576,
        4090,
        439,
        264,
        9660,
        7705,
        300,
        321,
        445,
        1866,
        51860
      ],
      "temperature": 0.0,
      "avg_logprob": -0.040901364951298154,
      "compression_ratio": 1.988,
      "no_speech_prob": 0.01043874491006136,
      "confidence": 0.9895612550899386
    },
    {
      "id": 193,
      "start": 765.84,
      "end": 769.12,
      "text": "so they would return true or false so if I run this",
      "tokens": [
        50368,
        370,
        436,
        576,
        2736,
        2074,
        420,
        7908,
        370,
        498,
        286,
        1190,
        341,
        50532
      ],
      "temperature": 0.0,
      "avg_logprob": -0.048707745291969994,
      "compression_ratio": 2.175531914893617,
      "no_speech_prob": 0.000556073384359479,
      "confidence": 0.9994439266156405
    },
    {
      "id": 194,
      "start": 769.12,
      "end": 772.8,
      "text": "then we can see that obviously our conditional evaluated to false here",
      "tokens": [
        50532,
        550,
        321,
        393,
        536,
        300,
        2745,
        527,
        27708,
        25509,
        281,
        7908,
        510,
        50716
      ],
      "temperature": 0.0,
      "avg_logprob": -0.048707745291969994,
      "compression_ratio": 2.175531914893617,
      "no_speech_prob": 0.000556073384359479,
      "confidence": 0.9994439266156405
    },
    {
      "id": 195,
      "start": 772.8,
      "end": 777.6,
      "text": "since we set our condition equal to false now the next value in our list here",
      "tokens": [
        50716,
        1670,
        321,
        992,
        527,
        4188,
        2681,
        281,
        7908,
        586,
        264,
        958,
        2158,
        294,
        527,
        1329,
        510,
        50956
      ],
      "temperature": 0.0,
      "avg_logprob": -0.048707745291969994,
      "compression_ratio": 2.175531914893617,
      "no_speech_prob": 0.000556073384359479,
      "confidence": 0.9994439266156405
    },
    {
      "id": 196,
      "start": 777.6,
      "end": 782.24,
      "text": "is none so none actually evaluates to false as well",
      "tokens": [
        50956,
        307,
        6022,
        370,
        6022,
        767,
        6133,
        1024,
        281,
        7908,
        382,
        731,
        51188
      ],
      "temperature": 0.0,
      "avg_logprob": -0.048707745291969994,
      "compression_ratio": 2.175531914893617,
      "no_speech_prob": 0.000556073384359479,
      "confidence": 0.9994439266156405
    },
    {
      "id": 197,
      "start": 782.24,
      "end": 785.4399999999999,
      "text": "so if we put that value in as our conditional and",
      "tokens": [
        51188,
        370,
        498,
        321,
        829,
        300,
        2158,
        294,
        382,
        527,
        27708,
        293,
        51348
      ],
      "temperature": 0.0,
      "avg_logprob": -0.048707745291969994,
      "compression_ratio": 2.175531914893617,
      "no_speech_prob": 0.000556073384359479,
      "confidence": 0.9994439266156405
    },
    {
      "id": 198,
      "start": 785.4399999999999,
      "end": 789.2,
      "text": "run this then we can see that with our condition equal to none",
      "tokens": [
        51348,
        1190,
        341,
        550,
        321,
        393,
        536,
        300,
        365,
        527,
        4188,
        2681,
        281,
        6022,
        51536
      ],
      "temperature": 0.0,
      "avg_logprob": -0.048707745291969994,
      "compression_ratio": 2.175531914893617,
      "no_speech_prob": 0.000556073384359479,
      "confidence": 0.9994439266156405
    },
    {
      "id": 199,
      "start": 789.2,
      "end": 792.72,
      "text": "that that condition also evaluates to false",
      "tokens": [
        51536,
        300,
        300,
        4188,
        611,
        6133,
        1024,
        281,
        7908,
        51712
      ],
      "temperature": 0.0,
      "avg_logprob": -0.048707745291969994,
      "compression_ratio": 2.175531914893617,
      "no_speech_prob": 0.000556073384359479,
      "confidence": 0.9994439266156405
    },
    {
      "id": 200,
      "start": 792.72,
      "end": 797.0400000000001,
      "text": "now this next one here isn't always so obvious so if you have a numeric",
      "tokens": [
        50364,
        586,
        341,
        958,
        472,
        510,
        1943,
        380,
        1009,
        370,
        6322,
        370,
        498,
        291,
        362,
        257,
        7866,
        299,
        50580
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05474931270152599,
      "compression_ratio": 1.9780701754385965,
      "no_speech_prob": 0.0014027991564944386,
      "confidence": 0.9985972008435056
    },
    {
      "id": 201,
      "start": 797.0400000000001,
      "end": 803.0400000000001,
      "text": "data type and pass it into a conditional then zero will evaluate to false so if",
      "tokens": [
        50580,
        1412,
        2010,
        293,
        1320,
        309,
        666,
        257,
        27708,
        550,
        4018,
        486,
        13059,
        281,
        7908,
        370,
        498,
        50880
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05474931270152599,
      "compression_ratio": 1.9780701754385965,
      "no_speech_prob": 0.0014027991564944386,
      "confidence": 0.9985972008435056
    },
    {
      "id": 202,
      "start": 803.0400000000001,
      "end": 807.28,
      "text": "we set this condition equal to zero and run this then we",
      "tokens": [
        50880,
        321,
        992,
        341,
        4188,
        2681,
        281,
        4018,
        293,
        1190,
        341,
        550,
        321,
        51092
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05474931270152599,
      "compression_ratio": 1.9780701754385965,
      "no_speech_prob": 0.0014027991564944386,
      "confidence": 0.9985972008435056
    },
    {
      "id": 203,
      "start": 807.28,
      "end": 811.6800000000001,
      "text": "can see that that evaluated to false but if we set this to any other number",
      "tokens": [
        51092,
        393,
        536,
        300,
        300,
        25509,
        281,
        7908,
        457,
        498,
        321,
        992,
        341,
        281,
        604,
        661,
        1230,
        51312
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05474931270152599,
      "compression_ratio": 1.9780701754385965,
      "no_speech_prob": 0.0014027991564944386,
      "confidence": 0.9985972008435056
    },
    {
      "id": 204,
      "start": 811.6800000000001,
      "end": 815.6,
      "text": "so if our condition is 10 instead of zero and run that",
      "tokens": [
        51312,
        370,
        498,
        527,
        4188,
        307,
        1266,
        2602,
        295,
        4018,
        293,
        1190,
        300,
        51508
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05474931270152599,
      "compression_ratio": 1.9780701754385965,
      "no_speech_prob": 0.0014027991564944386,
      "confidence": 0.9985972008435056
    },
    {
      "id": 205,
      "start": 815.6,
      "end": 818.5600000000001,
      "text": "then we can see that that evaluated to true",
      "tokens": [
        51508,
        550,
        321,
        393,
        536,
        300,
        300,
        25509,
        281,
        2074,
        51656
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05474931270152599,
      "compression_ratio": 1.9780701754385965,
      "no_speech_prob": 0.0014027991564944386,
      "confidence": 0.9985972008435056
    },
    {
      "id": 206,
      "start": 818.5600000000001,
      "end": 821.6800000000001,
      "text": "so that's something to keep in mind there when working with numbers",
      "tokens": [
        51656,
        370,
        300,
        311,
        746,
        281,
        1066,
        294,
        1575,
        456,
        562,
        1364,
        365,
        3547,
        51812
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05474931270152599,
      "compression_ratio": 1.9780701754385965,
      "no_speech_prob": 0.0014027991564944386,
      "confidence": 0.9985972008435056
    },
    {
      "id": 207,
      "start": 821.68,
      "end": 824.7199999999999,
      "text": "because you don't want to accidentally pass in a",
      "tokens": [
        50364,
        570,
        291,
        500,
        380,
        528,
        281,
        15715,
        1320,
        294,
        257,
        50516
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05512675498295756,
      "compression_ratio": 1.8669724770642202,
      "no_speech_prob": 0.031797632575035095,
      "confidence": 0.9682023674249649
    },
    {
      "id": 208,
      "start": 824.7199999999999,
      "end": 827.76,
      "text": "zero that you think would be true but it evaluates to false",
      "tokens": [
        50516,
        4018,
        300,
        291,
        519,
        576,
        312,
        2074,
        457,
        309,
        6133,
        1024,
        281,
        7908,
        50668
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05512675498295756,
      "compression_ratio": 1.8669724770642202,
      "no_speech_prob": 0.031797632575035095,
      "confidence": 0.9682023674249649
    },
    {
      "id": 209,
      "start": 827.76,
      "end": 830.88,
      "text": "okay so moving on down the list if we have any",
      "tokens": [
        50668,
        1392,
        370,
        2684,
        322,
        760,
        264,
        1329,
        498,
        321,
        362,
        604,
        50824
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05512675498295756,
      "compression_ratio": 1.8669724770642202,
      "no_speech_prob": 0.031797632575035095,
      "confidence": 0.9682023674249649
    },
    {
      "id": 210,
      "start": 830.88,
      "end": 834.0,
      "text": "empty sequence and pass it into a conditional",
      "tokens": [
        50824,
        6707,
        8310,
        293,
        1320,
        309,
        666,
        257,
        27708,
        50980
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05512675498295756,
      "compression_ratio": 1.8669724770642202,
      "no_speech_prob": 0.031797632575035095,
      "confidence": 0.9682023674249649
    },
    {
      "id": 211,
      "start": 834.0,
      "end": 838.0799999999999,
      "text": "then that will evaluate to false so this can be an empty string",
      "tokens": [
        50980,
        550,
        300,
        486,
        13059,
        281,
        7908,
        370,
        341,
        393,
        312,
        364,
        6707,
        6798,
        51184
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05512675498295756,
      "compression_ratio": 1.8669724770642202,
      "no_speech_prob": 0.031797632575035095,
      "confidence": 0.9682023674249649
    },
    {
      "id": 212,
      "start": 838.0799999999999,
      "end": 843.1999999999999,
      "text": "an empty list an empty tuple so for example if i just set this condition",
      "tokens": [
        51184,
        364,
        6707,
        1329,
        364,
        6707,
        2604,
        781,
        370,
        337,
        1365,
        498,
        741,
        445,
        992,
        341,
        4188,
        51440
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05512675498295756,
      "compression_ratio": 1.8669724770642202,
      "no_speech_prob": 0.031797632575035095,
      "confidence": 0.9682023674249649
    },
    {
      "id": 213,
      "start": 843.1999999999999,
      "end": 847.92,
      "text": "to an empty list and run this then we can see that that evaluates to",
      "tokens": [
        51440,
        281,
        364,
        6707,
        1329,
        293,
        1190,
        341,
        550,
        321,
        393,
        536,
        300,
        300,
        6133,
        1024,
        281,
        51676
      ],
      "temperature": 0.0,
      "avg_logprob": -0.05512675498295756,
      "compression_ratio": 1.8669724770642202,
      "no_speech_prob": 0.031797632575035095,
      "confidence": 0.9682023674249649
    },
    {
      "id": 214,
      "start": 847.92,
      "end": 851.76,
      "text": "false and if you have an empty string that evaluates to false",
      "tokens": [
        50364,
        7908,
        293,
        498,
        291,
        362,
        364,
        6707,
        6798,
        300,
        6133,
        1024,
        281,
        7908,
        50556
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0603625315044998,
      "compression_ratio": 2.05726872246696,
      "no_speech_prob": 0.16374380886554718,
      "confidence": 0.8362561911344528
    },
    {
      "id": 215,
      "start": 851.76,
      "end": 855.36,
      "text": "also and now lastly here in our list empty",
      "tokens": [
        50556,
        611,
        293,
        586,
        16386,
        510,
        294,
        527,
        1329,
        6707,
        50736
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0603625315044998,
      "compression_ratio": 2.05726872246696,
      "no_speech_prob": 0.16374380886554718,
      "confidence": 0.8362561911344528
    },
    {
      "id": 216,
      "start": 855.36,
      "end": 859.52,
      "text": "mapping so an empty mapping which is basically an empty dictionary",
      "tokens": [
        50736,
        18350,
        370,
        364,
        6707,
        18350,
        597,
        307,
        1936,
        364,
        6707,
        25890,
        50944
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0603625315044998,
      "compression_ratio": 2.05726872246696,
      "no_speech_prob": 0.16374380886554718,
      "confidence": 0.8362561911344528
    },
    {
      "id": 217,
      "start": 859.52,
      "end": 862.64,
      "text": "this evaluates to false as well so if i pass in",
      "tokens": [
        50944,
        341,
        6133,
        1024,
        281,
        7908,
        382,
        731,
        370,
        498,
        741,
        1320,
        294,
        51100
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0603625315044998,
      "compression_ratio": 2.05726872246696,
      "no_speech_prob": 0.16374380886554718,
      "confidence": 0.8362561911344528
    },
    {
      "id": 218,
      "start": 862.64,
      "end": 866.24,
      "text": "an empty dictionary here and run this then we can see that that empty",
      "tokens": [
        51100,
        364,
        6707,
        25890,
        510,
        293,
        1190,
        341,
        550,
        321,
        393,
        536,
        300,
        300,
        6707,
        51280
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0603625315044998,
      "compression_ratio": 2.05726872246696,
      "no_speech_prob": 0.16374380886554718,
      "confidence": 0.8362561911344528
    },
    {
      "id": 219,
      "start": 866.24,
      "end": 870.16,
      "text": "dictionary also evaluated to false now knowing these types of things can be",
      "tokens": [
        51280,
        25890,
        611,
        25509,
        281,
        7908,
        586,
        5276,
        613,
        3467,
        295,
        721,
        393,
        312,
        51476
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0603625315044998,
      "compression_ratio": 2.05726872246696,
      "no_speech_prob": 0.16374380886554718,
      "confidence": 0.8362561911344528
    },
    {
      "id": 220,
      "start": 870.16,
      "end": 872.3199999999999,
      "text": "useful because let's say that you have a",
      "tokens": [
        51476,
        4420,
        570,
        718,
        311,
        584,
        300,
        291,
        362,
        257,
        51584
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0603625315044998,
      "compression_ratio": 2.05726872246696,
      "no_speech_prob": 0.16374380886554718,
      "confidence": 0.8362561911344528
    },
    {
      "id": 221,
      "start": 872.3199999999999,
      "end": 875.68,
      "text": "function or something that is supposed to return some values",
      "tokens": [
        51584,
        2445,
        420,
        746,
        300,
        307,
        3442,
        281,
        2736,
        512,
        4190,
        51752
      ],
      "temperature": 0.0,
      "avg_logprob": -0.0603625315044998,
      "compression_ratio": 2.05726872246696,
      "no_speech_prob": 0.16374380886554718,
      "confidence": 0.8362561911344528
    },
    {
      "id": 222,
      "start": 875.68,
      "end": 879.52,
      "text": "now sometimes it's needed to check if those values are actually there",
      "tokens": [
        50364,
        586,
        2171,
        309,
        311,
        2978,
        281,
        1520,
        498,
        729,
        4190,
        366,
        767,
        456,
        50556
      ],
      "temperature": 0.0,
      "avg_logprob": -0.03554583383985788,
      "compression_ratio": 2.0187265917602994,
      "no_speech_prob": 0.14864316582679749,
      "confidence": 0.8513568341732025
    },
    {
      "id": 223,
      "start": 879.52,
      "end": 884.4,
      "text": "so you could just pass in these sequences into a conditional to check",
      "tokens": [
        50556,
        370,
        291,
        727,
        445,
        1320,
        294,
        613,
        22978,
        666,
        257,
        27708,
        281,
        1520,
        50800
      ],
      "temperature": 0.0,
      "avg_logprob": -0.03554583383985788,
      "compression_ratio": 2.0187265917602994,
      "no_speech_prob": 0.14864316582679749,
      "confidence": 0.8513568341732025
    },
    {
      "id": 224,
      "start": 884.4,
      "end": 887.4399999999999,
      "text": "whether a string is empty or a dictionary is empty",
      "tokens": [
        50800,
        1968,
        257,
        6798,
        307,
        6707,
        420,
        257,
        25890,
        307,
        6707,
        50952
      ],
      "temperature": 0.0,
      "avg_logprob": -0.03554583383985788,
      "compression_ratio": 2.0187265917602994,
      "no_speech_prob": 0.14864316582679749,
      "confidence": 0.8513568341732025
    },
    {
      "id": 225,
      "start": 887.4399999999999,
      "end": 890.8,
      "text": "and you don't actually have to call any specific method you can just",
      "tokens": [
        50952,
        293,
        291,
        500,
        380,
        767,
        362,
        281,
        818,
        604,
        2685,
        3170,
        291,
        393,
        445,
        51120
      ],
      "temperature": 0.0,
      "avg_logprob": -0.03554583383985788,
      "compression_ratio": 2.0187265917602994,
      "no_speech_prob": 0.14864316582679749,
      "confidence": 0.8513568341732025
    },
    {
      "id": 226,
      "start": 890.8,
      "end": 894.88,
      "text": "pass in the empty sequence or the empty dictionary and it'll evaluate the true",
      "tokens": [
        51120,
        1320,
        294,
        264,
        6707,
        8310,
        420,
        264,
        6707,
        25890,
        293,
        309,
        603,
        13059,
        264,
        2074,
        51324
      ],
      "temperature": 0.0,
      "avg_logprob": -0.03554583383985788,
      "compression_ratio": 2.0187265917602994,
      "no_speech_prob": 0.14864316582679749,
      "confidence": 0.8513568341732025
    },
    {
      "id": 227,
      "start": 894.88,
      "end": 898.2399999999999,
      "text": "or false if that is empty now there are also some user defined",
      "tokens": [
        51324,
        420,
        7908,
        498,
        300,
        307,
        6707,
        586,
        456,
        366,
        611,
        512,
        4195,
        7642,
        51492
      ],
      "temperature": 0.0,
      "avg_logprob": -0.03554583383985788,
      "compression_ratio": 2.0187265917602994,
      "no_speech_prob": 0.14864316582679749,
      "confidence": 0.8513568341732025
    },
    {
      "id": 228,
      "start": 898.2399999999999,
      "end": 901.5999999999999,
      "text": "classes that can evaluate to false but these are the majority of the",
      "tokens": [
        51492,
        5359,
        300,
        393,
        13059,
        281,
        7908,
        457,
        613,
        366,
        264,
        6286,
        295,
        264,
        51660
      ],
      "temperature": 0.0,
      "avg_logprob": -0.03554583383985788,
      "compression_ratio": 2.0187265917602994,
      "no_speech_prob": 0.14864316582679749,
      "confidence": 0.8513568341732025
    },
    {
      "id": 229,
      "start": 901.5999999999999,
      "end": 905.12,
      "text": "conditions that will be checking so now that we know everything that",
      "tokens": [
        51660,
        4487,
        300,
        486,
        312,
        8568,
        370,
        586,
        300,
        321,
        458,
        1203,
        300,
        51836
      ],
      "temperature": 0.0,
      "avg_logprob": -0.03554583383985788,
      "compression_ratio": 2.0187265917602994,
      "no_speech_prob": 0.14864316582679749,
      "confidence": 0.8513568341732025
    },
    {
      "id": 230,
      "start": 905.12,
      "end": 908.72,
      "text": "evaluates to false then everything else is obviously going to",
      "tokens": [
        50364,
        6133,
        1024,
        281,
        7908,
        550,
        1203,
        1646,
        307,
        2745,
        516,
        281,
        50544
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04877020798477472,
      "compression_ratio": 1.9008620689655173,
      "no_speech_prob": 0.006315102335065603,
      "confidence": 0.9936848976649344
    },
    {
      "id": 231,
      "start": 908.72,
      "end": 912.96,
      "text": "evaluate to true so you know for example just to",
      "tokens": [
        50544,
        13059,
        281,
        2074,
        370,
        291,
        458,
        337,
        1365,
        445,
        281,
        50756
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04877020798477472,
      "compression_ratio": 1.9008620689655173,
      "no_speech_prob": 0.006315102335065603,
      "confidence": 0.9936848976649344
    },
    {
      "id": 232,
      "start": 912.96,
      "end": 916.72,
      "text": "do another example here if i set this condition equal to",
      "tokens": [
        50756,
        360,
        1071,
        1365,
        510,
        498,
        741,
        992,
        341,
        4188,
        2681,
        281,
        50944
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04877020798477472,
      "compression_ratio": 1.9008620689655173,
      "no_speech_prob": 0.006315102335065603,
      "confidence": 0.9936848976649344
    },
    {
      "id": 233,
      "start": 916.72,
      "end": 921.76,
      "text": "a string that just says test now an empty string would evaluate the false",
      "tokens": [
        50944,
        257,
        6798,
        300,
        445,
        1619,
        1500,
        586,
        364,
        6707,
        6798,
        576,
        13059,
        264,
        7908,
        51196
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04877020798477472,
      "compression_ratio": 1.9008620689655173,
      "no_speech_prob": 0.006315102335065603,
      "confidence": 0.9936848976649344
    },
    {
      "id": 234,
      "start": 921.76,
      "end": 925.44,
      "text": "so if we pass that in then we can see that that a string",
      "tokens": [
        51196,
        370,
        498,
        321,
        1320,
        300,
        294,
        550,
        321,
        393,
        536,
        300,
        300,
        257,
        6798,
        51380
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04877020798477472,
      "compression_ratio": 1.9008620689655173,
      "no_speech_prob": 0.006315102335065603,
      "confidence": 0.9936848976649344
    },
    {
      "id": 235,
      "start": 925.44,
      "end": 929.36,
      "text": "with some characters evaluated to true so that's really important when working",
      "tokens": [
        51380,
        365,
        512,
        4342,
        25509,
        281,
        2074,
        370,
        300,
        311,
        534,
        1021,
        562,
        1364,
        51576
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04877020798477472,
      "compression_ratio": 1.9008620689655173,
      "no_speech_prob": 0.006315102335065603,
      "confidence": 0.9936848976649344
    },
    {
      "id": 236,
      "start": 929.36,
      "end": 932.96,
      "text": "with these conditionals is just having an idea of what is going",
      "tokens": [
        51576,
        365,
        613,
        4188,
        1124,
        307,
        445,
        1419,
        364,
        1558,
        295,
        437,
        307,
        516,
        51756
      ],
      "temperature": 0.0,
      "avg_logprob": -0.04877020798477472,
      "compression_ratio": 1.9008620689655173,
      "no_speech_prob": 0.006315102335065603,
      "confidence": 0.9936848976649344
    },
    {
      "id": 237,
      "start": 932.96,
      "end": 936.4000000000001,
      "text": "to evaluate the true and what's going to evaluate to false",
      "tokens": [
        50364,
        281,
        13059,
        264,
        2074,
        293,
        437,
        311,
        516,
        281,
        13059,
        281,
        7908,
        50536
      ],
      "temperature": 0.0,
      "avg_logprob": -0.036537487166268486,
      "compression_ratio": 1.9206349206349207,
      "no_speech_prob": 0.2664405405521393,
      "confidence": 0.7335594594478607
    },
    {
      "id": 238,
      "start": 936.4000000000001,
      "end": 939.6800000000001,
      "text": "okay so i think that is going to do it for this video i hope that now everyone",
      "tokens": [
        50536,
        1392,
        370,
        741,
        519,
        300,
        307,
        516,
        281,
        360,
        309,
        337,
        341,
        960,
        741,
        1454,
        300,
        586,
        1518,
        50700
      ],
      "temperature": 0.0,
      "avg_logprob": -0.036537487166268486,
      "compression_ratio": 1.9206349206349207,
      "no_speech_prob": 0.2664405405521393,
      "confidence": 0.7335594594478607
    },
    {
      "id": 239,
      "start": 939.6800000000001,
      "end": 942.72,
      "text": "has a clear understanding of how these conditionals work and all the",
      "tokens": [
        50700,
        575,
        257,
        1850,
        3701,
        295,
        577,
        613,
        4188,
        1124,
        589,
        293,
        439,
        264,
        50852
      ],
      "temperature": 0.0,
      "avg_logprob": -0.036537487166268486,
      "compression_ratio": 1.9206349206349207,
      "no_speech_prob": 0.2664405405521393,
      "confidence": 0.7335594594478607
    },
    {
      "id": 240,
      "start": 942.72,
      "end": 946.4000000000001,
      "text": "different ways that python determines what values are true and false",
      "tokens": [
        50852,
        819,
        2098,
        300,
        38797,
        24799,
        437,
        4190,
        366,
        2074,
        293,
        7908,
        51036
      ],
      "temperature": 0.0,
      "avg_logprob": -0.036537487166268486,
      "compression_ratio": 1.9206349206349207,
      "no_speech_prob": 0.2664405405521393,
      "confidence": 0.7335594594478607
    },
    {
      "id": 241,
      "start": 946.4000000000001,
      "end": 950.32,
      "text": "now in the next video we'll be learning about loops and iterations",
      "tokens": [
        51036,
        586,
        294,
        264,
        958,
        960,
        321,
        603,
        312,
        2539,
        466,
        16121,
        293,
        36540,
        51232
      ],
      "temperature": 0.0,
      "avg_logprob": -0.036537487166268486,
      "compression_ratio": 1.9206349206349207,
      "no_speech_prob": 0.2664405405521393,
      "confidence": 0.7335594594478607
    },
    {
      "id": 242,
      "start": 950.32,
      "end": 953.2800000000001,
      "text": "but if anyone has any questions about what we covered in this video",
      "tokens": [
        51232,
        457,
        498,
        2878,
        575,
        604,
        1651,
        466,
        437,
        321,
        5343,
        294,
        341,
        960,
        51380
      ],
      "temperature": 0.0,
      "avg_logprob": -0.036537487166268486,
      "compression_ratio": 1.9206349206349207,
      "no_speech_prob": 0.2664405405521393,
      "confidence": 0.7335594594478607
    },
    {
      "id": 243,
      "start": 953.2800000000001,
      "end": 956.1600000000001,
      "text": "then feel free to ask in the comment section below and i'll do my best to",
      "tokens": [
        51380,
        550,
        841,
        1737,
        281,
        1029,
        294,
        264,
        2871,
        3541,
        2507,
        293,
        741,
        603,
        360,
        452,
        1151,
        281,
        51524
      ],
      "temperature": 0.0,
      "avg_logprob": -0.036537487166268486,
      "compression_ratio": 1.9206349206349207,
      "no_speech_prob": 0.2664405405521393,
      "confidence": 0.7335594594478607
    },
    {
      "id": 244,
      "start": 956.1600000000001,
      "end": 958.48,
      "text": "answer those now if you enjoy these tutorials and",
      "tokens": [
        51524,
        1867,
        729,
        586,
        498,
        291,
        2103,
        613,
        17616,
        293,
        51640
      ],
      "temperature": 0.0,
      "avg_logprob": -0.036537487166268486,
      "compression_ratio": 1.9206349206349207,
      "no_speech_prob": 0.2664405405521393,
      "confidence": 0.7335594594478607
    },
    {
      "id": 245,
      "start": 958.48,
      "end": 961.0400000000001,
      "text": "would like to support them then there are several ways you can do that",
      "tokens": [
        51640,
        576,
        411,
        281,
        1406,
        552,
        550,
        456,
        366,
        2940,
        2098,
        291,
        393,
        360,
        300,
        51768
      ],
      "temperature": 0.0,
      "avg_logprob": -0.036537487166268486,
      "compression_ratio": 1.9206349206349207,
      "no_speech_prob": 0.2664405405521393,
      "confidence": 0.7335594594478607
    },
    {
      "id": 246,
      "start": 961.12,
      "end": 963.92,
      "text": "the easiest ways is simply like the video and give it a thumbs up",
      "tokens": [
        50368,
        264,
        12889,
        2098,
        307,
        2935,
        411,
        264,
        960,
        293,
        976,
        309,
        257,
        8838,
        493,
        50508
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11169220152355376,
      "compression_ratio": 1.7047619047619047,
      "no_speech_prob": 0.13629303872585297,
      "confidence": 0.863706961274147
    },
    {
      "id": 247,
      "start": 963.92,
      "end": 966.8,
      "text": "and also it's a huge help to share these videos with anyone who you think would",
      "tokens": [
        50508,
        293,
        611,
        309,
        311,
        257,
        2603,
        854,
        281,
        2073,
        613,
        2145,
        365,
        2878,
        567,
        291,
        519,
        576,
        50652
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11169220152355376,
      "compression_ratio": 1.7047619047619047,
      "no_speech_prob": 0.13629303872585297,
      "confidence": 0.863706961274147
    },
    {
      "id": 248,
      "start": 966.8,
      "end": 968.88,
      "text": "find them useful and if you have the means you can",
      "tokens": [
        50652,
        915,
        552,
        4420,
        293,
        498,
        291,
        362,
        264,
        1355,
        291,
        393,
        50756
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11169220152355376,
      "compression_ratio": 1.7047619047619047,
      "no_speech_prob": 0.13629303872585297,
      "confidence": 0.863706961274147
    },
    {
      "id": 249,
      "start": 968.88,
      "end": 971.8399999999999,
      "text": "contribute through patreon and there's a link to that page in the description",
      "tokens": [
        50756,
        10586,
        807,
        33161,
        293,
        456,
        311,
        257,
        2113,
        281,
        300,
        3028,
        294,
        264,
        3855,
        50904
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11169220152355376,
      "compression_ratio": 1.7047619047619047,
      "no_speech_prob": 0.13629303872585297,
      "confidence": 0.863706961274147
    },
    {
      "id": 250,
      "start": 971.8399999999999,
      "end": 974.48,
      "text": "section below be sure to subscribe for future videos",
      "tokens": [
        50904,
        3541,
        2507,
        312,
        988,
        281,
        3022,
        337,
        2027,
        2145,
        51036
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11169220152355376,
      "compression_ratio": 1.7047619047619047,
      "no_speech_prob": 0.13629303872585297,
      "confidence": 0.863706961274147
    },
    {
      "id": 251,
      "start": 974.48,
      "end": 979.8399999999999,
      "text": "and thank you all for watching",
      "tokens": [
        51036,
        293,
        1309,
        291,
        439,
        337,
        1976,
        51304
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11169220152355376,
      "compression_ratio": 1.7047619047619047,
      "no_speech_prob": 0.13629303872585297,
      "confidence": 0.863706961274147
    }
  ]
}